syntax = "proto3";

package ric.bots;

option go_package = "./ric-bots;ricbots";

service Bots {
  rpc Start(StartRequest) returns (EmptyResponse);
  rpc Stop(StopRequest) returns (EmptyResponse);
  rpc SetState(SetStateRequest) returns (EmptyResponse);
  rpc SetGeoConfig(SetGeoConfigRequest) returns (EmptyResponse);
  rpc PauseStopGeo(PauseStopGeoRequest) returns (EmptyResponse);
  rpc StartGeo(StartGeoRequest) returns (EmptyResponse);
  rpc AddToGenConfig(AddToGenConfigRequest) returns (EmptyResponse);
  rpc RemoveFromGenConfig(RemoveFromGenConfigRequest) returns (EmptyResponse);
  rpc SetBotConfig(SetBotConfigRequest) returns (EmptyResponse);
  rpc Call(CallRequest) returns (EmptyResponse);
}

message EmptyResponse {}

message StartRequest {
  string object_id = 1;
}

message StopRequest {
  string object_id = 1;
}

message SetStateRequest {
  message StateValue {
    oneof type {
      string string_val = 1;
      double double_val = 2;
      bool bool_val = 3;
    }
  }
  string object_id = 1;
  map<string, StateValue> state = 2;
}

message SetGeoConfigRequest {
  enum Mode {
    UNSET = 0; // error
    ONE_WAY = 1;
    TWO_WAY = 2;
  }
  message Point {
    double lat = 1;
    double lon = 2;
  }
  // @inject_tag: bson:"-"
  string object_id = 1;
  Mode mode = 2;
  bool repeat = 3;
  // @inject_tag: bson:",omitempty"
  map<string, string> map = 4;
  repeated Point track = 5;
}

message AddToGenConfigRequest {
  message RandomType {
    double min = 1;
    double max = 2;
  }
  message LinearType {
    double step = 1;
  }
  // @inject_tag: bson:"-"
  string object_id = 1;
  string name = 2;
  oneof type {
    RandomType random = 3;
    LinearType linear = 4;
  }
}

message RemoveFromGenConfigRequest {
  // @inject_tag: bson:"-"
  string object_id = 1;
  string name = 2;
}

message PauseStopGeoRequest {
  // @inject_tag: bson:"-"
  string object_id = 1;
  bool stop = 2;
}

message StartGeoRequest {
  // @inject_tag: bson:"-"
  string object_id = 1;
}

message SetBotConfigRequest {
  // @inject_tag: bson:"-"
  string object_id = 1;
  double send_interval = 2;
}

message CallRequest {
  // @inject_tag: bson:"-"
  string object_id = 1;
  string name = 2;
  map<string, string> params = 3;
}
