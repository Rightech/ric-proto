// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.7.0
// source: ric-bots/ricbots.proto

package ricbots

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetGeoConfigRequest_Mode int32

const (
	SetGeoConfigRequest_UNSET   SetGeoConfigRequest_Mode = 0 // error
	SetGeoConfigRequest_ONE_WAY SetGeoConfigRequest_Mode = 1
	SetGeoConfigRequest_TWO_WAY SetGeoConfigRequest_Mode = 2
)

// Enum value maps for SetGeoConfigRequest_Mode.
var (
	SetGeoConfigRequest_Mode_name = map[int32]string{
		0: "UNSET",
		1: "ONE_WAY",
		2: "TWO_WAY",
	}
	SetGeoConfigRequest_Mode_value = map[string]int32{
		"UNSET":   0,
		"ONE_WAY": 1,
		"TWO_WAY": 2,
	}
)

func (x SetGeoConfigRequest_Mode) Enum() *SetGeoConfigRequest_Mode {
	p := new(SetGeoConfigRequest_Mode)
	*p = x
	return p
}

func (x SetGeoConfigRequest_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetGeoConfigRequest_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_ric_bots_ricbots_proto_enumTypes[0].Descriptor()
}

func (SetGeoConfigRequest_Mode) Type() protoreflect.EnumType {
	return &file_ric_bots_ricbots_proto_enumTypes[0]
}

func (x SetGeoConfigRequest_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetGeoConfigRequest_Mode.Descriptor instead.
func (SetGeoConfigRequest_Mode) EnumDescriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{4, 0}
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{0}
}

type StartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{1}
}

func (x *StartRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{2}
}

func (x *StopRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type SetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string                                 `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	State    map[string]*SetStateRequest_StateValue `protobuf:"bytes,2,rep,name=state,proto3" json:"state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetStateRequest) Reset() {
	*x = SetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest) ProtoMessage() {}

func (x *SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest.ProtoReflect.Descriptor instead.
func (*SetStateRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{3}
}

func (x *SetStateRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *SetStateRequest) GetState() map[string]*SetStateRequest_StateValue {
	if x != nil {
		return x.State
	}
	return nil
}

type SetGeoConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"-"
	ObjectId string                   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty" bson:"-"`
	Mode     SetGeoConfigRequest_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=ric.bots.SetGeoConfigRequest_Mode" json:"mode,omitempty"`
	Repeat   bool                     `protobuf:"varint,3,opt,name=repeat,proto3" json:"repeat,omitempty"`
	// @inject_tag: bson:",omitempty"
	Map   map[string]string            `protobuf:"bytes,4,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:",omitempty"`
	Track []*SetGeoConfigRequest_Point `protobuf:"bytes,5,rep,name=track,proto3" json:"track,omitempty"`
}

func (x *SetGeoConfigRequest) Reset() {
	*x = SetGeoConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGeoConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGeoConfigRequest) ProtoMessage() {}

func (x *SetGeoConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGeoConfigRequest.ProtoReflect.Descriptor instead.
func (*SetGeoConfigRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{4}
}

func (x *SetGeoConfigRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *SetGeoConfigRequest) GetMode() SetGeoConfigRequest_Mode {
	if x != nil {
		return x.Mode
	}
	return SetGeoConfigRequest_UNSET
}

func (x *SetGeoConfigRequest) GetRepeat() bool {
	if x != nil {
		return x.Repeat
	}
	return false
}

func (x *SetGeoConfigRequest) GetMap() map[string]string {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *SetGeoConfigRequest) GetTrack() []*SetGeoConfigRequest_Point {
	if x != nil {
		return x.Track
	}
	return nil
}

type AddToGenConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"-"
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty" bson:"-"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Type:
	//	*AddToGenConfigRequest_Random
	//	*AddToGenConfigRequest_Linear
	Type isAddToGenConfigRequest_Type `protobuf_oneof:"type"`
}

func (x *AddToGenConfigRequest) Reset() {
	*x = AddToGenConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToGenConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToGenConfigRequest) ProtoMessage() {}

func (x *AddToGenConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToGenConfigRequest.ProtoReflect.Descriptor instead.
func (*AddToGenConfigRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{5}
}

func (x *AddToGenConfigRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *AddToGenConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *AddToGenConfigRequest) GetType() isAddToGenConfigRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *AddToGenConfigRequest) GetRandom() *AddToGenConfigRequest_RandomType {
	if x, ok := x.GetType().(*AddToGenConfigRequest_Random); ok {
		return x.Random
	}
	return nil
}

func (x *AddToGenConfigRequest) GetLinear() *AddToGenConfigRequest_LinearType {
	if x, ok := x.GetType().(*AddToGenConfigRequest_Linear); ok {
		return x.Linear
	}
	return nil
}

type isAddToGenConfigRequest_Type interface {
	isAddToGenConfigRequest_Type()
}

type AddToGenConfigRequest_Random struct {
	Random *AddToGenConfigRequest_RandomType `protobuf:"bytes,3,opt,name=random,proto3,oneof"`
}

type AddToGenConfigRequest_Linear struct {
	Linear *AddToGenConfigRequest_LinearType `protobuf:"bytes,4,opt,name=linear,proto3,oneof"`
}

func (*AddToGenConfigRequest_Random) isAddToGenConfigRequest_Type() {}

func (*AddToGenConfigRequest_Linear) isAddToGenConfigRequest_Type() {}

type RemoveFromGenConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"-"
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty" bson:"-"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RemoveFromGenConfigRequest) Reset() {
	*x = RemoveFromGenConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromGenConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromGenConfigRequest) ProtoMessage() {}

func (x *RemoveFromGenConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromGenConfigRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromGenConfigRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveFromGenConfigRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RemoveFromGenConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PauseStopGeoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"-"
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty" bson:"-"`
	Stop     bool   `protobuf:"varint,2,opt,name=stop,proto3" json:"stop,omitempty"`
}

func (x *PauseStopGeoRequest) Reset() {
	*x = PauseStopGeoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseStopGeoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseStopGeoRequest) ProtoMessage() {}

func (x *PauseStopGeoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseStopGeoRequest.ProtoReflect.Descriptor instead.
func (*PauseStopGeoRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{7}
}

func (x *PauseStopGeoRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *PauseStopGeoRequest) GetStop() bool {
	if x != nil {
		return x.Stop
	}
	return false
}

type StartGeoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"-"
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty" bson:"-"`
}

func (x *StartGeoRequest) Reset() {
	*x = StartGeoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGeoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGeoRequest) ProtoMessage() {}

func (x *StartGeoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGeoRequest.ProtoReflect.Descriptor instead.
func (*StartGeoRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{8}
}

func (x *StartGeoRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type SetBotConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"-"
	ObjectId     string  `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty" bson:"-"`
	SendInterval float64 `protobuf:"fixed64,2,opt,name=send_interval,json=sendInterval,proto3" json:"send_interval,omitempty"`
}

func (x *SetBotConfigRequest) Reset() {
	*x = SetBotConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBotConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBotConfigRequest) ProtoMessage() {}

func (x *SetBotConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBotConfigRequest.ProtoReflect.Descriptor instead.
func (*SetBotConfigRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{9}
}

func (x *SetBotConfigRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *SetBotConfigRequest) GetSendInterval() float64 {
	if x != nil {
		return x.SendInterval
	}
	return 0
}

type CallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"-"
	ObjectId string            `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty" bson:"-"`
	Name     string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Params   map[string]string `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CallRequest) Reset() {
	*x = CallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallRequest) ProtoMessage() {}

func (x *CallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallRequest.ProtoReflect.Descriptor instead.
func (*CallRequest) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{10}
}

func (x *CallRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *CallRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CallRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type SetStateRequest_StateValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*SetStateRequest_StateValue_StringVal
	//	*SetStateRequest_StateValue_DoubleVal
	//	*SetStateRequest_StateValue_BoolVal
	Type isSetStateRequest_StateValue_Type `protobuf_oneof:"type"`
}

func (x *SetStateRequest_StateValue) Reset() {
	*x = SetStateRequest_StateValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest_StateValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest_StateValue) ProtoMessage() {}

func (x *SetStateRequest_StateValue) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest_StateValue.ProtoReflect.Descriptor instead.
func (*SetStateRequest_StateValue) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{3, 0}
}

func (m *SetStateRequest_StateValue) GetType() isSetStateRequest_StateValue_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SetStateRequest_StateValue) GetStringVal() string {
	if x, ok := x.GetType().(*SetStateRequest_StateValue_StringVal); ok {
		return x.StringVal
	}
	return ""
}

func (x *SetStateRequest_StateValue) GetDoubleVal() float64 {
	if x, ok := x.GetType().(*SetStateRequest_StateValue_DoubleVal); ok {
		return x.DoubleVal
	}
	return 0
}

func (x *SetStateRequest_StateValue) GetBoolVal() bool {
	if x, ok := x.GetType().(*SetStateRequest_StateValue_BoolVal); ok {
		return x.BoolVal
	}
	return false
}

type isSetStateRequest_StateValue_Type interface {
	isSetStateRequest_StateValue_Type()
}

type SetStateRequest_StateValue_StringVal struct {
	StringVal string `protobuf:"bytes,1,opt,name=string_val,json=stringVal,proto3,oneof"`
}

type SetStateRequest_StateValue_DoubleVal struct {
	DoubleVal float64 `protobuf:"fixed64,2,opt,name=double_val,json=doubleVal,proto3,oneof"`
}

type SetStateRequest_StateValue_BoolVal struct {
	BoolVal bool `protobuf:"varint,3,opt,name=bool_val,json=boolVal,proto3,oneof"`
}

func (*SetStateRequest_StateValue_StringVal) isSetStateRequest_StateValue_Type() {}

func (*SetStateRequest_StateValue_DoubleVal) isSetStateRequest_StateValue_Type() {}

func (*SetStateRequest_StateValue_BoolVal) isSetStateRequest_StateValue_Type() {}

type SetGeoConfigRequest_Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon float64 `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
}

func (x *SetGeoConfigRequest_Point) Reset() {
	*x = SetGeoConfigRequest_Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGeoConfigRequest_Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGeoConfigRequest_Point) ProtoMessage() {}

func (x *SetGeoConfigRequest_Point) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGeoConfigRequest_Point.ProtoReflect.Descriptor instead.
func (*SetGeoConfigRequest_Point) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{4, 0}
}

func (x *SetGeoConfigRequest_Point) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *SetGeoConfigRequest_Point) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type AddToGenConfigRequest_RandomType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min float64 `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Max float64 `protobuf:"fixed64,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *AddToGenConfigRequest_RandomType) Reset() {
	*x = AddToGenConfigRequest_RandomType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToGenConfigRequest_RandomType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToGenConfigRequest_RandomType) ProtoMessage() {}

func (x *AddToGenConfigRequest_RandomType) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToGenConfigRequest_RandomType.ProtoReflect.Descriptor instead.
func (*AddToGenConfigRequest_RandomType) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{5, 0}
}

func (x *AddToGenConfigRequest_RandomType) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *AddToGenConfigRequest_RandomType) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type AddToGenConfigRequest_LinearType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step float64 `protobuf:"fixed64,1,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *AddToGenConfigRequest_LinearType) Reset() {
	*x = AddToGenConfigRequest_LinearType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_bots_ricbots_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToGenConfigRequest_LinearType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToGenConfigRequest_LinearType) ProtoMessage() {}

func (x *AddToGenConfigRequest_LinearType) ProtoReflect() protoreflect.Message {
	mi := &file_ric_bots_ricbots_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToGenConfigRequest_LinearType.ProtoReflect.Descriptor instead.
func (*AddToGenConfigRequest_LinearType) Descriptor() ([]byte, []int) {
	return file_ric_bots_ricbots_proto_rawDescGZIP(), []int{5, 1}
}

func (x *AddToGenConfigRequest_LinearType) GetStep() float64 {
	if x != nil {
		return x.Step
	}
	return 0
}

var File_ric_bots_ricbots_proto protoreflect.FileDescriptor

var file_ric_bots_ricbots_proto_rawDesc = []byte{
	0x0a, 0x16, 0x72, 0x69, 0x63, 0x2d, 0x62, 0x6f, 0x74, 0x73, 0x2f, 0x72, 0x69, 0x63, 0x62, 0x6f,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f,
	0x74, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x2a, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xbf, 0x02, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72,
	0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x73, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x09,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x6f, 0x6f,
	0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x62,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x5e,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89,
	0x03, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x47, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x12, 0x38, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x39, 0x0a,
	0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72,
	0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x1a, 0x2b, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x1a, 0x36, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2b, 0x0a,
	0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x4e, 0x45, 0x5f, 0x57, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x54, 0x57, 0x4f, 0x5f, 0x57, 0x41, 0x59, 0x10, 0x02, 0x22, 0xb0, 0x02, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x47, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x47, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x44, 0x0a, 0x06, 0x6c,
	0x69, 0x6e, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x69,
	0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x47, 0x65, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x61,
	0x72, 0x1a, 0x30, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x1a, 0x20, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a,
	0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x13,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x47, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x73, 0x74, 0x6f, 0x70, 0x22, 0x2e, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xb4, 0x01,
	0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x32, 0xaa, 0x05, 0x0a, 0x04, 0x42, 0x6f, 0x74, 0x73, 0x12, 0x38, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x15, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x72, 0x69,
	0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1d, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x65,
	0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x53, 0x74, 0x6f, 0x70, 0x47, 0x65, 0x6f, 0x12, 0x1d, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f,
	0x74, 0x73, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x47, 0x65, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x65, 0x6f, 0x12, 0x19, 0x2e, 0x72, 0x69,
	0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x65, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x47, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1f, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x54, 0x6f, 0x47, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x13, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x24, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62,
	0x6f, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1d, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x43, 0x61, 0x6c,
	0x6c, 0x12, 0x15, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x62,
	0x6f, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x72, 0x69, 0x63, 0x2d, 0x62, 0x6f, 0x74, 0x73, 0x3b,
	0x72, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ric_bots_ricbots_proto_rawDescOnce sync.Once
	file_ric_bots_ricbots_proto_rawDescData = file_ric_bots_ricbots_proto_rawDesc
)

func file_ric_bots_ricbots_proto_rawDescGZIP() []byte {
	file_ric_bots_ricbots_proto_rawDescOnce.Do(func() {
		file_ric_bots_ricbots_proto_rawDescData = protoimpl.X.CompressGZIP(file_ric_bots_ricbots_proto_rawDescData)
	})
	return file_ric_bots_ricbots_proto_rawDescData
}

var file_ric_bots_ricbots_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ric_bots_ricbots_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_ric_bots_ricbots_proto_goTypes = []interface{}{
	(SetGeoConfigRequest_Mode)(0),            // 0: ric.bots.SetGeoConfigRequest.Mode
	(*EmptyResponse)(nil),                    // 1: ric.bots.EmptyResponse
	(*StartRequest)(nil),                     // 2: ric.bots.StartRequest
	(*StopRequest)(nil),                      // 3: ric.bots.StopRequest
	(*SetStateRequest)(nil),                  // 4: ric.bots.SetStateRequest
	(*SetGeoConfigRequest)(nil),              // 5: ric.bots.SetGeoConfigRequest
	(*AddToGenConfigRequest)(nil),            // 6: ric.bots.AddToGenConfigRequest
	(*RemoveFromGenConfigRequest)(nil),       // 7: ric.bots.RemoveFromGenConfigRequest
	(*PauseStopGeoRequest)(nil),              // 8: ric.bots.PauseStopGeoRequest
	(*StartGeoRequest)(nil),                  // 9: ric.bots.StartGeoRequest
	(*SetBotConfigRequest)(nil),              // 10: ric.bots.SetBotConfigRequest
	(*CallRequest)(nil),                      // 11: ric.bots.CallRequest
	(*SetStateRequest_StateValue)(nil),       // 12: ric.bots.SetStateRequest.StateValue
	nil,                                      // 13: ric.bots.SetStateRequest.StateEntry
	(*SetGeoConfigRequest_Point)(nil),        // 14: ric.bots.SetGeoConfigRequest.Point
	nil,                                      // 15: ric.bots.SetGeoConfigRequest.MapEntry
	(*AddToGenConfigRequest_RandomType)(nil), // 16: ric.bots.AddToGenConfigRequest.RandomType
	(*AddToGenConfigRequest_LinearType)(nil), // 17: ric.bots.AddToGenConfigRequest.LinearType
	nil,                                      // 18: ric.bots.CallRequest.ParamsEntry
}
var file_ric_bots_ricbots_proto_depIdxs = []int32{
	13, // 0: ric.bots.SetStateRequest.state:type_name -> ric.bots.SetStateRequest.StateEntry
	0,  // 1: ric.bots.SetGeoConfigRequest.mode:type_name -> ric.bots.SetGeoConfigRequest.Mode
	15, // 2: ric.bots.SetGeoConfigRequest.map:type_name -> ric.bots.SetGeoConfigRequest.MapEntry
	14, // 3: ric.bots.SetGeoConfigRequest.track:type_name -> ric.bots.SetGeoConfigRequest.Point
	16, // 4: ric.bots.AddToGenConfigRequest.random:type_name -> ric.bots.AddToGenConfigRequest.RandomType
	17, // 5: ric.bots.AddToGenConfigRequest.linear:type_name -> ric.bots.AddToGenConfigRequest.LinearType
	18, // 6: ric.bots.CallRequest.params:type_name -> ric.bots.CallRequest.ParamsEntry
	12, // 7: ric.bots.SetStateRequest.StateEntry.value:type_name -> ric.bots.SetStateRequest.StateValue
	2,  // 8: ric.bots.Bots.Start:input_type -> ric.bots.StartRequest
	3,  // 9: ric.bots.Bots.Stop:input_type -> ric.bots.StopRequest
	4,  // 10: ric.bots.Bots.SetState:input_type -> ric.bots.SetStateRequest
	5,  // 11: ric.bots.Bots.SetGeoConfig:input_type -> ric.bots.SetGeoConfigRequest
	8,  // 12: ric.bots.Bots.PauseStopGeo:input_type -> ric.bots.PauseStopGeoRequest
	9,  // 13: ric.bots.Bots.StartGeo:input_type -> ric.bots.StartGeoRequest
	6,  // 14: ric.bots.Bots.AddToGenConfig:input_type -> ric.bots.AddToGenConfigRequest
	7,  // 15: ric.bots.Bots.RemoveFromGenConfig:input_type -> ric.bots.RemoveFromGenConfigRequest
	10, // 16: ric.bots.Bots.SetBotConfig:input_type -> ric.bots.SetBotConfigRequest
	11, // 17: ric.bots.Bots.Call:input_type -> ric.bots.CallRequest
	1,  // 18: ric.bots.Bots.Start:output_type -> ric.bots.EmptyResponse
	1,  // 19: ric.bots.Bots.Stop:output_type -> ric.bots.EmptyResponse
	1,  // 20: ric.bots.Bots.SetState:output_type -> ric.bots.EmptyResponse
	1,  // 21: ric.bots.Bots.SetGeoConfig:output_type -> ric.bots.EmptyResponse
	1,  // 22: ric.bots.Bots.PauseStopGeo:output_type -> ric.bots.EmptyResponse
	1,  // 23: ric.bots.Bots.StartGeo:output_type -> ric.bots.EmptyResponse
	1,  // 24: ric.bots.Bots.AddToGenConfig:output_type -> ric.bots.EmptyResponse
	1,  // 25: ric.bots.Bots.RemoveFromGenConfig:output_type -> ric.bots.EmptyResponse
	1,  // 26: ric.bots.Bots.SetBotConfig:output_type -> ric.bots.EmptyResponse
	1,  // 27: ric.bots.Bots.Call:output_type -> ric.bots.EmptyResponse
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_ric_bots_ricbots_proto_init() }
func file_ric_bots_ricbots_proto_init() {
	if File_ric_bots_ricbots_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ric_bots_ricbots_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGeoConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToGenConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromGenConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseStopGeoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGeoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBotConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest_StateValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGeoConfigRequest_Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToGenConfigRequest_RandomType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_bots_ricbots_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToGenConfigRequest_LinearType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ric_bots_ricbots_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AddToGenConfigRequest_Random)(nil),
		(*AddToGenConfigRequest_Linear)(nil),
	}
	file_ric_bots_ricbots_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*SetStateRequest_StateValue_StringVal)(nil),
		(*SetStateRequest_StateValue_DoubleVal)(nil),
		(*SetStateRequest_StateValue_BoolVal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ric_bots_ricbots_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ric_bots_ricbots_proto_goTypes,
		DependencyIndexes: file_ric_bots_ricbots_proto_depIdxs,
		EnumInfos:         file_ric_bots_ricbots_proto_enumTypes,
		MessageInfos:      file_ric_bots_ricbots_proto_msgTypes,
	}.Build()
	File_ric_bots_ricbots_proto = out.File
	file_ric_bots_ricbots_proto_rawDesc = nil
	file_ric_bots_ricbots_proto_goTypes = nil
	file_ric_bots_ricbots_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BotsClient is the client API for Bots service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BotsClient interface {
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	SetState(ctx context.Context, in *SetStateRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	SetGeoConfig(ctx context.Context, in *SetGeoConfigRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	PauseStopGeo(ctx context.Context, in *PauseStopGeoRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	StartGeo(ctx context.Context, in *StartGeoRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	AddToGenConfig(ctx context.Context, in *AddToGenConfigRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	RemoveFromGenConfig(ctx context.Context, in *RemoveFromGenConfigRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	SetBotConfig(ctx context.Context, in *SetBotConfigRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Call(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type botsClient struct {
	cc grpc.ClientConnInterface
}

func NewBotsClient(cc grpc.ClientConnInterface) BotsClient {
	return &botsClient{cc}
}

func (c *botsClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botsClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botsClient) SetState(ctx context.Context, in *SetStateRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/SetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botsClient) SetGeoConfig(ctx context.Context, in *SetGeoConfigRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/SetGeoConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botsClient) PauseStopGeo(ctx context.Context, in *PauseStopGeoRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/PauseStopGeo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botsClient) StartGeo(ctx context.Context, in *StartGeoRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/StartGeo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botsClient) AddToGenConfig(ctx context.Context, in *AddToGenConfigRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/AddToGenConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botsClient) RemoveFromGenConfig(ctx context.Context, in *RemoveFromGenConfigRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/RemoveFromGenConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botsClient) SetBotConfig(ctx context.Context, in *SetBotConfigRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/SetBotConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *botsClient) Call(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.bots.Bots/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BotsServer is the server API for Bots service.
type BotsServer interface {
	Start(context.Context, *StartRequest) (*EmptyResponse, error)
	Stop(context.Context, *StopRequest) (*EmptyResponse, error)
	SetState(context.Context, *SetStateRequest) (*EmptyResponse, error)
	SetGeoConfig(context.Context, *SetGeoConfigRequest) (*EmptyResponse, error)
	PauseStopGeo(context.Context, *PauseStopGeoRequest) (*EmptyResponse, error)
	StartGeo(context.Context, *StartGeoRequest) (*EmptyResponse, error)
	AddToGenConfig(context.Context, *AddToGenConfigRequest) (*EmptyResponse, error)
	RemoveFromGenConfig(context.Context, *RemoveFromGenConfigRequest) (*EmptyResponse, error)
	SetBotConfig(context.Context, *SetBotConfigRequest) (*EmptyResponse, error)
	Call(context.Context, *CallRequest) (*EmptyResponse, error)
}

// UnimplementedBotsServer can be embedded to have forward compatible implementations.
type UnimplementedBotsServer struct {
}

func (*UnimplementedBotsServer) Start(context.Context, *StartRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedBotsServer) Stop(context.Context, *StopRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedBotsServer) SetState(context.Context, *SetStateRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetState not implemented")
}
func (*UnimplementedBotsServer) SetGeoConfig(context.Context, *SetGeoConfigRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGeoConfig not implemented")
}
func (*UnimplementedBotsServer) PauseStopGeo(context.Context, *PauseStopGeoRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseStopGeo not implemented")
}
func (*UnimplementedBotsServer) StartGeo(context.Context, *StartGeoRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartGeo not implemented")
}
func (*UnimplementedBotsServer) AddToGenConfig(context.Context, *AddToGenConfigRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddToGenConfig not implemented")
}
func (*UnimplementedBotsServer) RemoveFromGenConfig(context.Context, *RemoveFromGenConfigRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFromGenConfig not implemented")
}
func (*UnimplementedBotsServer) SetBotConfig(context.Context, *SetBotConfigRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBotConfig not implemented")
}
func (*UnimplementedBotsServer) Call(context.Context, *CallRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}

func RegisterBotsServer(s *grpc.Server, srv BotsServer) {
	s.RegisterService(&_Bots_serviceDesc, srv)
}

func _Bots_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bots_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bots_SetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).SetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/SetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).SetState(ctx, req.(*SetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bots_SetGeoConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetGeoConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).SetGeoConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/SetGeoConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).SetGeoConfig(ctx, req.(*SetGeoConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bots_PauseStopGeo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseStopGeoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).PauseStopGeo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/PauseStopGeo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).PauseStopGeo(ctx, req.(*PauseStopGeoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bots_StartGeo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartGeoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).StartGeo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/StartGeo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).StartGeo(ctx, req.(*StartGeoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bots_AddToGenConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddToGenConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).AddToGenConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/AddToGenConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).AddToGenConfig(ctx, req.(*AddToGenConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bots_RemoveFromGenConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFromGenConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).RemoveFromGenConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/RemoveFromGenConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).RemoveFromGenConfig(ctx, req.(*RemoveFromGenConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bots_SetBotConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBotConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).SetBotConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/SetBotConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).SetBotConfig(ctx, req.(*SetBotConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bots_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotsServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.bots.Bots/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotsServer).Call(ctx, req.(*CallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bots_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ric.bots.Bots",
	HandlerType: (*BotsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Bots_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Bots_Stop_Handler,
		},
		{
			MethodName: "SetState",
			Handler:    _Bots_SetState_Handler,
		},
		{
			MethodName: "SetGeoConfig",
			Handler:    _Bots_SetGeoConfig_Handler,
		},
		{
			MethodName: "PauseStopGeo",
			Handler:    _Bots_PauseStopGeo_Handler,
		},
		{
			MethodName: "StartGeo",
			Handler:    _Bots_StartGeo_Handler,
		},
		{
			MethodName: "AddToGenConfig",
			Handler:    _Bots_AddToGenConfig_Handler,
		},
		{
			MethodName: "RemoveFromGenConfig",
			Handler:    _Bots_RemoveFromGenConfig_Handler,
		},
		{
			MethodName: "SetBotConfig",
			Handler:    _Bots_SetBotConfig_Handler,
		},
		{
			MethodName: "Call",
			Handler:    _Bots_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ric-bots/ricbots.proto",
}
