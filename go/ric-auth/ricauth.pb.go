// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.7.0
// source: ric-auth/ricauth.proto

package ricauth

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol string                            `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Object   string                            `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	ClientId string                            `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Username string                            `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password string                            `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Cert     *AuthObjectRequest_AuthObjectCert `protobuf:"bytes,6,opt,name=cert,proto3" json:"cert,omitempty"`
	Ipv4     string                            `protobuf:"bytes,7,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6     string                            `protobuf:"bytes,8,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
}

func (x *AuthObjectRequest) Reset() {
	*x = AuthObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthObjectRequest) ProtoMessage() {}

func (x *AuthObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthObjectRequest.ProtoReflect.Descriptor instead.
func (*AuthObjectRequest) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{0}
}

func (x *AuthObjectRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *AuthObjectRequest) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *AuthObjectRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthObjectRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthObjectRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthObjectRequest) GetCert() *AuthObjectRequest_AuthObjectCert {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *AuthObjectRequest) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *AuthObjectRequest) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

type AuthObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session   string                 `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	ModelId   string                 `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	ObjectId  string                 `protobuf:"bytes,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	GroupId   string                 `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupKey  string                 `protobuf:"bytes,5,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	Arguments []*AuthObjectArgument  `protobuf:"bytes,6,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Config    string                 `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	IssuedAt  int64                  `protobuf:"varint,8,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	ExpiresAt int64                  `protobuf:"varint,9,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Acl       []string               `protobuf:"bytes,10,rep,name=acl,proto3" json:"acl,omitempty"`
	LicenseId string                 `protobuf:"bytes,11,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	License   map[string]int64       `protobuf:"bytes,12,rep,name=license,proto3" json:"license,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Stats     map[string]*StatRecord `protobuf:"bytes,13,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AuthObjectResponse) Reset() {
	*x = AuthObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthObjectResponse) ProtoMessage() {}

func (x *AuthObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthObjectResponse.ProtoReflect.Descriptor instead.
func (*AuthObjectResponse) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{1}
}

func (x *AuthObjectResponse) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *AuthObjectResponse) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *AuthObjectResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *AuthObjectResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AuthObjectResponse) GetGroupKey() string {
	if x != nil {
		return x.GroupKey
	}
	return ""
}

func (x *AuthObjectResponse) GetArguments() []*AuthObjectArgument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *AuthObjectResponse) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *AuthObjectResponse) GetIssuedAt() int64 {
	if x != nil {
		return x.IssuedAt
	}
	return 0
}

func (x *AuthObjectResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *AuthObjectResponse) GetAcl() []string {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *AuthObjectResponse) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *AuthObjectResponse) GetLicense() map[string]int64 {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *AuthObjectResponse) GetStats() map[string]*StatRecord {
	if x != nil {
		return x.Stats
	}
	return nil
}

type AuthObjectArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DataType  string `protobuf:"bytes,2,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Reference string `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	Parser    string `protobuf:"bytes,4,opt,name=parser,proto3" json:"parser,omitempty"`
}

func (x *AuthObjectArgument) Reset() {
	*x = AuthObjectArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthObjectArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthObjectArgument) ProtoMessage() {}

func (x *AuthObjectArgument) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthObjectArgument.ProtoReflect.Descriptor instead.
func (*AuthObjectArgument) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{2}
}

func (x *AuthObjectArgument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthObjectArgument) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *AuthObjectArgument) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *AuthObjectArgument) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

type StatRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Left  int64 `protobuf:"varint,2,opt,name=left,proto3" json:"left,omitempty"`
	From  int64 `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To    int64 `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *StatRecord) Reset() {
	*x = StatRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRecord) ProtoMessage() {}

func (x *StatRecord) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRecord.ProtoReflect.Descriptor instead.
func (*StatRecord) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{3}
}

func (x *StatRecord) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *StatRecord) GetLeft() int64 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *StatRecord) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *StatRecord) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type IssueCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Ttl      string `protobuf:"bytes,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *IssueCertRequest) Reset() {
	*x = IssueCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueCertRequest) ProtoMessage() {}

func (x *IssueCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueCertRequest.ProtoReflect.Descriptor instead.
func (*IssueCertRequest) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{4}
}

func (x *IssueCertRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *IssueCertRequest) GetTtl() string {
	if x != nil {
		return x.Ttl
	}
	return ""
}

type IssueCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate string `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	PrivateKey  string `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Serial      string `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`
	IssuedAt    int64  `protobuf:"varint,4,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	ExpiresAt   int64  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *IssueCertResponse) Reset() {
	*x = IssueCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueCertResponse) ProtoMessage() {}

func (x *IssueCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueCertResponse.ProtoReflect.Descriptor instead.
func (*IssueCertResponse) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{5}
}

func (x *IssueCertResponse) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *IssueCertResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *IssueCertResponse) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *IssueCertResponse) GetIssuedAt() int64 {
	if x != nil {
		return x.IssuedAt
	}
	return 0
}

func (x *IssueCertResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type ModelInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId string `protobuf:"bytes,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
}

func (x *ModelInfoRequest) Reset() {
	*x = ModelInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelInfoRequest) ProtoMessage() {}

func (x *ModelInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelInfoRequest.ProtoReflect.Descriptor instead.
func (*ModelInfoRequest) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{6}
}

func (x *ModelInfoRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

type ModelInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId   string                `protobuf:"bytes,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Arguments []*AuthObjectArgument `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *ModelInfoResponse) Reset() {
	*x = ModelInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelInfoResponse) ProtoMessage() {}

func (x *ModelInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelInfoResponse.ProtoReflect.Descriptor instead.
func (*ModelInfoResponse) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{7}
}

func (x *ModelInfoResponse) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *ModelInfoResponse) GetArguments() []*AuthObjectArgument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type ObjectGateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *ObjectGateRequest) Reset() {
	*x = ObjectGateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectGateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectGateRequest) ProtoMessage() {}

func (x *ObjectGateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectGateRequest.ProtoReflect.Descriptor instead.
func (*ObjectGateRequest) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{8}
}

func (x *ObjectGateRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type ObjectGateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObjectGateResponse) Reset() {
	*x = ObjectGateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectGateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectGateResponse) ProtoMessage() {}

func (x *ObjectGateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectGateResponse.ProtoReflect.Descriptor instead.
func (*ObjectGateResponse) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{9}
}

type AuthObjectRequest_AuthObjectCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cn          string `protobuf:"bytes,1,opt,name=cn,proto3" json:"cn,omitempty"`
	Fingerprint string `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
}

func (x *AuthObjectRequest_AuthObjectCert) Reset() {
	*x = AuthObjectRequest_AuthObjectCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_auth_ricauth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthObjectRequest_AuthObjectCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthObjectRequest_AuthObjectCert) ProtoMessage() {}

func (x *AuthObjectRequest_AuthObjectCert) ProtoReflect() protoreflect.Message {
	mi := &file_ric_auth_ricauth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthObjectRequest_AuthObjectCert.ProtoReflect.Descriptor instead.
func (*AuthObjectRequest_AuthObjectCert) Descriptor() ([]byte, []int) {
	return file_ric_auth_ricauth_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AuthObjectRequest_AuthObjectCert) GetCn() string {
	if x != nil {
		return x.Cn
	}
	return ""
}

func (x *AuthObjectRequest_AuthObjectCert) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

var File_ric_auth_ricauth_proto protoreflect.FileDescriptor

var file_ric_auth_ricauth_proto_rawDesc = []byte{
	0x0a, 0x16, 0x72, 0x69, 0x63, 0x2d, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x72, 0x69, 0x63, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x22, 0xc8, 0x02, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x3e, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x65, 0x72, 0x74, 0x52, 0x04, 0x63, 0x65, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x1a, 0x42, 0x0a, 0x0e, 0x41, 0x75, 0x74,
	0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x63,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0xef, 0x04,
	0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x3a,
	0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x43, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x4e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x77, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x10, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x22, 0x2d, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x30, 0x0a, 0x11, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x14, 0x0a, 0x12, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf9, 0x02, 0x0a, 0x07, 0x52, 0x69, 0x63, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x47, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1b, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x72,
	0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43, 0x65,
	0x72, 0x74, 0x12, 0x1a, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x53,
	0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x69, 0x63,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x72, 0x69, 0x63, 0x2d, 0x61, 0x75, 0x74,
	0x68, 0x3b, 0x72, 0x69, 0x63, 0x61, 0x75, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ric_auth_ricauth_proto_rawDescOnce sync.Once
	file_ric_auth_ricauth_proto_rawDescData = file_ric_auth_ricauth_proto_rawDesc
)

func file_ric_auth_ricauth_proto_rawDescGZIP() []byte {
	file_ric_auth_ricauth_proto_rawDescOnce.Do(func() {
		file_ric_auth_ricauth_proto_rawDescData = protoimpl.X.CompressGZIP(file_ric_auth_ricauth_proto_rawDescData)
	})
	return file_ric_auth_ricauth_proto_rawDescData
}

var file_ric_auth_ricauth_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_ric_auth_ricauth_proto_goTypes = []interface{}{
	(*AuthObjectRequest)(nil),                // 0: ric.auth.AuthObjectRequest
	(*AuthObjectResponse)(nil),               // 1: ric.auth.AuthObjectResponse
	(*AuthObjectArgument)(nil),               // 2: ric.auth.AuthObjectArgument
	(*StatRecord)(nil),                       // 3: ric.auth.StatRecord
	(*IssueCertRequest)(nil),                 // 4: ric.auth.IssueCertRequest
	(*IssueCertResponse)(nil),                // 5: ric.auth.IssueCertResponse
	(*ModelInfoRequest)(nil),                 // 6: ric.auth.ModelInfoRequest
	(*ModelInfoResponse)(nil),                // 7: ric.auth.ModelInfoResponse
	(*ObjectGateRequest)(nil),                // 8: ric.auth.ObjectGateRequest
	(*ObjectGateResponse)(nil),               // 9: ric.auth.ObjectGateResponse
	(*AuthObjectRequest_AuthObjectCert)(nil), // 10: ric.auth.AuthObjectRequest.AuthObjectCert
	nil,                                      // 11: ric.auth.AuthObjectResponse.LicenseEntry
	nil,                                      // 12: ric.auth.AuthObjectResponse.StatsEntry
}
var file_ric_auth_ricauth_proto_depIdxs = []int32{
	10, // 0: ric.auth.AuthObjectRequest.cert:type_name -> ric.auth.AuthObjectRequest.AuthObjectCert
	2,  // 1: ric.auth.AuthObjectResponse.arguments:type_name -> ric.auth.AuthObjectArgument
	11, // 2: ric.auth.AuthObjectResponse.license:type_name -> ric.auth.AuthObjectResponse.LicenseEntry
	12, // 3: ric.auth.AuthObjectResponse.stats:type_name -> ric.auth.AuthObjectResponse.StatsEntry
	2,  // 4: ric.auth.ModelInfoResponse.arguments:type_name -> ric.auth.AuthObjectArgument
	3,  // 5: ric.auth.AuthObjectResponse.StatsEntry.value:type_name -> ric.auth.StatRecord
	0,  // 6: ric.auth.RicAuth.AuthObject:input_type -> ric.auth.AuthObjectRequest
	6,  // 7: ric.auth.RicAuth.GetModelInfo:input_type -> ric.auth.ModelInfoRequest
	4,  // 8: ric.auth.RicAuth.IssueCert:input_type -> ric.auth.IssueCertRequest
	8,  // 9: ric.auth.RicAuth.SendOffline:input_type -> ric.auth.ObjectGateRequest
	8,  // 10: ric.auth.RicAuth.SendModelUpdate:input_type -> ric.auth.ObjectGateRequest
	1,  // 11: ric.auth.RicAuth.AuthObject:output_type -> ric.auth.AuthObjectResponse
	7,  // 12: ric.auth.RicAuth.GetModelInfo:output_type -> ric.auth.ModelInfoResponse
	5,  // 13: ric.auth.RicAuth.IssueCert:output_type -> ric.auth.IssueCertResponse
	9,  // 14: ric.auth.RicAuth.SendOffline:output_type -> ric.auth.ObjectGateResponse
	9,  // 15: ric.auth.RicAuth.SendModelUpdate:output_type -> ric.auth.ObjectGateResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_ric_auth_ricauth_proto_init() }
func file_ric_auth_ricauth_proto_init() {
	if File_ric_auth_ricauth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ric_auth_ricauth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthObjectArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectGateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectGateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_auth_ricauth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthObjectRequest_AuthObjectCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ric_auth_ricauth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ric_auth_ricauth_proto_goTypes,
		DependencyIndexes: file_ric_auth_ricauth_proto_depIdxs,
		MessageInfos:      file_ric_auth_ricauth_proto_msgTypes,
	}.Build()
	File_ric_auth_ricauth_proto = out.File
	file_ric_auth_ricauth_proto_rawDesc = nil
	file_ric_auth_ricauth_proto_goTypes = nil
	file_ric_auth_ricauth_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RicAuthClient is the client API for RicAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RicAuthClient interface {
	AuthObject(ctx context.Context, in *AuthObjectRequest, opts ...grpc.CallOption) (*AuthObjectResponse, error)
	GetModelInfo(ctx context.Context, in *ModelInfoRequest, opts ...grpc.CallOption) (*ModelInfoResponse, error)
	IssueCert(ctx context.Context, in *IssueCertRequest, opts ...grpc.CallOption) (*IssueCertResponse, error)
	SendOffline(ctx context.Context, in *ObjectGateRequest, opts ...grpc.CallOption) (*ObjectGateResponse, error)
	SendModelUpdate(ctx context.Context, in *ObjectGateRequest, opts ...grpc.CallOption) (*ObjectGateResponse, error)
}

type ricAuthClient struct {
	cc grpc.ClientConnInterface
}

func NewRicAuthClient(cc grpc.ClientConnInterface) RicAuthClient {
	return &ricAuthClient{cc}
}

func (c *ricAuthClient) AuthObject(ctx context.Context, in *AuthObjectRequest, opts ...grpc.CallOption) (*AuthObjectResponse, error) {
	out := new(AuthObjectResponse)
	err := c.cc.Invoke(ctx, "/ric.auth.RicAuth/AuthObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ricAuthClient) GetModelInfo(ctx context.Context, in *ModelInfoRequest, opts ...grpc.CallOption) (*ModelInfoResponse, error) {
	out := new(ModelInfoResponse)
	err := c.cc.Invoke(ctx, "/ric.auth.RicAuth/GetModelInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ricAuthClient) IssueCert(ctx context.Context, in *IssueCertRequest, opts ...grpc.CallOption) (*IssueCertResponse, error) {
	out := new(IssueCertResponse)
	err := c.cc.Invoke(ctx, "/ric.auth.RicAuth/IssueCert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ricAuthClient) SendOffline(ctx context.Context, in *ObjectGateRequest, opts ...grpc.CallOption) (*ObjectGateResponse, error) {
	out := new(ObjectGateResponse)
	err := c.cc.Invoke(ctx, "/ric.auth.RicAuth/SendOffline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ricAuthClient) SendModelUpdate(ctx context.Context, in *ObjectGateRequest, opts ...grpc.CallOption) (*ObjectGateResponse, error) {
	out := new(ObjectGateResponse)
	err := c.cc.Invoke(ctx, "/ric.auth.RicAuth/SendModelUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RicAuthServer is the server API for RicAuth service.
type RicAuthServer interface {
	AuthObject(context.Context, *AuthObjectRequest) (*AuthObjectResponse, error)
	GetModelInfo(context.Context, *ModelInfoRequest) (*ModelInfoResponse, error)
	IssueCert(context.Context, *IssueCertRequest) (*IssueCertResponse, error)
	SendOffline(context.Context, *ObjectGateRequest) (*ObjectGateResponse, error)
	SendModelUpdate(context.Context, *ObjectGateRequest) (*ObjectGateResponse, error)
}

// UnimplementedRicAuthServer can be embedded to have forward compatible implementations.
type UnimplementedRicAuthServer struct {
}

func (*UnimplementedRicAuthServer) AuthObject(context.Context, *AuthObjectRequest) (*AuthObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthObject not implemented")
}
func (*UnimplementedRicAuthServer) GetModelInfo(context.Context, *ModelInfoRequest) (*ModelInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelInfo not implemented")
}
func (*UnimplementedRicAuthServer) IssueCert(context.Context, *IssueCertRequest) (*IssueCertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IssueCert not implemented")
}
func (*UnimplementedRicAuthServer) SendOffline(context.Context, *ObjectGateRequest) (*ObjectGateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendOffline not implemented")
}
func (*UnimplementedRicAuthServer) SendModelUpdate(context.Context, *ObjectGateRequest) (*ObjectGateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendModelUpdate not implemented")
}

func RegisterRicAuthServer(s *grpc.Server, srv RicAuthServer) {
	s.RegisterService(&_RicAuth_serviceDesc, srv)
}

func _RicAuth_AuthObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RicAuthServer).AuthObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.auth.RicAuth/AuthObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RicAuthServer).AuthObject(ctx, req.(*AuthObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RicAuth_GetModelInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RicAuthServer).GetModelInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.auth.RicAuth/GetModelInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RicAuthServer).GetModelInfo(ctx, req.(*ModelInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RicAuth_IssueCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IssueCertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RicAuthServer).IssueCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.auth.RicAuth/IssueCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RicAuthServer).IssueCert(ctx, req.(*IssueCertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RicAuth_SendOffline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectGateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RicAuthServer).SendOffline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.auth.RicAuth/SendOffline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RicAuthServer).SendOffline(ctx, req.(*ObjectGateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RicAuth_SendModelUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectGateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RicAuthServer).SendModelUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.auth.RicAuth/SendModelUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RicAuthServer).SendModelUpdate(ctx, req.(*ObjectGateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RicAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ric.auth.RicAuth",
	HandlerType: (*RicAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthObject",
			Handler:    _RicAuth_AuthObject_Handler,
		},
		{
			MethodName: "GetModelInfo",
			Handler:    _RicAuth_GetModelInfo_Handler,
		},
		{
			MethodName: "IssueCert",
			Handler:    _RicAuth_IssueCert_Handler,
		},
		{
			MethodName: "SendOffline",
			Handler:    _RicAuth_SendOffline_Handler,
		},
		{
			MethodName: "SendModelUpdate",
			Handler:    _RicAuth_SendModelUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ric-auth/ricauth.proto",
}
