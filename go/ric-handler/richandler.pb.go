// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.7.0
// source: ric-handler/richandler.proto

package richandler

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandlerId string `protobuf:"bytes,1,opt,name=handler_id,json=handlerId,proto3" json:"handler_id,omitempty"`
	Packet    []byte `protobuf:"bytes,2,opt,name=packet,proto3" json:"packet,omitempty"`
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{0}
}

func (x *ExecRequest) GetHandlerId() string {
	if x != nil {
		return x.HandlerId
	}
	return ""
}

func (x *ExecRequest) GetPacket() []byte {
	if x != nil {
		return x.Packet
	}
	return nil
}

type JsError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Location   string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	StackTrace string `protobuf:"bytes,3,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
}

func (x *JsError) Reset() {
	*x = JsError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsError) ProtoMessage() {}

func (x *JsError) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsError.ProtoReflect.Descriptor instead.
func (*JsError) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{1}
}

func (x *JsError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JsError) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *JsError) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

type ExecStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalHeapSize            uint64 `protobuf:"varint,1,opt,name=total_heap_size,json=totalHeapSize,proto3" json:"total_heap_size,omitempty"`
	TotalHeapSizeExecutable  uint64 `protobuf:"varint,2,opt,name=total_heap_size_executable,json=totalHeapSizeExecutable,proto3" json:"total_heap_size_executable,omitempty"`
	TotalPhysicalSize        uint64 `protobuf:"varint,3,opt,name=total_physical_size,json=totalPhysicalSize,proto3" json:"total_physical_size,omitempty"`
	TotalAvailableSize       uint64 `protobuf:"varint,4,opt,name=total_available_size,json=totalAvailableSize,proto3" json:"total_available_size,omitempty"`
	UsedHeapSize             uint64 `protobuf:"varint,5,opt,name=used_heap_size,json=usedHeapSize,proto3" json:"used_heap_size,omitempty"`
	HeapSizeLimit            uint64 `protobuf:"varint,6,opt,name=heap_size_limit,json=heapSizeLimit,proto3" json:"heap_size_limit,omitempty"`
	MallocedMemory           uint64 `protobuf:"varint,7,opt,name=malloced_memory,json=mallocedMemory,proto3" json:"malloced_memory,omitempty"`
	ExternalMemory           uint64 `protobuf:"varint,8,opt,name=external_memory,json=externalMemory,proto3" json:"external_memory,omitempty"`
	PeakMallocedMemory       uint64 `protobuf:"varint,9,opt,name=peak_malloced_memory,json=peakMallocedMemory,proto3" json:"peak_malloced_memory,omitempty"`
	NumberOfNativeContexts   uint64 `protobuf:"varint,10,opt,name=number_of_native_contexts,json=numberOfNativeContexts,proto3" json:"number_of_native_contexts,omitempty"`
	NumberOfDetachedContexts uint64 `protobuf:"varint,11,opt,name=number_of_detached_contexts,json=numberOfDetachedContexts,proto3" json:"number_of_detached_contexts,omitempty"`
	ExecDuration             int64  `protobuf:"varint,12,opt,name=exec_duration,json=execDuration,proto3" json:"exec_duration,omitempty"`
}

func (x *ExecStats) Reset() {
	*x = ExecStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecStats) ProtoMessage() {}

func (x *ExecStats) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecStats.ProtoReflect.Descriptor instead.
func (*ExecStats) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{2}
}

func (x *ExecStats) GetTotalHeapSize() uint64 {
	if x != nil {
		return x.TotalHeapSize
	}
	return 0
}

func (x *ExecStats) GetTotalHeapSizeExecutable() uint64 {
	if x != nil {
		return x.TotalHeapSizeExecutable
	}
	return 0
}

func (x *ExecStats) GetTotalPhysicalSize() uint64 {
	if x != nil {
		return x.TotalPhysicalSize
	}
	return 0
}

func (x *ExecStats) GetTotalAvailableSize() uint64 {
	if x != nil {
		return x.TotalAvailableSize
	}
	return 0
}

func (x *ExecStats) GetUsedHeapSize() uint64 {
	if x != nil {
		return x.UsedHeapSize
	}
	return 0
}

func (x *ExecStats) GetHeapSizeLimit() uint64 {
	if x != nil {
		return x.HeapSizeLimit
	}
	return 0
}

func (x *ExecStats) GetMallocedMemory() uint64 {
	if x != nil {
		return x.MallocedMemory
	}
	return 0
}

func (x *ExecStats) GetExternalMemory() uint64 {
	if x != nil {
		return x.ExternalMemory
	}
	return 0
}

func (x *ExecStats) GetPeakMallocedMemory() uint64 {
	if x != nil {
		return x.PeakMallocedMemory
	}
	return 0
}

func (x *ExecStats) GetNumberOfNativeContexts() uint64 {
	if x != nil {
		return x.NumberOfNativeContexts
	}
	return 0
}

func (x *ExecStats) GetNumberOfDetachedContexts() uint64 {
	if x != nil {
		return x.NumberOfDetachedContexts
	}
	return 0
}

func (x *ExecStats) GetExecDuration() int64 {
	if x != nil {
		return x.ExecDuration
	}
	return 0
}

type LogRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time   int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Record string `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *LogRecord) Reset() {
	*x = LogRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRecord) ProtoMessage() {}

func (x *LogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRecord.ProtoReflect.Descriptor instead.
func (*LogRecord) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{3}
}

func (x *LogRecord) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *LogRecord) GetRecord() string {
	if x != nil {
		return x.Record
	}
	return ""
}

type ExecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []byte       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error  *JsError     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Stats  *ExecStats   `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	Logs   []*LogRecord `protobuf:"bytes,4,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{4}
}

func (x *ExecResponse) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ExecResponse) GetError() *JsError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ExecResponse) GetStats() *ExecStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ExecResponse) GetLogs() []*LogRecord {
	if x != nil {
		return x.Logs
	}
	return nil
}

type GetObjectInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *GetObjectInfoRequest) Reset() {
	*x = GetObjectInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectInfoRequest) ProtoMessage() {}

func (x *GetObjectInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectInfoRequest.ProtoReflect.Descriptor instead.
func (*GetObjectInfoRequest) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{5}
}

func (x *GetObjectInfoRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Params []byte `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{6}
}

func (x *Action) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Action) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

type Handler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserCode   string `protobuf:"bytes,2,opt,name=user_code,json=userCode,proto3" json:"user_code,omitempty"`
	Bindings   []byte `protobuf:"bytes,3,opt,name=bindings,proto3" json:"bindings,omitempty"`
	Parameters []byte `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *Handler) Reset() {
	*x = Handler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handler) ProtoMessage() {}

func (x *Handler) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handler.ProtoReflect.Descriptor instead.
func (*Handler) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{7}
}

func (x *Handler) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Handler) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

func (x *Handler) GetBindings() []byte {
	if x != nil {
		return x.Bindings
	}
	return nil
}

func (x *Handler) GetParameters() []byte {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type GetObjectInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Config         []byte     `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Store          []byte     `protobuf:"bytes,3,opt,name=store,proto3" json:"store,omitempty"`
	LastPacketTime int64      `protobuf:"varint,4,opt,name=last_packet_time,json=lastPacketTime,proto3" json:"last_packet_time,omitempty"`
	Actions        []*Action  `protobuf:"bytes,5,rep,name=actions,proto3" json:"actions,omitempty"`
	Handlers       []*Handler `protobuf:"bytes,6,rep,name=handlers,proto3" json:"handlers,omitempty"`
}

func (x *GetObjectInfoResponse) Reset() {
	*x = GetObjectInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectInfoResponse) ProtoMessage() {}

func (x *GetObjectInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectInfoResponse.ProtoReflect.Descriptor instead.
func (*GetObjectInfoResponse) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{8}
}

func (x *GetObjectInfoResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetObjectInfoResponse) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetObjectInfoResponse) GetStore() []byte {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *GetObjectInfoResponse) GetLastPacketTime() int64 {
	if x != nil {
		return x.LastPacketTime
	}
	return 0
}

func (x *GetObjectInfoResponse) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *GetObjectInfoResponse) GetHandlers() []*Handler {
	if x != nil {
		return x.Handlers
	}
	return nil
}

type GetHandlerStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandlerId string `protobuf:"bytes,1,opt,name=handler_id,json=handlerId,proto3" json:"handler_id,omitempty"`
}

func (x *GetHandlerStoreRequest) Reset() {
	*x = GetHandlerStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHandlerStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHandlerStoreRequest) ProtoMessage() {}

func (x *GetHandlerStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHandlerStoreRequest.ProtoReflect.Descriptor instead.
func (*GetHandlerStoreRequest) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{9}
}

func (x *GetHandlerStoreRequest) GetHandlerId() string {
	if x != nil {
		return x.HandlerId
	}
	return ""
}

type GetHandlerStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store []byte `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
}

func (x *GetHandlerStoreResponse) Reset() {
	*x = GetHandlerStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHandlerStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHandlerStoreResponse) ProtoMessage() {}

func (x *GetHandlerStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHandlerStoreResponse.ProtoReflect.Descriptor instead.
func (*GetHandlerStoreResponse) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{10}
}

func (x *GetHandlerStoreResponse) GetStore() []byte {
	if x != nil {
		return x.Store
	}
	return nil
}

type ForceLinksUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *ForceLinksUpdateRequest) Reset() {
	*x = ForceLinksUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceLinksUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceLinksUpdateRequest) ProtoMessage() {}

func (x *ForceLinksUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceLinksUpdateRequest.ProtoReflect.Descriptor instead.
func (*ForceLinksUpdateRequest) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{11}
}

func (x *ForceLinksUpdateRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ric_handler_richandler_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ric_handler_richandler_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_ric_handler_richandler_proto_rawDescGZIP(), []int{12}
}

var File_ric_handler_richandler_proto protoreflect.FileDescriptor

var file_ric_handler_richandler_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x72, 0x69, 0x63, 0x2d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x72, 0x69,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x0b, 0x45,
	0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x22, 0x60, 0x0a, 0x07, 0x4a, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x22, 0xc3, 0x04, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x70, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x48, 0x65, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63,
	0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x64,
	0x5f, 0x68, 0x65, 0x61, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x48, 0x65, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x68, 0x65, 0x61, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x70, 0x53, 0x69, 0x7a,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x27, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x65, 0x61, 0x6b,
	0x5f, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x70, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x19, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6f, 0x66, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x78, 0x65,
	0x63, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x09, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x69, 0x63,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x4a, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x72, 0x0a, 0x07, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xe0, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a,
	0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x22,
	0x37, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x36, 0x0a, 0x17, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xd2, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b,
	0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x18, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x72,
	0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x69,
	0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x10, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x72, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x69,
	0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1a, 0x5a, 0x18, 0x2e, 0x2f, 0x72, 0x69, 0x63,
	0x2d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x3b, 0x72, 0x69, 0x63, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ric_handler_richandler_proto_rawDescOnce sync.Once
	file_ric_handler_richandler_proto_rawDescData = file_ric_handler_richandler_proto_rawDesc
)

func file_ric_handler_richandler_proto_rawDescGZIP() []byte {
	file_ric_handler_richandler_proto_rawDescOnce.Do(func() {
		file_ric_handler_richandler_proto_rawDescData = protoimpl.X.CompressGZIP(file_ric_handler_richandler_proto_rawDescData)
	})
	return file_ric_handler_richandler_proto_rawDescData
}

var file_ric_handler_richandler_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_ric_handler_richandler_proto_goTypes = []interface{}{
	(*ExecRequest)(nil),             // 0: ric.handler.ExecRequest
	(*JsError)(nil),                 // 1: ric.handler.JsError
	(*ExecStats)(nil),               // 2: ric.handler.ExecStats
	(*LogRecord)(nil),               // 3: ric.handler.LogRecord
	(*ExecResponse)(nil),            // 4: ric.handler.ExecResponse
	(*GetObjectInfoRequest)(nil),    // 5: ric.handler.GetObjectInfoRequest
	(*Action)(nil),                  // 6: ric.handler.Action
	(*Handler)(nil),                 // 7: ric.handler.Handler
	(*GetObjectInfoResponse)(nil),   // 8: ric.handler.GetObjectInfoResponse
	(*GetHandlerStoreRequest)(nil),  // 9: ric.handler.GetHandlerStoreRequest
	(*GetHandlerStoreResponse)(nil), // 10: ric.handler.GetHandlerStoreResponse
	(*ForceLinksUpdateRequest)(nil), // 11: ric.handler.ForceLinksUpdateRequest
	(*EmptyResponse)(nil),           // 12: ric.handler.EmptyResponse
}
var file_ric_handler_richandler_proto_depIdxs = []int32{
	1,  // 0: ric.handler.ExecResponse.error:type_name -> ric.handler.JsError
	2,  // 1: ric.handler.ExecResponse.stats:type_name -> ric.handler.ExecStats
	3,  // 2: ric.handler.ExecResponse.logs:type_name -> ric.handler.LogRecord
	6,  // 3: ric.handler.GetObjectInfoResponse.actions:type_name -> ric.handler.Action
	7,  // 4: ric.handler.GetObjectInfoResponse.handlers:type_name -> ric.handler.Handler
	0,  // 5: ric.handler.Service.Exec:input_type -> ric.handler.ExecRequest
	5,  // 6: ric.handler.Service.GetObjectInfo:input_type -> ric.handler.GetObjectInfoRequest
	9,  // 7: ric.handler.Service.GetHandlerStore:input_type -> ric.handler.GetHandlerStoreRequest
	11, // 8: ric.handler.Service.ForceLinksUpdate:input_type -> ric.handler.ForceLinksUpdateRequest
	4,  // 9: ric.handler.Service.Exec:output_type -> ric.handler.ExecResponse
	8,  // 10: ric.handler.Service.GetObjectInfo:output_type -> ric.handler.GetObjectInfoResponse
	10, // 11: ric.handler.Service.GetHandlerStore:output_type -> ric.handler.GetHandlerStoreResponse
	12, // 12: ric.handler.Service.ForceLinksUpdate:output_type -> ric.handler.EmptyResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_ric_handler_richandler_proto_init() }
func file_ric_handler_richandler_proto_init() {
	if File_ric_handler_richandler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ric_handler_richandler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHandlerStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHandlerStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceLinksUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ric_handler_richandler_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ric_handler_richandler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ric_handler_richandler_proto_goTypes,
		DependencyIndexes: file_ric_handler_richandler_proto_depIdxs,
		MessageInfos:      file_ric_handler_richandler_proto_msgTypes,
	}.Build()
	File_ric_handler_richandler_proto = out.File
	file_ric_handler_richandler_proto_rawDesc = nil
	file_ric_handler_richandler_proto_goTypes = nil
	file_ric_handler_richandler_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	Exec(ctx context.Context, in *ExecRequest, opts ...grpc.CallOption) (*ExecResponse, error)
	GetObjectInfo(ctx context.Context, in *GetObjectInfoRequest, opts ...grpc.CallOption) (*GetObjectInfoResponse, error)
	GetHandlerStore(ctx context.Context, in *GetHandlerStoreRequest, opts ...grpc.CallOption) (*GetHandlerStoreResponse, error)
	ForceLinksUpdate(ctx context.Context, in *ForceLinksUpdateRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type serviceClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceClient(cc grpc.ClientConnInterface) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Exec(ctx context.Context, in *ExecRequest, opts ...grpc.CallOption) (*ExecResponse, error) {
	out := new(ExecResponse)
	err := c.cc.Invoke(ctx, "/ric.handler.Service/Exec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetObjectInfo(ctx context.Context, in *GetObjectInfoRequest, opts ...grpc.CallOption) (*GetObjectInfoResponse, error) {
	out := new(GetObjectInfoResponse)
	err := c.cc.Invoke(ctx, "/ric.handler.Service/GetObjectInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetHandlerStore(ctx context.Context, in *GetHandlerStoreRequest, opts ...grpc.CallOption) (*GetHandlerStoreResponse, error) {
	out := new(GetHandlerStoreResponse)
	err := c.cc.Invoke(ctx, "/ric.handler.Service/GetHandlerStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ForceLinksUpdate(ctx context.Context, in *ForceLinksUpdateRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.handler.Service/ForceLinksUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	Exec(context.Context, *ExecRequest) (*ExecResponse, error)
	GetObjectInfo(context.Context, *GetObjectInfoRequest) (*GetObjectInfoResponse, error)
	GetHandlerStore(context.Context, *GetHandlerStoreRequest) (*GetHandlerStoreResponse, error)
	ForceLinksUpdate(context.Context, *ForceLinksUpdateRequest) (*EmptyResponse, error)
}

// UnimplementedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServer struct {
}

func (*UnimplementedServiceServer) Exec(context.Context, *ExecRequest) (*ExecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exec not implemented")
}
func (*UnimplementedServiceServer) GetObjectInfo(context.Context, *GetObjectInfoRequest) (*GetObjectInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetObjectInfo not implemented")
}
func (*UnimplementedServiceServer) GetHandlerStore(context.Context, *GetHandlerStoreRequest) (*GetHandlerStoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHandlerStore not implemented")
}
func (*UnimplementedServiceServer) ForceLinksUpdate(context.Context, *ForceLinksUpdateRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceLinksUpdate not implemented")
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Exec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Exec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.handler.Service/Exec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Exec(ctx, req.(*ExecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetObjectInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObjectInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetObjectInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.handler.Service/GetObjectInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetObjectInfo(ctx, req.(*GetObjectInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetHandlerStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHandlerStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetHandlerStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.handler.Service/GetHandlerStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetHandlerStore(ctx, req.(*GetHandlerStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_ForceLinksUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForceLinksUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).ForceLinksUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.handler.Service/ForceLinksUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).ForceLinksUpdate(ctx, req.(*ForceLinksUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ric.handler.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Exec",
			Handler:    _Service_Exec_Handler,
		},
		{
			MethodName: "GetObjectInfo",
			Handler:    _Service_GetObjectInfo_Handler,
		},
		{
			MethodName: "GetHandlerStore",
			Handler:    _Service_GetHandlerStore_Handler,
		},
		{
			MethodName: "ForceLinksUpdate",
			Handler:    _Service_ForceLinksUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ric-handler/richandler.proto",
}
