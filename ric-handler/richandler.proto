syntax = "proto3";

package ric.handler;

option go_package = "./ric-handler;richandler";

service Service {
  rpc Exec(ExecRequest) returns (ExecResponse);
  rpc GetObjectInfo(GetObjectInfoRequest) returns (GetObjectInfoResponse);
  rpc GetHandlerStore(GetHandlerStoreRequest) returns (GetHandlerStoreResponse);
  rpc ForceLinksUpdate(ForceLinksUpdateRequest) returns (EmptyResponse);
}

message ExecRequest {
  string handler_id = 1;
  bytes packet = 2;
  string user_code = 3;
  bytes parameters = 4;
}

message JsStackFrame {
  string function_name = 1;
  int32 line_number = 2;
  int32 column = 3;
}

message JsError {
  string message = 1;
  int32 line_number = 2;
  int32 column = 3;
  repeated JsStackFrame stack = 4;
}

message ExecStats {
  uint64 total_heap_size = 1;
  uint64 total_heap_size_executable = 2;
  uint64 total_physical_size = 3;
  uint64 total_available_size = 4;
  uint64 used_heap_size = 5;
  uint64 heap_size_limit = 6;
  uint64 malloced_memory = 7;
  uint64 external_memory = 8;
  uint64 peak_malloced_memory = 9;
  uint64 number_of_native_contexts = 10;
  uint64 number_of_detached_contexts = 11;
  string exec_duration = 12;
}

message LogRecord {
  int64 time = 1;
  string record = 2;
}

message ExecResponse {
  bytes result = 1;
  JsError error = 2;
  ExecStats stats = 3;
  repeated LogRecord logs = 4;
}

message GetObjectInfoRequest {
  string object_id = 1;
}

message Action {
  string id = 1;
  bytes params = 2;
}

message Handler {
  string id = 1;
  string user_code = 2;
  bytes bindings = 3;
  bytes parameters = 4;
}

message GetObjectInfoResponse {
  string id = 1;
  bytes config = 2;
  bytes store = 3;
  int64 last_packet_time = 4;
  repeated Action actions = 5;
  repeated Handler handlers = 6;
}

message GetHandlerStoreRequest {
  string handler_id = 1;
}

message GetHandlerStoreResponse {
  bytes store = 1;
}

message ForceLinksUpdateRequest {
  string object_id = 1;
}

message EmptyResponse {}
