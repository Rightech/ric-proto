syntax = "proto3";

package ric.notify;

option go_package = "./ric-notify;ricnotify";

import "google/protobuf/wrappers.proto";

service SMPP {
  rpc Send(SMPPSendRequest) returns (SMPPSendResponse);
  rpc Status(SMPPStatusRequest) returns (SMPPStatusResponse);
  rpc GatewayInfo(SMPPGatewayInfoRequest) returns (SMPPGatewayInfoResponse);
  rpc CheckGateway(SMPPCheckGatewayRequest) returns (SMPPCheckGatewayResponse);
}

service SMTP {
  rpc Send(SMTPSendRequest) returns (SMTPSendResponse);
  rpc GatewayInfo(SMTPGatewayInfoRequest) returns (SMTPGatewayInfoResponse);
  rpc CheckGateway(SMTPCheckGatewayRequest) returns (SMTPCheckGatewayResponse);
}

service Push {
  rpc Send(PushSendRequest) returns (PushSendResponse);
}

message UserContext {
  string group_id = 1;
  string user_id = 2;
  string span_id = 3;
}

message SMPPSendRequest {
  UserContext ctx = 1;
  string gateway_id = 2;
  string phone = 3;
  string message = 4;
}

message SMPPSendResponse {
  string message_id = 1;
}

message SMPPStatusRequest {
  string gateway_id = 1;
  string message_id = 2;
}

message SMPPStatusResponse {
  enum State {
    UNKNOWN = 0;
    SCHEDULE = 1;
    SEND_ERROR = 2;
    MAX_RETRIES_EXCEEDED = 3;
    SENT = 4;
    ERROR = 5;
  }
  message SMPPStatus {
    string msg_id = 1;
    string msg_state = 2;
    string final_date = 3;
    int32 err_code = 4;
  }
  State state = 1;
  string description = 2;
  SMPPStatus smpp_status = 3;
}

message SMPPGatewayInfoRequest {
  string gateway_id = 1;
}

message SMPPGatewayInfoResponse {
  bool online = 1;
  int64 uptime = 2;
}

message SMPPCheckGatewayRequest {
  string host = 1;
  int32 port = 2;
  string username = 3;
  string password = 4;
  string system_type = 5;
}

message SMPPCheckGatewayResponse {
  bool success = 1;
}

message Attachment {
  string filename = 1;
  string content_type = 2;
  bytes content = 3;
}

message SMTPSendRequest {
  UserContext ctx = 1;
  string gateway_id = 2;
  // following fields override default gateway info
  repeated string to = 3;
  string sender = 4;
  string subject = 5;
  string text_body = 6;
  string html_body = 7;
  string host = 8;
  int32 port = 9;
  string username = 10;
  string password = 11;
  google.protobuf.BoolValue use_starttls = 12;
  google.protobuf.BoolValue use_ssl = 13;
  repeated Attachment attachments = 14;
}

message SMTPSendResponse {}

message SMTPGatewayInfoRequest {
  string gateway_id = 1;
}

message SMTPGatewayInfoResponse {
  // default gateway info
  string gateway_id = 1;
  string sender = 2;
  string host = 3;
  int32 port = 4;
  string username = 5;
  string password = 6;
  bool use_starttls = 7;
  bool use_ssl = 8;
  bool system = 9;
}

message SMTPCheckGatewayRequest {
  string host = 1;
  int32 port = 2;
  string username = 3;
  string password = 4;
  bool use_starttls = 5;
  bool use_ssl = 6;
}

message SMTPCheckGatewayResponse {
  bool success = 1;
}

message PushSendRequest {
  string text = 1;
  string level = 2;
  string oid = 3;
}

message PushSendResponse {}
