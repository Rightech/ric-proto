// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-web/ricweb.proto

#ifndef PROTOBUF_INCLUDED_ric_2dweb_2fricweb_2eproto
#define PROTOBUF_INCLUDED_ric_2dweb_2fricweb_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ric_2dweb_2fricweb_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_ric_2dweb_2fricweb_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_ric_2dweb_2fricweb_2eproto();
namespace ric {
namespace web {
class DispatchDefaultActionRequest;
class DispatchDefaultActionRequestDefaultTypeInternal;
extern DispatchDefaultActionRequestDefaultTypeInternal _DispatchDefaultActionRequest_default_instance_;
class DispatchDefaultActionResponse;
class DispatchDefaultActionResponseDefaultTypeInternal;
extern DispatchDefaultActionResponseDefaultTypeInternal _DispatchDefaultActionResponse_default_instance_;
}  // namespace web
}  // namespace ric
namespace google {
namespace protobuf {
template<> ::ric::web::DispatchDefaultActionRequest* Arena::CreateMaybeMessage<::ric::web::DispatchDefaultActionRequest>(Arena*);
template<> ::ric::web::DispatchDefaultActionResponse* Arena::CreateMaybeMessage<::ric::web::DispatchDefaultActionResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ric {
namespace web {

// ===================================================================

class DispatchDefaultActionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.web.DispatchDefaultActionRequest) */ {
 public:
  DispatchDefaultActionRequest();
  virtual ~DispatchDefaultActionRequest();

  DispatchDefaultActionRequest(const DispatchDefaultActionRequest& from);

  inline DispatchDefaultActionRequest& operator=(const DispatchDefaultActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DispatchDefaultActionRequest(DispatchDefaultActionRequest&& from) noexcept
    : DispatchDefaultActionRequest() {
    *this = ::std::move(from);
  }

  inline DispatchDefaultActionRequest& operator=(DispatchDefaultActionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DispatchDefaultActionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DispatchDefaultActionRequest* internal_default_instance() {
    return reinterpret_cast<const DispatchDefaultActionRequest*>(
               &_DispatchDefaultActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(DispatchDefaultActionRequest* other);
  friend void swap(DispatchDefaultActionRequest& a, DispatchDefaultActionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DispatchDefaultActionRequest* New() const final {
    return CreateMaybeMessage<DispatchDefaultActionRequest>(nullptr);
  }

  DispatchDefaultActionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DispatchDefaultActionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DispatchDefaultActionRequest& from);
  void MergeFrom(const DispatchDefaultActionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DispatchDefaultActionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string service = 1;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  #if LANG_CXX11
  void set_service(::std::string&& value);
  #endif
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // string source = 2;
  void clear_source();
  static const int kSourceFieldNumber = 2;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // string object_id = 3;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 3;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // string id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string params = 6;
  void clear_params();
  static const int kParamsFieldNumber = 6;
  const ::std::string& params() const;
  void set_params(const ::std::string& value);
  #if LANG_CXX11
  void set_params(::std::string&& value);
  #endif
  void set_params(const char* value);
  void set_params(const char* value, size_t size);
  ::std::string* mutable_params();
  ::std::string* release_params();
  void set_allocated_params(::std::string* params);

  // @@protoc_insertion_point(class_scope:ric.web.DispatchDefaultActionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr params_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dweb_2fricweb_2eproto;
};
// -------------------------------------------------------------------

class DispatchDefaultActionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.web.DispatchDefaultActionResponse) */ {
 public:
  DispatchDefaultActionResponse();
  virtual ~DispatchDefaultActionResponse();

  DispatchDefaultActionResponse(const DispatchDefaultActionResponse& from);

  inline DispatchDefaultActionResponse& operator=(const DispatchDefaultActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DispatchDefaultActionResponse(DispatchDefaultActionResponse&& from) noexcept
    : DispatchDefaultActionResponse() {
    *this = ::std::move(from);
  }

  inline DispatchDefaultActionResponse& operator=(DispatchDefaultActionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DispatchDefaultActionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DispatchDefaultActionResponse* internal_default_instance() {
    return reinterpret_cast<const DispatchDefaultActionResponse*>(
               &_DispatchDefaultActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DispatchDefaultActionResponse* other);
  friend void swap(DispatchDefaultActionResponse& a, DispatchDefaultActionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DispatchDefaultActionResponse* New() const final {
    return CreateMaybeMessage<DispatchDefaultActionResponse>(nullptr);
  }

  DispatchDefaultActionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DispatchDefaultActionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DispatchDefaultActionResponse& from);
  void MergeFrom(const DispatchDefaultActionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DispatchDefaultActionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ric.web.DispatchDefaultActionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dweb_2fricweb_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DispatchDefaultActionRequest

// string service = 1;
inline void DispatchDefaultActionRequest::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DispatchDefaultActionRequest::service() const {
  // @@protoc_insertion_point(field_get:ric.web.DispatchDefaultActionRequest.service)
  return service_.GetNoArena();
}
inline void DispatchDefaultActionRequest::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.web.DispatchDefaultActionRequest.service)
}
#if LANG_CXX11
inline void DispatchDefaultActionRequest::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.web.DispatchDefaultActionRequest.service)
}
#endif
inline void DispatchDefaultActionRequest::set_service(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.web.DispatchDefaultActionRequest.service)
}
inline void DispatchDefaultActionRequest::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.web.DispatchDefaultActionRequest.service)
}
inline ::std::string* DispatchDefaultActionRequest::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:ric.web.DispatchDefaultActionRequest.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DispatchDefaultActionRequest::release_service() {
  // @@protoc_insertion_point(field_release:ric.web.DispatchDefaultActionRequest.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DispatchDefaultActionRequest::set_allocated_service(::std::string* service) {
  if (service != nullptr) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:ric.web.DispatchDefaultActionRequest.service)
}

// string source = 2;
inline void DispatchDefaultActionRequest::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DispatchDefaultActionRequest::source() const {
  // @@protoc_insertion_point(field_get:ric.web.DispatchDefaultActionRequest.source)
  return source_.GetNoArena();
}
inline void DispatchDefaultActionRequest::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.web.DispatchDefaultActionRequest.source)
}
#if LANG_CXX11
inline void DispatchDefaultActionRequest::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.web.DispatchDefaultActionRequest.source)
}
#endif
inline void DispatchDefaultActionRequest::set_source(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.web.DispatchDefaultActionRequest.source)
}
inline void DispatchDefaultActionRequest::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.web.DispatchDefaultActionRequest.source)
}
inline ::std::string* DispatchDefaultActionRequest::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:ric.web.DispatchDefaultActionRequest.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DispatchDefaultActionRequest::release_source() {
  // @@protoc_insertion_point(field_release:ric.web.DispatchDefaultActionRequest.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DispatchDefaultActionRequest::set_allocated_source(::std::string* source) {
  if (source != nullptr) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:ric.web.DispatchDefaultActionRequest.source)
}

// string object_id = 3;
inline void DispatchDefaultActionRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DispatchDefaultActionRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.web.DispatchDefaultActionRequest.object_id)
  return object_id_.GetNoArena();
}
inline void DispatchDefaultActionRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.web.DispatchDefaultActionRequest.object_id)
}
#if LANG_CXX11
inline void DispatchDefaultActionRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.web.DispatchDefaultActionRequest.object_id)
}
#endif
inline void DispatchDefaultActionRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.web.DispatchDefaultActionRequest.object_id)
}
inline void DispatchDefaultActionRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.web.DispatchDefaultActionRequest.object_id)
}
inline ::std::string* DispatchDefaultActionRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.web.DispatchDefaultActionRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DispatchDefaultActionRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.web.DispatchDefaultActionRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DispatchDefaultActionRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.web.DispatchDefaultActionRequest.object_id)
}

// string id = 4;
inline void DispatchDefaultActionRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DispatchDefaultActionRequest::id() const {
  // @@protoc_insertion_point(field_get:ric.web.DispatchDefaultActionRequest.id)
  return id_.GetNoArena();
}
inline void DispatchDefaultActionRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.web.DispatchDefaultActionRequest.id)
}
#if LANG_CXX11
inline void DispatchDefaultActionRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.web.DispatchDefaultActionRequest.id)
}
#endif
inline void DispatchDefaultActionRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.web.DispatchDefaultActionRequest.id)
}
inline void DispatchDefaultActionRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.web.DispatchDefaultActionRequest.id)
}
inline ::std::string* DispatchDefaultActionRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.web.DispatchDefaultActionRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DispatchDefaultActionRequest::release_id() {
  // @@protoc_insertion_point(field_release:ric.web.DispatchDefaultActionRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DispatchDefaultActionRequest::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ric.web.DispatchDefaultActionRequest.id)
}

// string name = 5;
inline void DispatchDefaultActionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DispatchDefaultActionRequest::name() const {
  // @@protoc_insertion_point(field_get:ric.web.DispatchDefaultActionRequest.name)
  return name_.GetNoArena();
}
inline void DispatchDefaultActionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.web.DispatchDefaultActionRequest.name)
}
#if LANG_CXX11
inline void DispatchDefaultActionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.web.DispatchDefaultActionRequest.name)
}
#endif
inline void DispatchDefaultActionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.web.DispatchDefaultActionRequest.name)
}
inline void DispatchDefaultActionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.web.DispatchDefaultActionRequest.name)
}
inline ::std::string* DispatchDefaultActionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ric.web.DispatchDefaultActionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DispatchDefaultActionRequest::release_name() {
  // @@protoc_insertion_point(field_release:ric.web.DispatchDefaultActionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DispatchDefaultActionRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ric.web.DispatchDefaultActionRequest.name)
}

// string params = 6;
inline void DispatchDefaultActionRequest::clear_params() {
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DispatchDefaultActionRequest::params() const {
  // @@protoc_insertion_point(field_get:ric.web.DispatchDefaultActionRequest.params)
  return params_.GetNoArena();
}
inline void DispatchDefaultActionRequest::set_params(const ::std::string& value) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.web.DispatchDefaultActionRequest.params)
}
#if LANG_CXX11
inline void DispatchDefaultActionRequest::set_params(::std::string&& value) {
  
  params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.web.DispatchDefaultActionRequest.params)
}
#endif
inline void DispatchDefaultActionRequest::set_params(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.web.DispatchDefaultActionRequest.params)
}
inline void DispatchDefaultActionRequest::set_params(const char* value, size_t size) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.web.DispatchDefaultActionRequest.params)
}
inline ::std::string* DispatchDefaultActionRequest::mutable_params() {
  
  // @@protoc_insertion_point(field_mutable:ric.web.DispatchDefaultActionRequest.params)
  return params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DispatchDefaultActionRequest::release_params() {
  // @@protoc_insertion_point(field_release:ric.web.DispatchDefaultActionRequest.params)
  
  return params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DispatchDefaultActionRequest::set_allocated_params(::std::string* params) {
  if (params != nullptr) {
    
  } else {
    
  }
  params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), params);
  // @@protoc_insertion_point(field_set_allocated:ric.web.DispatchDefaultActionRequest.params)
}

// -------------------------------------------------------------------

// DispatchDefaultActionResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace web
}  // namespace ric

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_ric_2dweb_2fricweb_2eproto
