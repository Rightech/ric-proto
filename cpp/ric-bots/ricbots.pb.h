// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-bots/ricbots.proto

#ifndef PROTOBUF_INCLUDED_ric_2dbots_2fricbots_2eproto
#define PROTOBUF_INCLUDED_ric_2dbots_2fricbots_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ric_2dbots_2fricbots_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_ric_2dbots_2fricbots_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[18]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_ric_2dbots_2fricbots_2eproto();
namespace ric {
namespace bots {
class AddToGenConfigRequest;
class AddToGenConfigRequestDefaultTypeInternal;
extern AddToGenConfigRequestDefaultTypeInternal _AddToGenConfigRequest_default_instance_;
class AddToGenConfigRequest_LinearType;
class AddToGenConfigRequest_LinearTypeDefaultTypeInternal;
extern AddToGenConfigRequest_LinearTypeDefaultTypeInternal _AddToGenConfigRequest_LinearType_default_instance_;
class AddToGenConfigRequest_RandomType;
class AddToGenConfigRequest_RandomTypeDefaultTypeInternal;
extern AddToGenConfigRequest_RandomTypeDefaultTypeInternal _AddToGenConfigRequest_RandomType_default_instance_;
class CallRequest;
class CallRequestDefaultTypeInternal;
extern CallRequestDefaultTypeInternal _CallRequest_default_instance_;
class CallRequest_ParamsEntry_DoNotUse;
class CallRequest_ParamsEntry_DoNotUseDefaultTypeInternal;
extern CallRequest_ParamsEntry_DoNotUseDefaultTypeInternal _CallRequest_ParamsEntry_DoNotUse_default_instance_;
class EmptyResponse;
class EmptyResponseDefaultTypeInternal;
extern EmptyResponseDefaultTypeInternal _EmptyResponse_default_instance_;
class PauseStopGeoRequest;
class PauseStopGeoRequestDefaultTypeInternal;
extern PauseStopGeoRequestDefaultTypeInternal _PauseStopGeoRequest_default_instance_;
class RemoveFromGenConfigRequest;
class RemoveFromGenConfigRequestDefaultTypeInternal;
extern RemoveFromGenConfigRequestDefaultTypeInternal _RemoveFromGenConfigRequest_default_instance_;
class SetBotConfigRequest;
class SetBotConfigRequestDefaultTypeInternal;
extern SetBotConfigRequestDefaultTypeInternal _SetBotConfigRequest_default_instance_;
class SetGeoConfigRequest;
class SetGeoConfigRequestDefaultTypeInternal;
extern SetGeoConfigRequestDefaultTypeInternal _SetGeoConfigRequest_default_instance_;
class SetGeoConfigRequest_MapEntry_DoNotUse;
class SetGeoConfigRequest_MapEntry_DoNotUseDefaultTypeInternal;
extern SetGeoConfigRequest_MapEntry_DoNotUseDefaultTypeInternal _SetGeoConfigRequest_MapEntry_DoNotUse_default_instance_;
class SetGeoConfigRequest_Point;
class SetGeoConfigRequest_PointDefaultTypeInternal;
extern SetGeoConfigRequest_PointDefaultTypeInternal _SetGeoConfigRequest_Point_default_instance_;
class SetStateRequest;
class SetStateRequestDefaultTypeInternal;
extern SetStateRequestDefaultTypeInternal _SetStateRequest_default_instance_;
class SetStateRequest_StateEntry_DoNotUse;
class SetStateRequest_StateEntry_DoNotUseDefaultTypeInternal;
extern SetStateRequest_StateEntry_DoNotUseDefaultTypeInternal _SetStateRequest_StateEntry_DoNotUse_default_instance_;
class SetStateRequest_StateValue;
class SetStateRequest_StateValueDefaultTypeInternal;
extern SetStateRequest_StateValueDefaultTypeInternal _SetStateRequest_StateValue_default_instance_;
class StartGeoRequest;
class StartGeoRequestDefaultTypeInternal;
extern StartGeoRequestDefaultTypeInternal _StartGeoRequest_default_instance_;
class StartRequest;
class StartRequestDefaultTypeInternal;
extern StartRequestDefaultTypeInternal _StartRequest_default_instance_;
class StopRequest;
class StopRequestDefaultTypeInternal;
extern StopRequestDefaultTypeInternal _StopRequest_default_instance_;
}  // namespace bots
}  // namespace ric
namespace google {
namespace protobuf {
template<> ::ric::bots::AddToGenConfigRequest* Arena::CreateMaybeMessage<::ric::bots::AddToGenConfigRequest>(Arena*);
template<> ::ric::bots::AddToGenConfigRequest_LinearType* Arena::CreateMaybeMessage<::ric::bots::AddToGenConfigRequest_LinearType>(Arena*);
template<> ::ric::bots::AddToGenConfigRequest_RandomType* Arena::CreateMaybeMessage<::ric::bots::AddToGenConfigRequest_RandomType>(Arena*);
template<> ::ric::bots::CallRequest* Arena::CreateMaybeMessage<::ric::bots::CallRequest>(Arena*);
template<> ::ric::bots::CallRequest_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage<::ric::bots::CallRequest_ParamsEntry_DoNotUse>(Arena*);
template<> ::ric::bots::EmptyResponse* Arena::CreateMaybeMessage<::ric::bots::EmptyResponse>(Arena*);
template<> ::ric::bots::PauseStopGeoRequest* Arena::CreateMaybeMessage<::ric::bots::PauseStopGeoRequest>(Arena*);
template<> ::ric::bots::RemoveFromGenConfigRequest* Arena::CreateMaybeMessage<::ric::bots::RemoveFromGenConfigRequest>(Arena*);
template<> ::ric::bots::SetBotConfigRequest* Arena::CreateMaybeMessage<::ric::bots::SetBotConfigRequest>(Arena*);
template<> ::ric::bots::SetGeoConfigRequest* Arena::CreateMaybeMessage<::ric::bots::SetGeoConfigRequest>(Arena*);
template<> ::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse* Arena::CreateMaybeMessage<::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse>(Arena*);
template<> ::ric::bots::SetGeoConfigRequest_Point* Arena::CreateMaybeMessage<::ric::bots::SetGeoConfigRequest_Point>(Arena*);
template<> ::ric::bots::SetStateRequest* Arena::CreateMaybeMessage<::ric::bots::SetStateRequest>(Arena*);
template<> ::ric::bots::SetStateRequest_StateEntry_DoNotUse* Arena::CreateMaybeMessage<::ric::bots::SetStateRequest_StateEntry_DoNotUse>(Arena*);
template<> ::ric::bots::SetStateRequest_StateValue* Arena::CreateMaybeMessage<::ric::bots::SetStateRequest_StateValue>(Arena*);
template<> ::ric::bots::StartGeoRequest* Arena::CreateMaybeMessage<::ric::bots::StartGeoRequest>(Arena*);
template<> ::ric::bots::StartRequest* Arena::CreateMaybeMessage<::ric::bots::StartRequest>(Arena*);
template<> ::ric::bots::StopRequest* Arena::CreateMaybeMessage<::ric::bots::StopRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ric {
namespace bots {

enum SetGeoConfigRequest_Mode {
  SetGeoConfigRequest_Mode_UNSET = 0,
  SetGeoConfigRequest_Mode_ONE_WAY = 1,
  SetGeoConfigRequest_Mode_TWO_WAY = 2,
  SetGeoConfigRequest_Mode_SetGeoConfigRequest_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  SetGeoConfigRequest_Mode_SetGeoConfigRequest_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool SetGeoConfigRequest_Mode_IsValid(int value);
const SetGeoConfigRequest_Mode SetGeoConfigRequest_Mode_Mode_MIN = SetGeoConfigRequest_Mode_UNSET;
const SetGeoConfigRequest_Mode SetGeoConfigRequest_Mode_Mode_MAX = SetGeoConfigRequest_Mode_TWO_WAY;
const int SetGeoConfigRequest_Mode_Mode_ARRAYSIZE = SetGeoConfigRequest_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetGeoConfigRequest_Mode_descriptor();
inline const ::std::string& SetGeoConfigRequest_Mode_Name(SetGeoConfigRequest_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetGeoConfigRequest_Mode_descriptor(), value);
}
inline bool SetGeoConfigRequest_Mode_Parse(
    const ::std::string& name, SetGeoConfigRequest_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetGeoConfigRequest_Mode>(
    SetGeoConfigRequest_Mode_descriptor(), name, value);
}
// ===================================================================

class EmptyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.EmptyResponse) */ {
 public:
  EmptyResponse();
  virtual ~EmptyResponse();

  EmptyResponse(const EmptyResponse& from);

  inline EmptyResponse& operator=(const EmptyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmptyResponse(EmptyResponse&& from) noexcept
    : EmptyResponse() {
    *this = ::std::move(from);
  }

  inline EmptyResponse& operator=(EmptyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EmptyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EmptyResponse* internal_default_instance() {
    return reinterpret_cast<const EmptyResponse*>(
               &_EmptyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EmptyResponse* other);
  friend void swap(EmptyResponse& a, EmptyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmptyResponse* New() const final {
    return CreateMaybeMessage<EmptyResponse>(nullptr);
  }

  EmptyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EmptyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EmptyResponse& from);
  void MergeFrom(const EmptyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmptyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ric.bots.EmptyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class StartRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.StartRequest) */ {
 public:
  StartRequest();
  virtual ~StartRequest();

  StartRequest(const StartRequest& from);

  inline StartRequest& operator=(const StartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartRequest(StartRequest&& from) noexcept
    : StartRequest() {
    *this = ::std::move(from);
  }

  inline StartRequest& operator=(StartRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StartRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartRequest* internal_default_instance() {
    return reinterpret_cast<const StartRequest*>(
               &_StartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(StartRequest* other);
  friend void swap(StartRequest& a, StartRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartRequest* New() const final {
    return CreateMaybeMessage<StartRequest>(nullptr);
  }

  StartRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StartRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StartRequest& from);
  void MergeFrom(const StartRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // @@protoc_insertion_point(class_scope:ric.bots.StartRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class StopRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.StopRequest) */ {
 public:
  StopRequest();
  virtual ~StopRequest();

  StopRequest(const StopRequest& from);

  inline StopRequest& operator=(const StopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopRequest(StopRequest&& from) noexcept
    : StopRequest() {
    *this = ::std::move(from);
  }

  inline StopRequest& operator=(StopRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StopRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopRequest* internal_default_instance() {
    return reinterpret_cast<const StopRequest*>(
               &_StopRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(StopRequest* other);
  friend void swap(StopRequest& a, StopRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopRequest* New() const final {
    return CreateMaybeMessage<StopRequest>(nullptr);
  }

  StopRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopRequest& from);
  void MergeFrom(const StopRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // @@protoc_insertion_point(class_scope:ric.bots.StopRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class SetStateRequest_StateValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.SetStateRequest.StateValue) */ {
 public:
  SetStateRequest_StateValue();
  virtual ~SetStateRequest_StateValue();

  SetStateRequest_StateValue(const SetStateRequest_StateValue& from);

  inline SetStateRequest_StateValue& operator=(const SetStateRequest_StateValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetStateRequest_StateValue(SetStateRequest_StateValue&& from) noexcept
    : SetStateRequest_StateValue() {
    *this = ::std::move(from);
  }

  inline SetStateRequest_StateValue& operator=(SetStateRequest_StateValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetStateRequest_StateValue& default_instance();

  enum TypeCase {
    kStringVal = 1,
    kDoubleVal = 2,
    kBoolVal = 3,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetStateRequest_StateValue* internal_default_instance() {
    return reinterpret_cast<const SetStateRequest_StateValue*>(
               &_SetStateRequest_StateValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SetStateRequest_StateValue* other);
  friend void swap(SetStateRequest_StateValue& a, SetStateRequest_StateValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetStateRequest_StateValue* New() const final {
    return CreateMaybeMessage<SetStateRequest_StateValue>(nullptr);
  }

  SetStateRequest_StateValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetStateRequest_StateValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetStateRequest_StateValue& from);
  void MergeFrom(const SetStateRequest_StateValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetStateRequest_StateValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string string_val = 1;
  private:
  bool has_string_val() const;
  public:
  void clear_string_val();
  static const int kStringValFieldNumber = 1;
  const ::std::string& string_val() const;
  void set_string_val(const ::std::string& value);
  #if LANG_CXX11
  void set_string_val(::std::string&& value);
  #endif
  void set_string_val(const char* value);
  void set_string_val(const char* value, size_t size);
  ::std::string* mutable_string_val();
  ::std::string* release_string_val();
  void set_allocated_string_val(::std::string* string_val);

  // double double_val = 2;
  private:
  bool has_double_val() const;
  public:
  void clear_double_val();
  static const int kDoubleValFieldNumber = 2;
  double double_val() const;
  void set_double_val(double value);

  // bool bool_val = 3;
  private:
  bool has_bool_val() const;
  public:
  void clear_bool_val();
  static const int kBoolValFieldNumber = 3;
  bool bool_val() const;
  void set_bool_val(bool value);

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:ric.bots.SetStateRequest.StateValue)
 private:
  class HasBitSetters;
  void set_has_string_val();
  void set_has_double_val();
  void set_has_bool_val();

  inline bool has_type() const;
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    ::google::protobuf::internal::ArenaStringPtr string_val_;
    double double_val_;
    bool bool_val_;
  } type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class SetStateRequest_StateEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SetStateRequest_StateEntry_DoNotUse, 
    ::std::string, ::ric::bots::SetStateRequest_StateValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<SetStateRequest_StateEntry_DoNotUse, 
    ::std::string, ::ric::bots::SetStateRequest_StateValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SetStateRequest_StateEntry_DoNotUse();
  SetStateRequest_StateEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SetStateRequest_StateEntry_DoNotUse& other);
  static const SetStateRequest_StateEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SetStateRequest_StateEntry_DoNotUse*>(&_SetStateRequest_StateEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SetStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.SetStateRequest) */ {
 public:
  SetStateRequest();
  virtual ~SetStateRequest();

  SetStateRequest(const SetStateRequest& from);

  inline SetStateRequest& operator=(const SetStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetStateRequest(SetStateRequest&& from) noexcept
    : SetStateRequest() {
    *this = ::std::move(from);
  }

  inline SetStateRequest& operator=(SetStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetStateRequest* internal_default_instance() {
    return reinterpret_cast<const SetStateRequest*>(
               &_SetStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(SetStateRequest* other);
  friend void swap(SetStateRequest& a, SetStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetStateRequest* New() const final {
    return CreateMaybeMessage<SetStateRequest>(nullptr);
  }

  SetStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetStateRequest& from);
  void MergeFrom(const SetStateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SetStateRequest_StateValue StateValue;

  // accessors -------------------------------------------------------

  // map<string, .ric.bots.SetStateRequest.StateValue> state = 2;
  int state_size() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >&
      state() const;
  ::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >*
      mutable_state();

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // @@protoc_insertion_point(class_scope:ric.bots.SetStateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SetStateRequest_StateEntry_DoNotUse,
      ::std::string, ::ric::bots::SetStateRequest_StateValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > state_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class SetGeoConfigRequest_Point final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.SetGeoConfigRequest.Point) */ {
 public:
  SetGeoConfigRequest_Point();
  virtual ~SetGeoConfigRequest_Point();

  SetGeoConfigRequest_Point(const SetGeoConfigRequest_Point& from);

  inline SetGeoConfigRequest_Point& operator=(const SetGeoConfigRequest_Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGeoConfigRequest_Point(SetGeoConfigRequest_Point&& from) noexcept
    : SetGeoConfigRequest_Point() {
    *this = ::std::move(from);
  }

  inline SetGeoConfigRequest_Point& operator=(SetGeoConfigRequest_Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetGeoConfigRequest_Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetGeoConfigRequest_Point* internal_default_instance() {
    return reinterpret_cast<const SetGeoConfigRequest_Point*>(
               &_SetGeoConfigRequest_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(SetGeoConfigRequest_Point* other);
  friend void swap(SetGeoConfigRequest_Point& a, SetGeoConfigRequest_Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGeoConfigRequest_Point* New() const final {
    return CreateMaybeMessage<SetGeoConfigRequest_Point>(nullptr);
  }

  SetGeoConfigRequest_Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetGeoConfigRequest_Point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetGeoConfigRequest_Point& from);
  void MergeFrom(const SetGeoConfigRequest_Point& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetGeoConfigRequest_Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double lat = 1;
  void clear_lat();
  static const int kLatFieldNumber = 1;
  double lat() const;
  void set_lat(double value);

  // double lon = 2;
  void clear_lon();
  static const int kLonFieldNumber = 2;
  double lon() const;
  void set_lon(double value);

  // @@protoc_insertion_point(class_scope:ric.bots.SetGeoConfigRequest.Point)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double lat_;
  double lon_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class SetGeoConfigRequest_MapEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SetGeoConfigRequest_MapEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<SetGeoConfigRequest_MapEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  SetGeoConfigRequest_MapEntry_DoNotUse();
  SetGeoConfigRequest_MapEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SetGeoConfigRequest_MapEntry_DoNotUse& other);
  static const SetGeoConfigRequest_MapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SetGeoConfigRequest_MapEntry_DoNotUse*>(&_SetGeoConfigRequest_MapEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SetGeoConfigRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.SetGeoConfigRequest) */ {
 public:
  SetGeoConfigRequest();
  virtual ~SetGeoConfigRequest();

  SetGeoConfigRequest(const SetGeoConfigRequest& from);

  inline SetGeoConfigRequest& operator=(const SetGeoConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGeoConfigRequest(SetGeoConfigRequest&& from) noexcept
    : SetGeoConfigRequest() {
    *this = ::std::move(from);
  }

  inline SetGeoConfigRequest& operator=(SetGeoConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetGeoConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetGeoConfigRequest* internal_default_instance() {
    return reinterpret_cast<const SetGeoConfigRequest*>(
               &_SetGeoConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(SetGeoConfigRequest* other);
  friend void swap(SetGeoConfigRequest& a, SetGeoConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGeoConfigRequest* New() const final {
    return CreateMaybeMessage<SetGeoConfigRequest>(nullptr);
  }

  SetGeoConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetGeoConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetGeoConfigRequest& from);
  void MergeFrom(const SetGeoConfigRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetGeoConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SetGeoConfigRequest_Point Point;

  typedef SetGeoConfigRequest_Mode Mode;
  static const Mode UNSET =
    SetGeoConfigRequest_Mode_UNSET;
  static const Mode ONE_WAY =
    SetGeoConfigRequest_Mode_ONE_WAY;
  static const Mode TWO_WAY =
    SetGeoConfigRequest_Mode_TWO_WAY;
  static inline bool Mode_IsValid(int value) {
    return SetGeoConfigRequest_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    SetGeoConfigRequest_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    SetGeoConfigRequest_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    SetGeoConfigRequest_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return SetGeoConfigRequest_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return SetGeoConfigRequest_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return SetGeoConfigRequest_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<string, string> map = 4;
  int map_size() const;
  void clear_map();
  static const int kMapFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      map() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_map();

  // repeated .ric.bots.SetGeoConfigRequest.Point track = 5;
  int track_size() const;
  void clear_track();
  static const int kTrackFieldNumber = 5;
  ::ric::bots::SetGeoConfigRequest_Point* mutable_track(int index);
  ::google::protobuf::RepeatedPtrField< ::ric::bots::SetGeoConfigRequest_Point >*
      mutable_track();
  const ::ric::bots::SetGeoConfigRequest_Point& track(int index) const;
  ::ric::bots::SetGeoConfigRequest_Point* add_track();
  const ::google::protobuf::RepeatedPtrField< ::ric::bots::SetGeoConfigRequest_Point >&
      track() const;

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // .ric.bots.SetGeoConfigRequest.Mode mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::ric::bots::SetGeoConfigRequest_Mode mode() const;
  void set_mode(::ric::bots::SetGeoConfigRequest_Mode value);

  // bool repeat = 3;
  void clear_repeat();
  static const int kRepeatFieldNumber = 3;
  bool repeat() const;
  void set_repeat(bool value);

  // @@protoc_insertion_point(class_scope:ric.bots.SetGeoConfigRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SetGeoConfigRequest_MapEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map_;
  ::google::protobuf::RepeatedPtrField< ::ric::bots::SetGeoConfigRequest_Point > track_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  int mode_;
  bool repeat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class AddToGenConfigRequest_RandomType final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.AddToGenConfigRequest.RandomType) */ {
 public:
  AddToGenConfigRequest_RandomType();
  virtual ~AddToGenConfigRequest_RandomType();

  AddToGenConfigRequest_RandomType(const AddToGenConfigRequest_RandomType& from);

  inline AddToGenConfigRequest_RandomType& operator=(const AddToGenConfigRequest_RandomType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddToGenConfigRequest_RandomType(AddToGenConfigRequest_RandomType&& from) noexcept
    : AddToGenConfigRequest_RandomType() {
    *this = ::std::move(from);
  }

  inline AddToGenConfigRequest_RandomType& operator=(AddToGenConfigRequest_RandomType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AddToGenConfigRequest_RandomType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddToGenConfigRequest_RandomType* internal_default_instance() {
    return reinterpret_cast<const AddToGenConfigRequest_RandomType*>(
               &_AddToGenConfigRequest_RandomType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(AddToGenConfigRequest_RandomType* other);
  friend void swap(AddToGenConfigRequest_RandomType& a, AddToGenConfigRequest_RandomType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddToGenConfigRequest_RandomType* New() const final {
    return CreateMaybeMessage<AddToGenConfigRequest_RandomType>(nullptr);
  }

  AddToGenConfigRequest_RandomType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddToGenConfigRequest_RandomType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddToGenConfigRequest_RandomType& from);
  void MergeFrom(const AddToGenConfigRequest_RandomType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddToGenConfigRequest_RandomType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  double min() const;
  void set_min(double value);

  // double max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  double max() const;
  void set_max(double value);

  // @@protoc_insertion_point(class_scope:ric.bots.AddToGenConfigRequest.RandomType)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double min_;
  double max_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class AddToGenConfigRequest_LinearType final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.AddToGenConfigRequest.LinearType) */ {
 public:
  AddToGenConfigRequest_LinearType();
  virtual ~AddToGenConfigRequest_LinearType();

  AddToGenConfigRequest_LinearType(const AddToGenConfigRequest_LinearType& from);

  inline AddToGenConfigRequest_LinearType& operator=(const AddToGenConfigRequest_LinearType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddToGenConfigRequest_LinearType(AddToGenConfigRequest_LinearType&& from) noexcept
    : AddToGenConfigRequest_LinearType() {
    *this = ::std::move(from);
  }

  inline AddToGenConfigRequest_LinearType& operator=(AddToGenConfigRequest_LinearType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AddToGenConfigRequest_LinearType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddToGenConfigRequest_LinearType* internal_default_instance() {
    return reinterpret_cast<const AddToGenConfigRequest_LinearType*>(
               &_AddToGenConfigRequest_LinearType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(AddToGenConfigRequest_LinearType* other);
  friend void swap(AddToGenConfigRequest_LinearType& a, AddToGenConfigRequest_LinearType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddToGenConfigRequest_LinearType* New() const final {
    return CreateMaybeMessage<AddToGenConfigRequest_LinearType>(nullptr);
  }

  AddToGenConfigRequest_LinearType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddToGenConfigRequest_LinearType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddToGenConfigRequest_LinearType& from);
  void MergeFrom(const AddToGenConfigRequest_LinearType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddToGenConfigRequest_LinearType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double step = 1;
  void clear_step();
  static const int kStepFieldNumber = 1;
  double step() const;
  void set_step(double value);

  // @@protoc_insertion_point(class_scope:ric.bots.AddToGenConfigRequest.LinearType)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double step_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class AddToGenConfigRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.AddToGenConfigRequest) */ {
 public:
  AddToGenConfigRequest();
  virtual ~AddToGenConfigRequest();

  AddToGenConfigRequest(const AddToGenConfigRequest& from);

  inline AddToGenConfigRequest& operator=(const AddToGenConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddToGenConfigRequest(AddToGenConfigRequest&& from) noexcept
    : AddToGenConfigRequest() {
    *this = ::std::move(from);
  }

  inline AddToGenConfigRequest& operator=(AddToGenConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AddToGenConfigRequest& default_instance();

  enum TypeCase {
    kRandom = 3,
    kLinear = 4,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddToGenConfigRequest* internal_default_instance() {
    return reinterpret_cast<const AddToGenConfigRequest*>(
               &_AddToGenConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(AddToGenConfigRequest* other);
  friend void swap(AddToGenConfigRequest& a, AddToGenConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddToGenConfigRequest* New() const final {
    return CreateMaybeMessage<AddToGenConfigRequest>(nullptr);
  }

  AddToGenConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddToGenConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddToGenConfigRequest& from);
  void MergeFrom(const AddToGenConfigRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddToGenConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AddToGenConfigRequest_RandomType RandomType;
  typedef AddToGenConfigRequest_LinearType LinearType;

  // accessors -------------------------------------------------------

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .ric.bots.AddToGenConfigRequest.RandomType random = 3;
  bool has_random() const;
  void clear_random();
  static const int kRandomFieldNumber = 3;
  const ::ric::bots::AddToGenConfigRequest_RandomType& random() const;
  ::ric::bots::AddToGenConfigRequest_RandomType* release_random();
  ::ric::bots::AddToGenConfigRequest_RandomType* mutable_random();
  void set_allocated_random(::ric::bots::AddToGenConfigRequest_RandomType* random);

  // .ric.bots.AddToGenConfigRequest.LinearType linear = 4;
  bool has_linear() const;
  void clear_linear();
  static const int kLinearFieldNumber = 4;
  const ::ric::bots::AddToGenConfigRequest_LinearType& linear() const;
  ::ric::bots::AddToGenConfigRequest_LinearType* release_linear();
  ::ric::bots::AddToGenConfigRequest_LinearType* mutable_linear();
  void set_allocated_linear(::ric::bots::AddToGenConfigRequest_LinearType* linear);

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:ric.bots.AddToGenConfigRequest)
 private:
  class HasBitSetters;
  void set_has_random();
  void set_has_linear();

  inline bool has_type() const;
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  union TypeUnion {
    TypeUnion() {}
    ::ric::bots::AddToGenConfigRequest_RandomType* random_;
    ::ric::bots::AddToGenConfigRequest_LinearType* linear_;
  } type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class RemoveFromGenConfigRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.RemoveFromGenConfigRequest) */ {
 public:
  RemoveFromGenConfigRequest();
  virtual ~RemoveFromGenConfigRequest();

  RemoveFromGenConfigRequest(const RemoveFromGenConfigRequest& from);

  inline RemoveFromGenConfigRequest& operator=(const RemoveFromGenConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveFromGenConfigRequest(RemoveFromGenConfigRequest&& from) noexcept
    : RemoveFromGenConfigRequest() {
    *this = ::std::move(from);
  }

  inline RemoveFromGenConfigRequest& operator=(RemoveFromGenConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RemoveFromGenConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveFromGenConfigRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveFromGenConfigRequest*>(
               &_RemoveFromGenConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(RemoveFromGenConfigRequest* other);
  friend void swap(RemoveFromGenConfigRequest& a, RemoveFromGenConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveFromGenConfigRequest* New() const final {
    return CreateMaybeMessage<RemoveFromGenConfigRequest>(nullptr);
  }

  RemoveFromGenConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoveFromGenConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoveFromGenConfigRequest& from);
  void MergeFrom(const RemoveFromGenConfigRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveFromGenConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ric.bots.RemoveFromGenConfigRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class PauseStopGeoRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.PauseStopGeoRequest) */ {
 public:
  PauseStopGeoRequest();
  virtual ~PauseStopGeoRequest();

  PauseStopGeoRequest(const PauseStopGeoRequest& from);

  inline PauseStopGeoRequest& operator=(const PauseStopGeoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PauseStopGeoRequest(PauseStopGeoRequest&& from) noexcept
    : PauseStopGeoRequest() {
    *this = ::std::move(from);
  }

  inline PauseStopGeoRequest& operator=(PauseStopGeoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PauseStopGeoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PauseStopGeoRequest* internal_default_instance() {
    return reinterpret_cast<const PauseStopGeoRequest*>(
               &_PauseStopGeoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(PauseStopGeoRequest* other);
  friend void swap(PauseStopGeoRequest& a, PauseStopGeoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PauseStopGeoRequest* New() const final {
    return CreateMaybeMessage<PauseStopGeoRequest>(nullptr);
  }

  PauseStopGeoRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PauseStopGeoRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PauseStopGeoRequest& from);
  void MergeFrom(const PauseStopGeoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PauseStopGeoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // bool stop = 2;
  void clear_stop();
  static const int kStopFieldNumber = 2;
  bool stop() const;
  void set_stop(bool value);

  // @@protoc_insertion_point(class_scope:ric.bots.PauseStopGeoRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  bool stop_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class StartGeoRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.StartGeoRequest) */ {
 public:
  StartGeoRequest();
  virtual ~StartGeoRequest();

  StartGeoRequest(const StartGeoRequest& from);

  inline StartGeoRequest& operator=(const StartGeoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartGeoRequest(StartGeoRequest&& from) noexcept
    : StartGeoRequest() {
    *this = ::std::move(from);
  }

  inline StartGeoRequest& operator=(StartGeoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StartGeoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartGeoRequest* internal_default_instance() {
    return reinterpret_cast<const StartGeoRequest*>(
               &_StartGeoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(StartGeoRequest* other);
  friend void swap(StartGeoRequest& a, StartGeoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartGeoRequest* New() const final {
    return CreateMaybeMessage<StartGeoRequest>(nullptr);
  }

  StartGeoRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StartGeoRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StartGeoRequest& from);
  void MergeFrom(const StartGeoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartGeoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // @@protoc_insertion_point(class_scope:ric.bots.StartGeoRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class SetBotConfigRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.SetBotConfigRequest) */ {
 public:
  SetBotConfigRequest();
  virtual ~SetBotConfigRequest();

  SetBotConfigRequest(const SetBotConfigRequest& from);

  inline SetBotConfigRequest& operator=(const SetBotConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetBotConfigRequest(SetBotConfigRequest&& from) noexcept
    : SetBotConfigRequest() {
    *this = ::std::move(from);
  }

  inline SetBotConfigRequest& operator=(SetBotConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetBotConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetBotConfigRequest* internal_default_instance() {
    return reinterpret_cast<const SetBotConfigRequest*>(
               &_SetBotConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(SetBotConfigRequest* other);
  friend void swap(SetBotConfigRequest& a, SetBotConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetBotConfigRequest* New() const final {
    return CreateMaybeMessage<SetBotConfigRequest>(nullptr);
  }

  SetBotConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetBotConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetBotConfigRequest& from);
  void MergeFrom(const SetBotConfigRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetBotConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // double send_interval = 2;
  void clear_send_interval();
  static const int kSendIntervalFieldNumber = 2;
  double send_interval() const;
  void set_send_interval(double value);

  // @@protoc_insertion_point(class_scope:ric.bots.SetBotConfigRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  double send_interval_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// -------------------------------------------------------------------

class CallRequest_ParamsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<CallRequest_ParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<CallRequest_ParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  CallRequest_ParamsEntry_DoNotUse();
  CallRequest_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const CallRequest_ParamsEntry_DoNotUse& other);
  static const CallRequest_ParamsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CallRequest_ParamsEntry_DoNotUse*>(&_CallRequest_ParamsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class CallRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.bots.CallRequest) */ {
 public:
  CallRequest();
  virtual ~CallRequest();

  CallRequest(const CallRequest& from);

  inline CallRequest& operator=(const CallRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CallRequest(CallRequest&& from) noexcept
    : CallRequest() {
    *this = ::std::move(from);
  }

  inline CallRequest& operator=(CallRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CallRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CallRequest* internal_default_instance() {
    return reinterpret_cast<const CallRequest*>(
               &_CallRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CallRequest* other);
  friend void swap(CallRequest& a, CallRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CallRequest* New() const final {
    return CreateMaybeMessage<CallRequest>(nullptr);
  }

  CallRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CallRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CallRequest& from);
  void MergeFrom(const CallRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CallRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> params = 2;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      params() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_params();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ric.bots.CallRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      CallRequest_ParamsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > params_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dbots_2fricbots_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EmptyResponse

// -------------------------------------------------------------------

// StartRequest

// string object_id = 1;
inline void StartRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.bots.StartRequest.object_id)
  return object_id_.GetNoArena();
}
inline void StartRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.StartRequest.object_id)
}
#if LANG_CXX11
inline void StartRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.StartRequest.object_id)
}
#endif
inline void StartRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.StartRequest.object_id)
}
inline void StartRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.StartRequest.object_id)
}
inline ::std::string* StartRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.StartRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.bots.StartRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.StartRequest.object_id)
}

// -------------------------------------------------------------------

// StopRequest

// string object_id = 1;
inline void StopRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.bots.StopRequest.object_id)
  return object_id_.GetNoArena();
}
inline void StopRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.StopRequest.object_id)
}
#if LANG_CXX11
inline void StopRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.StopRequest.object_id)
}
#endif
inline void StopRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.StopRequest.object_id)
}
inline void StopRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.StopRequest.object_id)
}
inline ::std::string* StopRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.StopRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.bots.StopRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.StopRequest.object_id)
}

// -------------------------------------------------------------------

// SetStateRequest_StateValue

// string string_val = 1;
inline bool SetStateRequest_StateValue::has_string_val() const {
  return type_case() == kStringVal;
}
inline void SetStateRequest_StateValue::set_has_string_val() {
  _oneof_case_[0] = kStringVal;
}
inline void SetStateRequest_StateValue::clear_string_val() {
  if (has_string_val()) {
    type_.string_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_type();
  }
}
inline const ::std::string& SetStateRequest_StateValue::string_val() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetStateRequest.StateValue.string_val)
  if (has_string_val()) {
    return type_.string_val_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void SetStateRequest_StateValue::set_string_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ric.bots.SetStateRequest.StateValue.string_val)
  if (!has_string_val()) {
    clear_type();
    set_has_string_val();
    type_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.SetStateRequest.StateValue.string_val)
}
#if LANG_CXX11
inline void SetStateRequest_StateValue::set_string_val(::std::string&& value) {
  // @@protoc_insertion_point(field_set:ric.bots.SetStateRequest.StateValue.string_val)
  if (!has_string_val()) {
    clear_type();
    set_has_string_val();
    type_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.SetStateRequest.StateValue.string_val)
}
#endif
inline void SetStateRequest_StateValue::set_string_val(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_string_val()) {
    clear_type();
    set_has_string_val();
    type_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.SetStateRequest.StateValue.string_val)
}
inline void SetStateRequest_StateValue::set_string_val(const char* value, size_t size) {
  if (!has_string_val()) {
    clear_type();
    set_has_string_val();
    type_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.SetStateRequest.StateValue.string_val)
}
inline ::std::string* SetStateRequest_StateValue::mutable_string_val() {
  if (!has_string_val()) {
    clear_type();
    set_has_string_val();
    type_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:ric.bots.SetStateRequest.StateValue.string_val)
  return type_.string_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetStateRequest_StateValue::release_string_val() {
  // @@protoc_insertion_point(field_release:ric.bots.SetStateRequest.StateValue.string_val)
  if (has_string_val()) {
    clear_has_type();
    return type_.string_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void SetStateRequest_StateValue::set_allocated_string_val(::std::string* string_val) {
  if (has_type()) {
    clear_type();
  }
  if (string_val != nullptr) {
    set_has_string_val();
    type_.string_val_.UnsafeSetDefault(string_val);
  }
  // @@protoc_insertion_point(field_set_allocated:ric.bots.SetStateRequest.StateValue.string_val)
}

// double double_val = 2;
inline bool SetStateRequest_StateValue::has_double_val() const {
  return type_case() == kDoubleVal;
}
inline void SetStateRequest_StateValue::set_has_double_val() {
  _oneof_case_[0] = kDoubleVal;
}
inline void SetStateRequest_StateValue::clear_double_val() {
  if (has_double_val()) {
    type_.double_val_ = 0;
    clear_has_type();
  }
}
inline double SetStateRequest_StateValue::double_val() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetStateRequest.StateValue.double_val)
  if (has_double_val()) {
    return type_.double_val_;
  }
  return 0;
}
inline void SetStateRequest_StateValue::set_double_val(double value) {
  if (!has_double_val()) {
    clear_type();
    set_has_double_val();
  }
  type_.double_val_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.SetStateRequest.StateValue.double_val)
}

// bool bool_val = 3;
inline bool SetStateRequest_StateValue::has_bool_val() const {
  return type_case() == kBoolVal;
}
inline void SetStateRequest_StateValue::set_has_bool_val() {
  _oneof_case_[0] = kBoolVal;
}
inline void SetStateRequest_StateValue::clear_bool_val() {
  if (has_bool_val()) {
    type_.bool_val_ = false;
    clear_has_type();
  }
}
inline bool SetStateRequest_StateValue::bool_val() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetStateRequest.StateValue.bool_val)
  if (has_bool_val()) {
    return type_.bool_val_;
  }
  return false;
}
inline void SetStateRequest_StateValue::set_bool_val(bool value) {
  if (!has_bool_val()) {
    clear_type();
    set_has_bool_val();
  }
  type_.bool_val_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.SetStateRequest.StateValue.bool_val)
}

inline bool SetStateRequest_StateValue::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void SetStateRequest_StateValue::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline SetStateRequest_StateValue::TypeCase SetStateRequest_StateValue::type_case() const {
  return SetStateRequest_StateValue::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SetStateRequest

// string object_id = 1;
inline void SetStateRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetStateRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetStateRequest.object_id)
  return object_id_.GetNoArena();
}
inline void SetStateRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.SetStateRequest.object_id)
}
#if LANG_CXX11
inline void SetStateRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.SetStateRequest.object_id)
}
#endif
inline void SetStateRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.SetStateRequest.object_id)
}
inline void SetStateRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.SetStateRequest.object_id)
}
inline ::std::string* SetStateRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.SetStateRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetStateRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.bots.SetStateRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetStateRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.SetStateRequest.object_id)
}

// map<string, .ric.bots.SetStateRequest.StateValue> state = 2;
inline int SetStateRequest::state_size() const {
  return state_.size();
}
inline void SetStateRequest::clear_state() {
  state_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >&
SetStateRequest::state() const {
  // @@protoc_insertion_point(field_map:ric.bots.SetStateRequest.state)
  return state_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >*
SetStateRequest::mutable_state() {
  // @@protoc_insertion_point(field_mutable_map:ric.bots.SetStateRequest.state)
  return state_.MutableMap();
}

// -------------------------------------------------------------------

// SetGeoConfigRequest_Point

// double lat = 1;
inline void SetGeoConfigRequest_Point::clear_lat() {
  lat_ = 0;
}
inline double SetGeoConfigRequest_Point::lat() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetGeoConfigRequest.Point.lat)
  return lat_;
}
inline void SetGeoConfigRequest_Point::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.SetGeoConfigRequest.Point.lat)
}

// double lon = 2;
inline void SetGeoConfigRequest_Point::clear_lon() {
  lon_ = 0;
}
inline double SetGeoConfigRequest_Point::lon() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetGeoConfigRequest.Point.lon)
  return lon_;
}
inline void SetGeoConfigRequest_Point::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.SetGeoConfigRequest.Point.lon)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SetGeoConfigRequest

// string object_id = 1;
inline void SetGeoConfigRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGeoConfigRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetGeoConfigRequest.object_id)
  return object_id_.GetNoArena();
}
inline void SetGeoConfigRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.SetGeoConfigRequest.object_id)
}
#if LANG_CXX11
inline void SetGeoConfigRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.SetGeoConfigRequest.object_id)
}
#endif
inline void SetGeoConfigRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.SetGeoConfigRequest.object_id)
}
inline void SetGeoConfigRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.SetGeoConfigRequest.object_id)
}
inline ::std::string* SetGeoConfigRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.SetGeoConfigRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGeoConfigRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.bots.SetGeoConfigRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGeoConfigRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.SetGeoConfigRequest.object_id)
}

// .ric.bots.SetGeoConfigRequest.Mode mode = 2;
inline void SetGeoConfigRequest::clear_mode() {
  mode_ = 0;
}
inline ::ric::bots::SetGeoConfigRequest_Mode SetGeoConfigRequest::mode() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetGeoConfigRequest.mode)
  return static_cast< ::ric::bots::SetGeoConfigRequest_Mode >(mode_);
}
inline void SetGeoConfigRequest::set_mode(::ric::bots::SetGeoConfigRequest_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.SetGeoConfigRequest.mode)
}

// bool repeat = 3;
inline void SetGeoConfigRequest::clear_repeat() {
  repeat_ = false;
}
inline bool SetGeoConfigRequest::repeat() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetGeoConfigRequest.repeat)
  return repeat_;
}
inline void SetGeoConfigRequest::set_repeat(bool value) {
  
  repeat_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.SetGeoConfigRequest.repeat)
}

// map<string, string> map = 4;
inline int SetGeoConfigRequest::map_size() const {
  return map_.size();
}
inline void SetGeoConfigRequest::clear_map() {
  map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
SetGeoConfigRequest::map() const {
  // @@protoc_insertion_point(field_map:ric.bots.SetGeoConfigRequest.map)
  return map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
SetGeoConfigRequest::mutable_map() {
  // @@protoc_insertion_point(field_mutable_map:ric.bots.SetGeoConfigRequest.map)
  return map_.MutableMap();
}

// repeated .ric.bots.SetGeoConfigRequest.Point track = 5;
inline int SetGeoConfigRequest::track_size() const {
  return track_.size();
}
inline void SetGeoConfigRequest::clear_track() {
  track_.Clear();
}
inline ::ric::bots::SetGeoConfigRequest_Point* SetGeoConfigRequest::mutable_track(int index) {
  // @@protoc_insertion_point(field_mutable:ric.bots.SetGeoConfigRequest.track)
  return track_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ric::bots::SetGeoConfigRequest_Point >*
SetGeoConfigRequest::mutable_track() {
  // @@protoc_insertion_point(field_mutable_list:ric.bots.SetGeoConfigRequest.track)
  return &track_;
}
inline const ::ric::bots::SetGeoConfigRequest_Point& SetGeoConfigRequest::track(int index) const {
  // @@protoc_insertion_point(field_get:ric.bots.SetGeoConfigRequest.track)
  return track_.Get(index);
}
inline ::ric::bots::SetGeoConfigRequest_Point* SetGeoConfigRequest::add_track() {
  // @@protoc_insertion_point(field_add:ric.bots.SetGeoConfigRequest.track)
  return track_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ric::bots::SetGeoConfigRequest_Point >&
SetGeoConfigRequest::track() const {
  // @@protoc_insertion_point(field_list:ric.bots.SetGeoConfigRequest.track)
  return track_;
}

// -------------------------------------------------------------------

// AddToGenConfigRequest_RandomType

// double min = 1;
inline void AddToGenConfigRequest_RandomType::clear_min() {
  min_ = 0;
}
inline double AddToGenConfigRequest_RandomType::min() const {
  // @@protoc_insertion_point(field_get:ric.bots.AddToGenConfigRequest.RandomType.min)
  return min_;
}
inline void AddToGenConfigRequest_RandomType::set_min(double value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.AddToGenConfigRequest.RandomType.min)
}

// double max = 2;
inline void AddToGenConfigRequest_RandomType::clear_max() {
  max_ = 0;
}
inline double AddToGenConfigRequest_RandomType::max() const {
  // @@protoc_insertion_point(field_get:ric.bots.AddToGenConfigRequest.RandomType.max)
  return max_;
}
inline void AddToGenConfigRequest_RandomType::set_max(double value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.AddToGenConfigRequest.RandomType.max)
}

// -------------------------------------------------------------------

// AddToGenConfigRequest_LinearType

// double step = 1;
inline void AddToGenConfigRequest_LinearType::clear_step() {
  step_ = 0;
}
inline double AddToGenConfigRequest_LinearType::step() const {
  // @@protoc_insertion_point(field_get:ric.bots.AddToGenConfigRequest.LinearType.step)
  return step_;
}
inline void AddToGenConfigRequest_LinearType::set_step(double value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.AddToGenConfigRequest.LinearType.step)
}

// -------------------------------------------------------------------

// AddToGenConfigRequest

// string object_id = 1;
inline void AddToGenConfigRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddToGenConfigRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.bots.AddToGenConfigRequest.object_id)
  return object_id_.GetNoArena();
}
inline void AddToGenConfigRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.AddToGenConfigRequest.object_id)
}
#if LANG_CXX11
inline void AddToGenConfigRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.AddToGenConfigRequest.object_id)
}
#endif
inline void AddToGenConfigRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.AddToGenConfigRequest.object_id)
}
inline void AddToGenConfigRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.AddToGenConfigRequest.object_id)
}
inline ::std::string* AddToGenConfigRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.AddToGenConfigRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddToGenConfigRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.bots.AddToGenConfigRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddToGenConfigRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.AddToGenConfigRequest.object_id)
}

// string name = 2;
inline void AddToGenConfigRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddToGenConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:ric.bots.AddToGenConfigRequest.name)
  return name_.GetNoArena();
}
inline void AddToGenConfigRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.AddToGenConfigRequest.name)
}
#if LANG_CXX11
inline void AddToGenConfigRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.AddToGenConfigRequest.name)
}
#endif
inline void AddToGenConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.AddToGenConfigRequest.name)
}
inline void AddToGenConfigRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.AddToGenConfigRequest.name)
}
inline ::std::string* AddToGenConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.AddToGenConfigRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddToGenConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:ric.bots.AddToGenConfigRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddToGenConfigRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.AddToGenConfigRequest.name)
}

// .ric.bots.AddToGenConfigRequest.RandomType random = 3;
inline bool AddToGenConfigRequest::has_random() const {
  return type_case() == kRandom;
}
inline void AddToGenConfigRequest::set_has_random() {
  _oneof_case_[0] = kRandom;
}
inline void AddToGenConfigRequest::clear_random() {
  if (has_random()) {
    delete type_.random_;
    clear_has_type();
  }
}
inline ::ric::bots::AddToGenConfigRequest_RandomType* AddToGenConfigRequest::release_random() {
  // @@protoc_insertion_point(field_release:ric.bots.AddToGenConfigRequest.random)
  if (has_random()) {
    clear_has_type();
      ::ric::bots::AddToGenConfigRequest_RandomType* temp = type_.random_;
    type_.random_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ric::bots::AddToGenConfigRequest_RandomType& AddToGenConfigRequest::random() const {
  // @@protoc_insertion_point(field_get:ric.bots.AddToGenConfigRequest.random)
  return has_random()
      ? *type_.random_
      : *reinterpret_cast< ::ric::bots::AddToGenConfigRequest_RandomType*>(&::ric::bots::_AddToGenConfigRequest_RandomType_default_instance_);
}
inline ::ric::bots::AddToGenConfigRequest_RandomType* AddToGenConfigRequest::mutable_random() {
  if (!has_random()) {
    clear_type();
    set_has_random();
    type_.random_ = CreateMaybeMessage< ::ric::bots::AddToGenConfigRequest_RandomType >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ric.bots.AddToGenConfigRequest.random)
  return type_.random_;
}

// .ric.bots.AddToGenConfigRequest.LinearType linear = 4;
inline bool AddToGenConfigRequest::has_linear() const {
  return type_case() == kLinear;
}
inline void AddToGenConfigRequest::set_has_linear() {
  _oneof_case_[0] = kLinear;
}
inline void AddToGenConfigRequest::clear_linear() {
  if (has_linear()) {
    delete type_.linear_;
    clear_has_type();
  }
}
inline ::ric::bots::AddToGenConfigRequest_LinearType* AddToGenConfigRequest::release_linear() {
  // @@protoc_insertion_point(field_release:ric.bots.AddToGenConfigRequest.linear)
  if (has_linear()) {
    clear_has_type();
      ::ric::bots::AddToGenConfigRequest_LinearType* temp = type_.linear_;
    type_.linear_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ric::bots::AddToGenConfigRequest_LinearType& AddToGenConfigRequest::linear() const {
  // @@protoc_insertion_point(field_get:ric.bots.AddToGenConfigRequest.linear)
  return has_linear()
      ? *type_.linear_
      : *reinterpret_cast< ::ric::bots::AddToGenConfigRequest_LinearType*>(&::ric::bots::_AddToGenConfigRequest_LinearType_default_instance_);
}
inline ::ric::bots::AddToGenConfigRequest_LinearType* AddToGenConfigRequest::mutable_linear() {
  if (!has_linear()) {
    clear_type();
    set_has_linear();
    type_.linear_ = CreateMaybeMessage< ::ric::bots::AddToGenConfigRequest_LinearType >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ric.bots.AddToGenConfigRequest.linear)
  return type_.linear_;
}

inline bool AddToGenConfigRequest::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void AddToGenConfigRequest::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline AddToGenConfigRequest::TypeCase AddToGenConfigRequest::type_case() const {
  return AddToGenConfigRequest::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RemoveFromGenConfigRequest

// string object_id = 1;
inline void RemoveFromGenConfigRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveFromGenConfigRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.bots.RemoveFromGenConfigRequest.object_id)
  return object_id_.GetNoArena();
}
inline void RemoveFromGenConfigRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.RemoveFromGenConfigRequest.object_id)
}
#if LANG_CXX11
inline void RemoveFromGenConfigRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.RemoveFromGenConfigRequest.object_id)
}
#endif
inline void RemoveFromGenConfigRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.RemoveFromGenConfigRequest.object_id)
}
inline void RemoveFromGenConfigRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.RemoveFromGenConfigRequest.object_id)
}
inline ::std::string* RemoveFromGenConfigRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.RemoveFromGenConfigRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveFromGenConfigRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.bots.RemoveFromGenConfigRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveFromGenConfigRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.RemoveFromGenConfigRequest.object_id)
}

// string name = 2;
inline void RemoveFromGenConfigRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveFromGenConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:ric.bots.RemoveFromGenConfigRequest.name)
  return name_.GetNoArena();
}
inline void RemoveFromGenConfigRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.RemoveFromGenConfigRequest.name)
}
#if LANG_CXX11
inline void RemoveFromGenConfigRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.RemoveFromGenConfigRequest.name)
}
#endif
inline void RemoveFromGenConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.RemoveFromGenConfigRequest.name)
}
inline void RemoveFromGenConfigRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.RemoveFromGenConfigRequest.name)
}
inline ::std::string* RemoveFromGenConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.RemoveFromGenConfigRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveFromGenConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:ric.bots.RemoveFromGenConfigRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveFromGenConfigRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.RemoveFromGenConfigRequest.name)
}

// -------------------------------------------------------------------

// PauseStopGeoRequest

// string object_id = 1;
inline void PauseStopGeoRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PauseStopGeoRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.bots.PauseStopGeoRequest.object_id)
  return object_id_.GetNoArena();
}
inline void PauseStopGeoRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.PauseStopGeoRequest.object_id)
}
#if LANG_CXX11
inline void PauseStopGeoRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.PauseStopGeoRequest.object_id)
}
#endif
inline void PauseStopGeoRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.PauseStopGeoRequest.object_id)
}
inline void PauseStopGeoRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.PauseStopGeoRequest.object_id)
}
inline ::std::string* PauseStopGeoRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.PauseStopGeoRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PauseStopGeoRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.bots.PauseStopGeoRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PauseStopGeoRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.PauseStopGeoRequest.object_id)
}

// bool stop = 2;
inline void PauseStopGeoRequest::clear_stop() {
  stop_ = false;
}
inline bool PauseStopGeoRequest::stop() const {
  // @@protoc_insertion_point(field_get:ric.bots.PauseStopGeoRequest.stop)
  return stop_;
}
inline void PauseStopGeoRequest::set_stop(bool value) {
  
  stop_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.PauseStopGeoRequest.stop)
}

// -------------------------------------------------------------------

// StartGeoRequest

// string object_id = 1;
inline void StartGeoRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartGeoRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.bots.StartGeoRequest.object_id)
  return object_id_.GetNoArena();
}
inline void StartGeoRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.StartGeoRequest.object_id)
}
#if LANG_CXX11
inline void StartGeoRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.StartGeoRequest.object_id)
}
#endif
inline void StartGeoRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.StartGeoRequest.object_id)
}
inline void StartGeoRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.StartGeoRequest.object_id)
}
inline ::std::string* StartGeoRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.StartGeoRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartGeoRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.bots.StartGeoRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartGeoRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.StartGeoRequest.object_id)
}

// -------------------------------------------------------------------

// SetBotConfigRequest

// string object_id = 1;
inline void SetBotConfigRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetBotConfigRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetBotConfigRequest.object_id)
  return object_id_.GetNoArena();
}
inline void SetBotConfigRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.SetBotConfigRequest.object_id)
}
#if LANG_CXX11
inline void SetBotConfigRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.SetBotConfigRequest.object_id)
}
#endif
inline void SetBotConfigRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.SetBotConfigRequest.object_id)
}
inline void SetBotConfigRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.SetBotConfigRequest.object_id)
}
inline ::std::string* SetBotConfigRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.SetBotConfigRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetBotConfigRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.bots.SetBotConfigRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetBotConfigRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.SetBotConfigRequest.object_id)
}

// double send_interval = 2;
inline void SetBotConfigRequest::clear_send_interval() {
  send_interval_ = 0;
}
inline double SetBotConfigRequest::send_interval() const {
  // @@protoc_insertion_point(field_get:ric.bots.SetBotConfigRequest.send_interval)
  return send_interval_;
}
inline void SetBotConfigRequest::set_send_interval(double value) {
  
  send_interval_ = value;
  // @@protoc_insertion_point(field_set:ric.bots.SetBotConfigRequest.send_interval)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CallRequest

// string name = 1;
inline void CallRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CallRequest::name() const {
  // @@protoc_insertion_point(field_get:ric.bots.CallRequest.name)
  return name_.GetNoArena();
}
inline void CallRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.bots.CallRequest.name)
}
#if LANG_CXX11
inline void CallRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.bots.CallRequest.name)
}
#endif
inline void CallRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.bots.CallRequest.name)
}
inline void CallRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.bots.CallRequest.name)
}
inline ::std::string* CallRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ric.bots.CallRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallRequest::release_name() {
  // @@protoc_insertion_point(field_release:ric.bots.CallRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ric.bots.CallRequest.name)
}

// map<string, string> params = 2;
inline int CallRequest::params_size() const {
  return params_.size();
}
inline void CallRequest::clear_params() {
  params_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
CallRequest::params() const {
  // @@protoc_insertion_point(field_map:ric.bots.CallRequest.params)
  return params_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
CallRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:ric.bots.CallRequest.params)
  return params_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bots
}  // namespace ric

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ric::bots::SetGeoConfigRequest_Mode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ric::bots::SetGeoConfigRequest_Mode>() {
  return ::ric::bots::SetGeoConfigRequest_Mode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_ric_2dbots_2fricbots_2eproto
