// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-bots/ricbots.proto

#include "ric-bots/ricbots.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ric_2dbots_2fricbots_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AddToGenConfigRequest_LinearType_ric_2dbots_2fricbots_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dbots_2fricbots_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AddToGenConfigRequest_RandomType_ric_2dbots_2fricbots_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dbots_2fricbots_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CallRequest_ParamsEntry_DoNotUse_ric_2dbots_2fricbots_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dbots_2fricbots_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetGeoConfigRequest_MapEntry_DoNotUse_ric_2dbots_2fricbots_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dbots_2fricbots_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetGeoConfigRequest_Point_ric_2dbots_2fricbots_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dbots_2fricbots_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetStateRequest_StateValue_ric_2dbots_2fricbots_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dbots_2fricbots_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SetStateRequest_StateEntry_DoNotUse_ric_2dbots_2fricbots_2eproto;
namespace ric {
namespace bots {
class EmptyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmptyResponse> _instance;
} _EmptyResponse_default_instance_;
class StartRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartRequest> _instance;
} _StartRequest_default_instance_;
class StopRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopRequest> _instance;
} _StopRequest_default_instance_;
class SetStateRequest_StateValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetStateRequest_StateValue> _instance;
  ::google::protobuf::internal::ArenaStringPtr string_val_;
  double double_val_;
  bool bool_val_;
} _SetStateRequest_StateValue_default_instance_;
class SetStateRequest_StateEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetStateRequest_StateEntry_DoNotUse> _instance;
} _SetStateRequest_StateEntry_DoNotUse_default_instance_;
class SetStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetStateRequest> _instance;
} _SetStateRequest_default_instance_;
class SetGeoConfigRequest_PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetGeoConfigRequest_Point> _instance;
} _SetGeoConfigRequest_Point_default_instance_;
class SetGeoConfigRequest_MapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetGeoConfigRequest_MapEntry_DoNotUse> _instance;
} _SetGeoConfigRequest_MapEntry_DoNotUse_default_instance_;
class SetGeoConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetGeoConfigRequest> _instance;
} _SetGeoConfigRequest_default_instance_;
class AddToGenConfigRequest_RandomTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddToGenConfigRequest_RandomType> _instance;
} _AddToGenConfigRequest_RandomType_default_instance_;
class AddToGenConfigRequest_LinearTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddToGenConfigRequest_LinearType> _instance;
} _AddToGenConfigRequest_LinearType_default_instance_;
class AddToGenConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddToGenConfigRequest> _instance;
  const ::ric::bots::AddToGenConfigRequest_RandomType* random_;
  const ::ric::bots::AddToGenConfigRequest_LinearType* linear_;
} _AddToGenConfigRequest_default_instance_;
class RemoveFromGenConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveFromGenConfigRequest> _instance;
} _RemoveFromGenConfigRequest_default_instance_;
class PauseStopGeoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PauseStopGeoRequest> _instance;
} _PauseStopGeoRequest_default_instance_;
class StartGeoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartGeoRequest> _instance;
} _StartGeoRequest_default_instance_;
class SetBotConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetBotConfigRequest> _instance;
} _SetBotConfigRequest_default_instance_;
class CallRequest_ParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallRequest_ParamsEntry_DoNotUse> _instance;
} _CallRequest_ParamsEntry_DoNotUse_default_instance_;
class CallRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallRequest> _instance;
} _CallRequest_default_instance_;
}  // namespace bots
}  // namespace ric
static void InitDefaultsEmptyResponse_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_EmptyResponse_default_instance_;
    new (ptr) ::ric::bots::EmptyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::EmptyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmptyResponse_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmptyResponse_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsStartRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_StartRequest_default_instance_;
    new (ptr) ::ric::bots::StartRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::StartRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StartRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStartRequest_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsStopRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_StopRequest_default_instance_;
    new (ptr) ::ric::bots::StopRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::StopRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StopRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStopRequest_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsSetStateRequest_StateValue_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_SetStateRequest_StateValue_default_instance_;
    new (ptr) ::ric::bots::SetStateRequest_StateValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::SetStateRequest_StateValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetStateRequest_StateValue_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetStateRequest_StateValue_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsSetStateRequest_StateEntry_DoNotUse_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_SetStateRequest_StateEntry_DoNotUse_default_instance_;
    new (ptr) ::ric::bots::SetStateRequest_StateEntry_DoNotUse();
  }
  ::ric::bots::SetStateRequest_StateEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetStateRequest_StateEntry_DoNotUse_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetStateRequest_StateEntry_DoNotUse_ric_2dbots_2fricbots_2eproto}, {
      &scc_info_SetStateRequest_StateValue_ric_2dbots_2fricbots_2eproto.base,}};

static void InitDefaultsSetStateRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_SetStateRequest_default_instance_;
    new (ptr) ::ric::bots::SetStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::SetStateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetStateRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetStateRequest_ric_2dbots_2fricbots_2eproto}, {
      &scc_info_SetStateRequest_StateEntry_DoNotUse_ric_2dbots_2fricbots_2eproto.base,}};

static void InitDefaultsSetGeoConfigRequest_Point_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_SetGeoConfigRequest_Point_default_instance_;
    new (ptr) ::ric::bots::SetGeoConfigRequest_Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::SetGeoConfigRequest_Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetGeoConfigRequest_Point_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetGeoConfigRequest_Point_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsSetGeoConfigRequest_MapEntry_DoNotUse_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_SetGeoConfigRequest_MapEntry_DoNotUse_default_instance_;
    new (ptr) ::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse();
  }
  ::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetGeoConfigRequest_MapEntry_DoNotUse_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetGeoConfigRequest_MapEntry_DoNotUse_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsSetGeoConfigRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_SetGeoConfigRequest_default_instance_;
    new (ptr) ::ric::bots::SetGeoConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::SetGeoConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SetGeoConfigRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSetGeoConfigRequest_ric_2dbots_2fricbots_2eproto}, {
      &scc_info_SetGeoConfigRequest_MapEntry_DoNotUse_ric_2dbots_2fricbots_2eproto.base,
      &scc_info_SetGeoConfigRequest_Point_ric_2dbots_2fricbots_2eproto.base,}};

static void InitDefaultsAddToGenConfigRequest_RandomType_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_AddToGenConfigRequest_RandomType_default_instance_;
    new (ptr) ::ric::bots::AddToGenConfigRequest_RandomType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::AddToGenConfigRequest_RandomType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddToGenConfigRequest_RandomType_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddToGenConfigRequest_RandomType_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsAddToGenConfigRequest_LinearType_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_AddToGenConfigRequest_LinearType_default_instance_;
    new (ptr) ::ric::bots::AddToGenConfigRequest_LinearType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::AddToGenConfigRequest_LinearType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddToGenConfigRequest_LinearType_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddToGenConfigRequest_LinearType_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsAddToGenConfigRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_AddToGenConfigRequest_default_instance_;
    new (ptr) ::ric::bots::AddToGenConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::AddToGenConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AddToGenConfigRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAddToGenConfigRequest_ric_2dbots_2fricbots_2eproto}, {
      &scc_info_AddToGenConfigRequest_RandomType_ric_2dbots_2fricbots_2eproto.base,
      &scc_info_AddToGenConfigRequest_LinearType_ric_2dbots_2fricbots_2eproto.base,}};

static void InitDefaultsRemoveFromGenConfigRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_RemoveFromGenConfigRequest_default_instance_;
    new (ptr) ::ric::bots::RemoveFromGenConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::RemoveFromGenConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveFromGenConfigRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveFromGenConfigRequest_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsPauseStopGeoRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_PauseStopGeoRequest_default_instance_;
    new (ptr) ::ric::bots::PauseStopGeoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::PauseStopGeoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PauseStopGeoRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPauseStopGeoRequest_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsStartGeoRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_StartGeoRequest_default_instance_;
    new (ptr) ::ric::bots::StartGeoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::StartGeoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StartGeoRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStartGeoRequest_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsSetBotConfigRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_SetBotConfigRequest_default_instance_;
    new (ptr) ::ric::bots::SetBotConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::SetBotConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetBotConfigRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetBotConfigRequest_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsCallRequest_ParamsEntry_DoNotUse_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_CallRequest_ParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::ric::bots::CallRequest_ParamsEntry_DoNotUse();
  }
  ::ric::bots::CallRequest_ParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CallRequest_ParamsEntry_DoNotUse_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCallRequest_ParamsEntry_DoNotUse_ric_2dbots_2fricbots_2eproto}, {}};

static void InitDefaultsCallRequest_ric_2dbots_2fricbots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bots::_CallRequest_default_instance_;
    new (ptr) ::ric::bots::CallRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bots::CallRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CallRequest_ric_2dbots_2fricbots_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCallRequest_ric_2dbots_2fricbots_2eproto}, {
      &scc_info_CallRequest_ParamsEntry_DoNotUse_ric_2dbots_2fricbots_2eproto.base,}};

void InitDefaults_ric_2dbots_2fricbots_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_EmptyResponse_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartRequest_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StopRequest_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetStateRequest_StateValue_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetStateRequest_StateEntry_DoNotUse_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetStateRequest_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetGeoConfigRequest_Point_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetGeoConfigRequest_MapEntry_DoNotUse_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetGeoConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddToGenConfigRequest_RandomType_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddToGenConfigRequest_LinearType_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddToGenConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveFromGenConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PauseStopGeoRequest_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartGeoRequest_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetBotConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CallRequest_ParamsEntry_DoNotUse_ric_2dbots_2fricbots_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CallRequest_ric_2dbots_2fricbots_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ric_2dbots_2fricbots_2eproto[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_ric_2dbots_2fricbots_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ric_2dbots_2fricbots_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ric_2dbots_2fricbots_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::EmptyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::StartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::StartRequest, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::StopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::StopRequest, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest_StateValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest_StateValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ric::bots::SetStateRequest_StateValueDefaultTypeInternal, string_val_),
  offsetof(::ric::bots::SetStateRequest_StateValueDefaultTypeInternal, double_val_),
  offsetof(::ric::bots::SetStateRequest_StateValueDefaultTypeInternal, bool_val_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest_StateValue, type_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest_StateEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest_StateEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest_StateEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest_StateEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetStateRequest, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest_Point, lat_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest_Point, lon_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest, mode_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest, repeat_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest, map_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetGeoConfigRequest, track_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest_RandomType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest_RandomType, min_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest_RandomType, max_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest_LinearType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest_LinearType, step_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest, name_),
  offsetof(::ric::bots::AddToGenConfigRequestDefaultTypeInternal, random_),
  offsetof(::ric::bots::AddToGenConfigRequestDefaultTypeInternal, linear_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::AddToGenConfigRequest, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::RemoveFromGenConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::RemoveFromGenConfigRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::RemoveFromGenConfigRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::PauseStopGeoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::PauseStopGeoRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::PauseStopGeoRequest, stop_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::StartGeoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::StartGeoRequest, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetBotConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetBotConfigRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::SetBotConfigRequest, send_interval_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::CallRequest_ParamsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::CallRequest_ParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::CallRequest_ParamsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::CallRequest_ParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bots::CallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bots::CallRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ric::bots::CallRequest, params_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ric::bots::EmptyResponse)},
  { 5, -1, sizeof(::ric::bots::StartRequest)},
  { 11, -1, sizeof(::ric::bots::StopRequest)},
  { 17, -1, sizeof(::ric::bots::SetStateRequest_StateValue)},
  { 26, 33, sizeof(::ric::bots::SetStateRequest_StateEntry_DoNotUse)},
  { 35, -1, sizeof(::ric::bots::SetStateRequest)},
  { 42, -1, sizeof(::ric::bots::SetGeoConfigRequest_Point)},
  { 49, 56, sizeof(::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse)},
  { 58, -1, sizeof(::ric::bots::SetGeoConfigRequest)},
  { 68, -1, sizeof(::ric::bots::AddToGenConfigRequest_RandomType)},
  { 75, -1, sizeof(::ric::bots::AddToGenConfigRequest_LinearType)},
  { 81, -1, sizeof(::ric::bots::AddToGenConfigRequest)},
  { 91, -1, sizeof(::ric::bots::RemoveFromGenConfigRequest)},
  { 98, -1, sizeof(::ric::bots::PauseStopGeoRequest)},
  { 105, -1, sizeof(::ric::bots::StartGeoRequest)},
  { 111, -1, sizeof(::ric::bots::SetBotConfigRequest)},
  { 118, 125, sizeof(::ric::bots::CallRequest_ParamsEntry_DoNotUse)},
  { 127, -1, sizeof(::ric::bots::CallRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_EmptyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_StartRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_StopRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_SetStateRequest_StateValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_SetStateRequest_StateEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_SetStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_SetGeoConfigRequest_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_SetGeoConfigRequest_MapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_SetGeoConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_AddToGenConfigRequest_RandomType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_AddToGenConfigRequest_LinearType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_AddToGenConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_RemoveFromGenConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_PauseStopGeoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_StartGeoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_SetBotConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_CallRequest_ParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bots::_CallRequest_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ric_2dbots_2fricbots_2eproto = {
  {}, AddDescriptors_ric_2dbots_2fricbots_2eproto, "ric-bots/ricbots.proto", schemas,
  file_default_instances, TableStruct_ric_2dbots_2fricbots_2eproto::offsets,
  file_level_metadata_ric_2dbots_2fricbots_2eproto, 18, file_level_enum_descriptors_ric_2dbots_2fricbots_2eproto, file_level_service_descriptors_ric_2dbots_2fricbots_2eproto,
};

const char descriptor_table_protodef_ric_2dbots_2fricbots_2eproto[] =
  "\n\026ric-bots/ricbots.proto\022\010ric.bots\"\017\n\rEm"
  "ptyResponse\"!\n\014StartRequest\022\021\n\tobject_id"
  "\030\001 \001(\t\" \n\013StopRequest\022\021\n\tobject_id\030\001 \001(\t"
  "\"\203\002\n\017SetStateRequest\022\021\n\tobject_id\030\001 \001(\t\022"
  "3\n\005state\030\002 \003(\0132$.ric.bots.SetStateReques"
  "t.StateEntry\032T\n\nStateValue\022\024\n\nstring_val"
  "\030\001 \001(\tH\000\022\024\n\ndouble_val\030\002 \001(\001H\000\022\022\n\010bool_v"
  "al\030\003 \001(\010H\000B\006\n\004type\032R\n\nStateEntry\022\013\n\003key\030"
  "\001 \001(\t\0223\n\005value\030\002 \001(\0132$.ric.bots.SetState"
  "Request.StateValue:\0028\001\"\317\002\n\023SetGeoConfigR"
  "equest\022\021\n\tobject_id\030\001 \001(\t\0220\n\004mode\030\002 \001(\0162"
  "\".ric.bots.SetGeoConfigRequest.Mode\022\016\n\006r"
  "epeat\030\003 \001(\010\0223\n\003map\030\004 \003(\0132&.ric.bots.SetG"
  "eoConfigRequest.MapEntry\0222\n\005track\030\005 \003(\0132"
  "#.ric.bots.SetGeoConfigRequest.Point\032!\n\005"
  "Point\022\013\n\003lat\030\001 \001(\001\022\013\n\003lon\030\002 \001(\001\032*\n\010MapEn"
  "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"+\n\004M"
  "ode\022\t\n\005UNSET\020\000\022\013\n\007ONE_WAY\020\001\022\013\n\007TWO_WAY\020\002"
  "\"\200\002\n\025AddToGenConfigRequest\022\021\n\tobject_id\030"
  "\001 \001(\t\022\014\n\004name\030\002 \001(\t\022<\n\006random\030\003 \001(\0132*.ri"
  "c.bots.AddToGenConfigRequest.RandomTypeH"
  "\000\022<\n\006linear\030\004 \001(\0132*.ric.bots.AddToGenCon"
  "figRequest.LinearTypeH\000\032&\n\nRandomType\022\013\n"
  "\003min\030\001 \001(\001\022\013\n\003max\030\002 \001(\001\032\032\n\nLinearType\022\014\n"
  "\004step\030\001 \001(\001B\006\n\004type\"=\n\032RemoveFromGenConf"
  "igRequest\022\021\n\tobject_id\030\001 \001(\t\022\014\n\004name\030\002 \001"
  "(\t\"6\n\023PauseStopGeoRequest\022\021\n\tobject_id\030\001"
  " \001(\t\022\014\n\004stop\030\002 \001(\010\"$\n\017StartGeoRequest\022\021\n"
  "\tobject_id\030\001 \001(\t\"\?\n\023SetBotConfigRequest\022"
  "\021\n\tobject_id\030\001 \001(\t\022\025\n\rsend_interval\030\002 \001("
  "\001\"}\n\013CallRequest\022\014\n\004name\030\001 \001(\t\0221\n\006params"
  "\030\002 \003(\0132!.ric.bots.CallRequest.ParamsEntr"
  "y\032-\n\013ParamsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
  " \001(\t:\0028\0012\252\005\n\004Bots\0228\n\005Start\022\026.ric.bots.St"
  "artRequest\032\027.ric.bots.EmptyResponse\0226\n\004S"
  "top\022\025.ric.bots.StopRequest\032\027.ric.bots.Em"
  "ptyResponse\022>\n\010SetState\022\031.ric.bots.SetSt"
  "ateRequest\032\027.ric.bots.EmptyResponse\022F\n\014S"
  "etGeoConfig\022\035.ric.bots.SetGeoConfigReque"
  "st\032\027.ric.bots.EmptyResponse\022F\n\014PauseStop"
  "Geo\022\035.ric.bots.PauseStopGeoRequest\032\027.ric"
  ".bots.EmptyResponse\022>\n\010StartGeo\022\031.ric.bo"
  "ts.StartGeoRequest\032\027.ric.bots.EmptyRespo"
  "nse\022J\n\016AddToGenConfig\022\037.ric.bots.AddToGe"
  "nConfigRequest\032\027.ric.bots.EmptyResponse\022"
  "T\n\023RemoveFromGenConfig\022$.ric.bots.Remove"
  "FromGenConfigRequest\032\027.ric.bots.EmptyRes"
  "ponse\022F\n\014SetBotConfig\022\035.ric.bots.SetBotC"
  "onfigRequest\032\027.ric.bots.EmptyResponse\0226\n"
  "\004Call\022\025.ric.bots.CallRequest\032\027.ric.bots."
  "EmptyResponseB\024Z\022./ric-bots;ricbotsb\006pro"
  "to3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ric_2dbots_2fricbots_2eproto = {
  false, InitDefaults_ric_2dbots_2fricbots_2eproto, 
  descriptor_table_protodef_ric_2dbots_2fricbots_2eproto,
  "ric-bots/ricbots.proto", &assign_descriptors_table_ric_2dbots_2fricbots_2eproto, 2043,
};

void AddDescriptors_ric_2dbots_2fricbots_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ric_2dbots_2fricbots_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ric_2dbots_2fricbots_2eproto = []() { AddDescriptors_ric_2dbots_2fricbots_2eproto(); return true; }();
namespace ric {
namespace bots {
const ::google::protobuf::EnumDescriptor* SetGeoConfigRequest_Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return file_level_enum_descriptors_ric_2dbots_2fricbots_2eproto[0];
}
bool SetGeoConfigRequest_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetGeoConfigRequest_Mode SetGeoConfigRequest::UNSET;
const SetGeoConfigRequest_Mode SetGeoConfigRequest::ONE_WAY;
const SetGeoConfigRequest_Mode SetGeoConfigRequest::TWO_WAY;
const SetGeoConfigRequest_Mode SetGeoConfigRequest::Mode_MIN;
const SetGeoConfigRequest_Mode SetGeoConfigRequest::Mode_MAX;
const int SetGeoConfigRequest::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void EmptyResponse::InitAsDefaultInstance() {
}
class EmptyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyResponse::EmptyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.EmptyResponse)
}
EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ric.bots.EmptyResponse)
}

void EmptyResponse::SharedCtor() {
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:ric.bots.EmptyResponse)
  SharedDtor();
}

void EmptyResponse::SharedDtor() {
}

void EmptyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyResponse& EmptyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EmptyResponse_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EmptyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EmptyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EmptyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.EmptyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.EmptyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.EmptyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EmptyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.EmptyResponse)
}

::google::protobuf::uint8* EmptyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.EmptyResponse)
  return target;
}

size_t EmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.EmptyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EmptyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.EmptyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.EmptyResponse)
    MergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {
  return true;
}

void EmptyResponse::Swap(EmptyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyResponse::InternalSwap(EmptyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmptyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StartRequest::InitAsDefaultInstance() {
}
class StartRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartRequest::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartRequest::StartRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.StartRequest)
}
StartRequest::StartRequest(const StartRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.bots.StartRequest)
}

void StartRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StartRequest_ric_2dbots_2fricbots_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StartRequest::~StartRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.StartRequest)
  SharedDtor();
}

void StartRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartRequest& StartRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StartRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void StartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.StartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StartRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StartRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.StartRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.StartRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.StartRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.StartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.StartRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.StartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.StartRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.StartRequest)
}

::google::protobuf::uint8* StartRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.StartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.StartRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.StartRequest)
  return target;
}

size_t StartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.StartRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.StartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.StartRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.StartRequest)
    MergeFrom(*source);
  }
}

void StartRequest::MergeFrom(const StartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.StartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void StartRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.StartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartRequest::CopyFrom(const StartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.StartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartRequest::IsInitialized() const {
  return true;
}

void StartRequest::Swap(StartRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartRequest::InternalSwap(StartRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StartRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StopRequest::InitAsDefaultInstance() {
}
class StopRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopRequest::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopRequest::StopRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.StopRequest)
}
StopRequest::StopRequest(const StopRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.bots.StopRequest)
}

void StopRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StopRequest_ric_2dbots_2fricbots_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StopRequest::~StopRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.StopRequest)
  SharedDtor();
}

void StopRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopRequest& StopRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StopRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void StopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.StopRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StopRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StopRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.StopRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StopRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.StopRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.StopRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.StopRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.StopRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StopRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.StopRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.StopRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.StopRequest)
}

::google::protobuf::uint8* StopRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.StopRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.StopRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.StopRequest)
  return target;
}

size_t StopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.StopRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.StopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.StopRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.StopRequest)
    MergeFrom(*source);
  }
}

void StopRequest::MergeFrom(const StopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.StopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void StopRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.StopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRequest::CopyFrom(const StopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.StopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRequest::IsInitialized() const {
  return true;
}

void StopRequest::Swap(StopRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopRequest::InternalSwap(StopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StopRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetStateRequest_StateValue::InitAsDefaultInstance() {
  ::ric::bots::_SetStateRequest_StateValue_default_instance_.string_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::ric::bots::_SetStateRequest_StateValue_default_instance_.double_val_ = 0;
  ::ric::bots::_SetStateRequest_StateValue_default_instance_.bool_val_ = false;
}
class SetStateRequest_StateValue::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetStateRequest_StateValue::kStringValFieldNumber;
const int SetStateRequest_StateValue::kDoubleValFieldNumber;
const int SetStateRequest_StateValue::kBoolValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetStateRequest_StateValue::SetStateRequest_StateValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.SetStateRequest.StateValue)
}
SetStateRequest_StateValue::SetStateRequest_StateValue(const SetStateRequest_StateValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kStringVal: {
      set_string_val(from.string_val());
      break;
    }
    case kDoubleVal: {
      set_double_val(from.double_val());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ric.bots.SetStateRequest.StateValue)
}

void SetStateRequest_StateValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetStateRequest_StateValue_ric_2dbots_2fricbots_2eproto.base);
  clear_has_type();
}

SetStateRequest_StateValue::~SetStateRequest_StateValue() {
  // @@protoc_insertion_point(destructor:ric.bots.SetStateRequest.StateValue)
  SharedDtor();
}

void SetStateRequest_StateValue::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void SetStateRequest_StateValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetStateRequest_StateValue& SetStateRequest_StateValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetStateRequest_StateValue_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void SetStateRequest_StateValue::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:ric.bots.SetStateRequest.StateValue)
  switch (type_case()) {
    case kStringVal: {
      type_.string_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDoubleVal: {
      // No need to clear
      break;
    }
    case kBoolVal: {
      // No need to clear
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void SetStateRequest_StateValue::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.SetStateRequest.StateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetStateRequest_StateValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetStateRequest_StateValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string string_val = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.SetStateRequest.StateValue.string_val");
        object = msg->mutable_string_val();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // double double_val = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_double_val(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // bool bool_val = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_bool_val(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetStateRequest_StateValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.SetStateRequest.StateValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string string_val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_val().data(), static_cast<int>(this->string_val().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.SetStateRequest.StateValue.string_val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          clear_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &type_.double_val_)));
          set_has_double_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          clear_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &type_.bool_val_)));
          set_has_bool_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.SetStateRequest.StateValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.SetStateRequest.StateValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetStateRequest_StateValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.SetStateRequest.StateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_val = 1;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_val().data(), static_cast<int>(this->string_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.SetStateRequest.StateValue.string_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_val(), output);
  }

  // double double_val = 2;
  if (has_double_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->double_val(), output);
  }

  // bool bool_val = 3;
  if (has_bool_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bool_val(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.SetStateRequest.StateValue)
}

::google::protobuf::uint8* SetStateRequest_StateValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.SetStateRequest.StateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_val = 1;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_val().data(), static_cast<int>(this->string_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.SetStateRequest.StateValue.string_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_val(), target);
  }

  // double double_val = 2;
  if (has_double_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->double_val(), target);
  }

  // bool bool_val = 3;
  if (has_bool_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bool_val(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.SetStateRequest.StateValue)
  return target;
}

size_t SetStateRequest_StateValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.SetStateRequest.StateValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // string string_val = 1;
    case kStringVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_val());
      break;
    }
    // double double_val = 2;
    case kDoubleVal: {
      total_size += 1 + 8;
      break;
    }
    // bool bool_val = 3;
    case kBoolVal: {
      total_size += 1 + 1;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetStateRequest_StateValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.SetStateRequest.StateValue)
  GOOGLE_DCHECK_NE(&from, this);
  const SetStateRequest_StateValue* source =
      ::google::protobuf::DynamicCastToGenerated<SetStateRequest_StateValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.SetStateRequest.StateValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.SetStateRequest.StateValue)
    MergeFrom(*source);
  }
}

void SetStateRequest_StateValue::MergeFrom(const SetStateRequest_StateValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.SetStateRequest.StateValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kStringVal: {
      set_string_val(from.string_val());
      break;
    }
    case kDoubleVal: {
      set_double_val(from.double_val());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void SetStateRequest_StateValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.SetStateRequest.StateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetStateRequest_StateValue::CopyFrom(const SetStateRequest_StateValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.SetStateRequest.StateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetStateRequest_StateValue::IsInitialized() const {
  return true;
}

void SetStateRequest_StateValue::Swap(SetStateRequest_StateValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetStateRequest_StateValue::InternalSwap(SetStateRequest_StateValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata SetStateRequest_StateValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

SetStateRequest_StateEntry_DoNotUse::SetStateRequest_StateEntry_DoNotUse() {}
SetStateRequest_StateEntry_DoNotUse::SetStateRequest_StateEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void SetStateRequest_StateEntry_DoNotUse::MergeFrom(const SetStateRequest_StateEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SetStateRequest_StateEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[4];
}
void SetStateRequest_StateEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetStateRequest_StateEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      SetStateRequest_StateEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ric.bots.SetStateRequest.StateEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void SetStateRequest::InitAsDefaultInstance() {
}
class SetStateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetStateRequest::kObjectIdFieldNumber;
const int SetStateRequest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetStateRequest::SetStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.SetStateRequest)
}
SetStateRequest::SetStateRequest(const SetStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.MergeFrom(from.state_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.bots.SetStateRequest)
}

void SetStateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetStateRequest_ric_2dbots_2fricbots_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetStateRequest::~SetStateRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.SetStateRequest)
  SharedDtor();
}

void SetStateRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetStateRequest& SetStateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetStateRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void SetStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.SetStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.Clear();
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetStateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetStateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.SetStateRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, .ric.bots.SetStateRequest.StateValue> state = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ric::bots::SetStateRequest_StateEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->state_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.SetStateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.SetStateRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .ric.bots.SetStateRequest.StateValue> state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          SetStateRequest_StateEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SetStateRequest_StateEntry_DoNotUse,
              ::std::string, ::ric::bots::SetStateRequest_StateValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue > > parser(&state_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.SetStateRequest.StateEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.SetStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.SetStateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.SetStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.SetStateRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // map<string, .ric.bots.SetStateRequest.StateValue> state = 2;
  if (!this->state().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.SetStateRequest.StateEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->state().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->state().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >::const_iterator
          it = this->state().begin();
          it != this->state().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetStateRequest_StateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(state_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SetStateRequest_StateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >::const_iterator
          it = this->state().begin();
          it != this->state().end(); ++it) {
        entry.reset(state_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.SetStateRequest)
}

::google::protobuf::uint8* SetStateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.SetStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.SetStateRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // map<string, .ric.bots.SetStateRequest.StateValue> state = 2;
  if (!this->state().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.SetStateRequest.StateEntry.key");
      }
    };

    if (false &&
        this->state().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->state().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >::const_iterator
          it = this->state().begin();
          it != this->state().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetStateRequest_StateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(state_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SetStateRequest_StateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >::const_iterator
          it = this->state().begin();
          it != this->state().end(); ++it) {
        entry.reset(state_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.SetStateRequest)
  return target;
}

size_t SetStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.SetStateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .ric.bots.SetStateRequest.StateValue> state = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->state_size());
  {
    ::std::unique_ptr<SetStateRequest_StateEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::ric::bots::SetStateRequest_StateValue >::const_iterator
        it = this->state().begin();
        it != this->state().end(); ++it) {
      entry.reset(state_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.SetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetStateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.SetStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.SetStateRequest)
    MergeFrom(*source);
  }
}

void SetStateRequest::MergeFrom(const SetStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.SetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  state_.MergeFrom(from.state_);
  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void SetStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.SetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetStateRequest::CopyFrom(const SetStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.SetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetStateRequest::IsInitialized() const {
  return true;
}

void SetStateRequest::Swap(SetStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetStateRequest::InternalSwap(SetStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetStateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetGeoConfigRequest_Point::InitAsDefaultInstance() {
}
class SetGeoConfigRequest_Point::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetGeoConfigRequest_Point::kLatFieldNumber;
const int SetGeoConfigRequest_Point::kLonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetGeoConfigRequest_Point::SetGeoConfigRequest_Point()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.SetGeoConfigRequest.Point)
}
SetGeoConfigRequest_Point::SetGeoConfigRequest_Point(const SetGeoConfigRequest_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lat_, &from.lat_,
    static_cast<size_t>(reinterpret_cast<char*>(&lon_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(lon_));
  // @@protoc_insertion_point(copy_constructor:ric.bots.SetGeoConfigRequest.Point)
}

void SetGeoConfigRequest_Point::SharedCtor() {
  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lon_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(lon_));
}

SetGeoConfigRequest_Point::~SetGeoConfigRequest_Point() {
  // @@protoc_insertion_point(destructor:ric.bots.SetGeoConfigRequest.Point)
  SharedDtor();
}

void SetGeoConfigRequest_Point::SharedDtor() {
}

void SetGeoConfigRequest_Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetGeoConfigRequest_Point& SetGeoConfigRequest_Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetGeoConfigRequest_Point_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void SetGeoConfigRequest_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.SetGeoConfigRequest.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lon_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(lon_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetGeoConfigRequest_Point::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetGeoConfigRequest_Point*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double lat = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_lat(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double lon = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_lon(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetGeoConfigRequest_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.SetGeoConfigRequest.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double lat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.SetGeoConfigRequest.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.SetGeoConfigRequest.Point)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetGeoConfigRequest_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.SetGeoConfigRequest.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->lat(), output);
  }

  // double lon = 2;
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->lon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.SetGeoConfigRequest.Point)
}

::google::protobuf::uint8* SetGeoConfigRequest_Point::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.SetGeoConfigRequest.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->lat(), target);
  }

  // double lon = 2;
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->lon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.SetGeoConfigRequest.Point)
  return target;
}

size_t SetGeoConfigRequest_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.SetGeoConfigRequest.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double lat = 1;
  if (this->lat() != 0) {
    total_size += 1 + 8;
  }

  // double lon = 2;
  if (this->lon() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetGeoConfigRequest_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.SetGeoConfigRequest.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const SetGeoConfigRequest_Point* source =
      ::google::protobuf::DynamicCastToGenerated<SetGeoConfigRequest_Point>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.SetGeoConfigRequest.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.SetGeoConfigRequest.Point)
    MergeFrom(*source);
  }
}

void SetGeoConfigRequest_Point::MergeFrom(const SetGeoConfigRequest_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.SetGeoConfigRequest.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
}

void SetGeoConfigRequest_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.SetGeoConfigRequest.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetGeoConfigRequest_Point::CopyFrom(const SetGeoConfigRequest_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.SetGeoConfigRequest.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGeoConfigRequest_Point::IsInitialized() const {
  return true;
}

void SetGeoConfigRequest_Point::Swap(SetGeoConfigRequest_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetGeoConfigRequest_Point::InternalSwap(SetGeoConfigRequest_Point* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
}

::google::protobuf::Metadata SetGeoConfigRequest_Point::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

SetGeoConfigRequest_MapEntry_DoNotUse::SetGeoConfigRequest_MapEntry_DoNotUse() {}
SetGeoConfigRequest_MapEntry_DoNotUse::SetGeoConfigRequest_MapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void SetGeoConfigRequest_MapEntry_DoNotUse::MergeFrom(const SetGeoConfigRequest_MapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SetGeoConfigRequest_MapEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[7];
}
void SetGeoConfigRequest_MapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetGeoConfigRequest_MapEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      SetGeoConfigRequest_MapEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ric.bots.SetGeoConfigRequest.MapEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ric.bots.SetGeoConfigRequest.MapEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void SetGeoConfigRequest::InitAsDefaultInstance() {
}
class SetGeoConfigRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetGeoConfigRequest::kObjectIdFieldNumber;
const int SetGeoConfigRequest::kModeFieldNumber;
const int SetGeoConfigRequest::kRepeatFieldNumber;
const int SetGeoConfigRequest::kMapFieldNumber;
const int SetGeoConfigRequest::kTrackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetGeoConfigRequest::SetGeoConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.SetGeoConfigRequest)
}
SetGeoConfigRequest::SetGeoConfigRequest(const SetGeoConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      track_(from.track_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_.MergeFrom(from.map_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&repeat_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(repeat_));
  // @@protoc_insertion_point(copy_constructor:ric.bots.SetGeoConfigRequest)
}

void SetGeoConfigRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetGeoConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repeat_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(repeat_));
}

SetGeoConfigRequest::~SetGeoConfigRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.SetGeoConfigRequest)
  SharedDtor();
}

void SetGeoConfigRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetGeoConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetGeoConfigRequest& SetGeoConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetGeoConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void SetGeoConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.SetGeoConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.Clear();
  track_.Clear();
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repeat_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(repeat_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetGeoConfigRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetGeoConfigRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.SetGeoConfigRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ric.bots.SetGeoConfigRequest.Mode mode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_mode(static_cast<::ric::bots::SetGeoConfigRequest_Mode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool repeat = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_repeat(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, string> map = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->map_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated .ric.bots.SetGeoConfigRequest.Point track = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ric::bots::SetGeoConfigRequest_Point::_InternalParse;
          object = msg->add_track();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetGeoConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.SetGeoConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.SetGeoConfigRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.bots.SetGeoConfigRequest.Mode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::ric::bots::SetGeoConfigRequest_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool repeat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &repeat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          SetGeoConfigRequest_MapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SetGeoConfigRequest_MapEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.SetGeoConfigRequest.MapEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.SetGeoConfigRequest.MapEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ric.bots.SetGeoConfigRequest.Point track = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_track()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.SetGeoConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.SetGeoConfigRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetGeoConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.SetGeoConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.SetGeoConfigRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // .ric.bots.SetGeoConfigRequest.Mode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // bool repeat = 3;
  if (this->repeat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->repeat(), output);
  }

  // map<string, string> map = 4;
  if (!this->map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.SetGeoConfigRequest.MapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.SetGeoConfigRequest.MapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map().begin();
          it != this->map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetGeoConfigRequest_MapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SetGeoConfigRequest_MapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map().begin();
          it != this->map().end(); ++it) {
        entry.reset(map_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .ric.bots.SetGeoConfigRequest.Point track = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->track_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->track(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.SetGeoConfigRequest)
}

::google::protobuf::uint8* SetGeoConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.SetGeoConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.SetGeoConfigRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // .ric.bots.SetGeoConfigRequest.Mode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // bool repeat = 3;
  if (this->repeat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->repeat(), target);
  }

  // map<string, string> map = 4;
  if (!this->map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.SetGeoConfigRequest.MapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.SetGeoConfigRequest.MapEntry.value");
      }
    };

    if (false &&
        this->map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map().begin();
          it != this->map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetGeoConfigRequest_MapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SetGeoConfigRequest_MapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map().begin();
          it != this->map().end(); ++it) {
        entry.reset(map_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .ric.bots.SetGeoConfigRequest.Point track = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->track_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->track(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.SetGeoConfigRequest)
  return target;
}

size_t SetGeoConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.SetGeoConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_size());
  {
    ::std::unique_ptr<SetGeoConfigRequest_MapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->map().begin();
        it != this->map().end(); ++it) {
      entry.reset(map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .ric.bots.SetGeoConfigRequest.Point track = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->track_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->track(static_cast<int>(i)));
    }
  }

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // .ric.bots.SetGeoConfigRequest.Mode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // bool repeat = 3;
  if (this->repeat() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetGeoConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.SetGeoConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetGeoConfigRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetGeoConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.SetGeoConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.SetGeoConfigRequest)
    MergeFrom(*source);
  }
}

void SetGeoConfigRequest::MergeFrom(const SetGeoConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.SetGeoConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_.MergeFrom(from.map_);
  track_.MergeFrom(from.track_);
  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.repeat() != 0) {
    set_repeat(from.repeat());
  }
}

void SetGeoConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.SetGeoConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetGeoConfigRequest::CopyFrom(const SetGeoConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.SetGeoConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGeoConfigRequest::IsInitialized() const {
  return true;
}

void SetGeoConfigRequest::Swap(SetGeoConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetGeoConfigRequest::InternalSwap(SetGeoConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  map_.Swap(&other->map_);
  CastToBase(&track_)->InternalSwap(CastToBase(&other->track_));
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mode_, other->mode_);
  swap(repeat_, other->repeat_);
}

::google::protobuf::Metadata SetGeoConfigRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AddToGenConfigRequest_RandomType::InitAsDefaultInstance() {
}
class AddToGenConfigRequest_RandomType::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddToGenConfigRequest_RandomType::kMinFieldNumber;
const int AddToGenConfigRequest_RandomType::kMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddToGenConfigRequest_RandomType::AddToGenConfigRequest_RandomType()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.AddToGenConfigRequest.RandomType)
}
AddToGenConfigRequest_RandomType::AddToGenConfigRequest_RandomType(const AddToGenConfigRequest_RandomType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_, &from.min_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_) -
    reinterpret_cast<char*>(&min_)) + sizeof(max_));
  // @@protoc_insertion_point(copy_constructor:ric.bots.AddToGenConfigRequest.RandomType)
}

void AddToGenConfigRequest_RandomType::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
}

AddToGenConfigRequest_RandomType::~AddToGenConfigRequest_RandomType() {
  // @@protoc_insertion_point(destructor:ric.bots.AddToGenConfigRequest.RandomType)
  SharedDtor();
}

void AddToGenConfigRequest_RandomType::SharedDtor() {
}

void AddToGenConfigRequest_RandomType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddToGenConfigRequest_RandomType& AddToGenConfigRequest_RandomType::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AddToGenConfigRequest_RandomType_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void AddToGenConfigRequest_RandomType::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.AddToGenConfigRequest.RandomType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AddToGenConfigRequest_RandomType::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AddToGenConfigRequest_RandomType*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double min = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_min(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double max = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_max(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AddToGenConfigRequest_RandomType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.AddToGenConfigRequest.RandomType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double min = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double max = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.AddToGenConfigRequest.RandomType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.AddToGenConfigRequest.RandomType)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AddToGenConfigRequest_RandomType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.AddToGenConfigRequest.RandomType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double min = 1;
  if (this->min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->min(), output);
  }

  // double max = 2;
  if (this->max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->max(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.AddToGenConfigRequest.RandomType)
}

::google::protobuf::uint8* AddToGenConfigRequest_RandomType::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.AddToGenConfigRequest.RandomType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double min = 1;
  if (this->min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->min(), target);
  }

  // double max = 2;
  if (this->max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->max(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.AddToGenConfigRequest.RandomType)
  return target;
}

size_t AddToGenConfigRequest_RandomType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.AddToGenConfigRequest.RandomType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double min = 1;
  if (this->min() != 0) {
    total_size += 1 + 8;
  }

  // double max = 2;
  if (this->max() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddToGenConfigRequest_RandomType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.AddToGenConfigRequest.RandomType)
  GOOGLE_DCHECK_NE(&from, this);
  const AddToGenConfigRequest_RandomType* source =
      ::google::protobuf::DynamicCastToGenerated<AddToGenConfigRequest_RandomType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.AddToGenConfigRequest.RandomType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.AddToGenConfigRequest.RandomType)
    MergeFrom(*source);
  }
}

void AddToGenConfigRequest_RandomType::MergeFrom(const AddToGenConfigRequest_RandomType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.AddToGenConfigRequest.RandomType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.min() != 0) {
    set_min(from.min());
  }
  if (from.max() != 0) {
    set_max(from.max());
  }
}

void AddToGenConfigRequest_RandomType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.AddToGenConfigRequest.RandomType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddToGenConfigRequest_RandomType::CopyFrom(const AddToGenConfigRequest_RandomType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.AddToGenConfigRequest.RandomType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddToGenConfigRequest_RandomType::IsInitialized() const {
  return true;
}

void AddToGenConfigRequest_RandomType::Swap(AddToGenConfigRequest_RandomType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddToGenConfigRequest_RandomType::InternalSwap(AddToGenConfigRequest_RandomType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(min_, other->min_);
  swap(max_, other->max_);
}

::google::protobuf::Metadata AddToGenConfigRequest_RandomType::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AddToGenConfigRequest_LinearType::InitAsDefaultInstance() {
}
class AddToGenConfigRequest_LinearType::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddToGenConfigRequest_LinearType::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddToGenConfigRequest_LinearType::AddToGenConfigRequest_LinearType()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.AddToGenConfigRequest.LinearType)
}
AddToGenConfigRequest_LinearType::AddToGenConfigRequest_LinearType(const AddToGenConfigRequest_LinearType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  step_ = from.step_;
  // @@protoc_insertion_point(copy_constructor:ric.bots.AddToGenConfigRequest.LinearType)
}

void AddToGenConfigRequest_LinearType::SharedCtor() {
  step_ = 0;
}

AddToGenConfigRequest_LinearType::~AddToGenConfigRequest_LinearType() {
  // @@protoc_insertion_point(destructor:ric.bots.AddToGenConfigRequest.LinearType)
  SharedDtor();
}

void AddToGenConfigRequest_LinearType::SharedDtor() {
}

void AddToGenConfigRequest_LinearType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddToGenConfigRequest_LinearType& AddToGenConfigRequest_LinearType::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AddToGenConfigRequest_LinearType_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void AddToGenConfigRequest_LinearType::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.AddToGenConfigRequest.LinearType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AddToGenConfigRequest_LinearType::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AddToGenConfigRequest_LinearType*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double step = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_step(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AddToGenConfigRequest_LinearType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.AddToGenConfigRequest.LinearType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double step = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.AddToGenConfigRequest.LinearType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.AddToGenConfigRequest.LinearType)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AddToGenConfigRequest_LinearType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.AddToGenConfigRequest.LinearType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double step = 1;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->step(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.AddToGenConfigRequest.LinearType)
}

::google::protobuf::uint8* AddToGenConfigRequest_LinearType::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.AddToGenConfigRequest.LinearType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double step = 1;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->step(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.AddToGenConfigRequest.LinearType)
  return target;
}

size_t AddToGenConfigRequest_LinearType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.AddToGenConfigRequest.LinearType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double step = 1;
  if (this->step() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddToGenConfigRequest_LinearType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.AddToGenConfigRequest.LinearType)
  GOOGLE_DCHECK_NE(&from, this);
  const AddToGenConfigRequest_LinearType* source =
      ::google::protobuf::DynamicCastToGenerated<AddToGenConfigRequest_LinearType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.AddToGenConfigRequest.LinearType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.AddToGenConfigRequest.LinearType)
    MergeFrom(*source);
  }
}

void AddToGenConfigRequest_LinearType::MergeFrom(const AddToGenConfigRequest_LinearType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.AddToGenConfigRequest.LinearType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.step() != 0) {
    set_step(from.step());
  }
}

void AddToGenConfigRequest_LinearType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.AddToGenConfigRequest.LinearType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddToGenConfigRequest_LinearType::CopyFrom(const AddToGenConfigRequest_LinearType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.AddToGenConfigRequest.LinearType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddToGenConfigRequest_LinearType::IsInitialized() const {
  return true;
}

void AddToGenConfigRequest_LinearType::Swap(AddToGenConfigRequest_LinearType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddToGenConfigRequest_LinearType::InternalSwap(AddToGenConfigRequest_LinearType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(step_, other->step_);
}

::google::protobuf::Metadata AddToGenConfigRequest_LinearType::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AddToGenConfigRequest::InitAsDefaultInstance() {
  ::ric::bots::_AddToGenConfigRequest_default_instance_.random_ = const_cast< ::ric::bots::AddToGenConfigRequest_RandomType*>(
      ::ric::bots::AddToGenConfigRequest_RandomType::internal_default_instance());
  ::ric::bots::_AddToGenConfigRequest_default_instance_.linear_ = const_cast< ::ric::bots::AddToGenConfigRequest_LinearType*>(
      ::ric::bots::AddToGenConfigRequest_LinearType::internal_default_instance());
}
class AddToGenConfigRequest::HasBitSetters {
 public:
  static const ::ric::bots::AddToGenConfigRequest_RandomType& random(const AddToGenConfigRequest* msg);
  static const ::ric::bots::AddToGenConfigRequest_LinearType& linear(const AddToGenConfigRequest* msg);
};

const ::ric::bots::AddToGenConfigRequest_RandomType&
AddToGenConfigRequest::HasBitSetters::random(const AddToGenConfigRequest* msg) {
  return *msg->type_.random_;
}
const ::ric::bots::AddToGenConfigRequest_LinearType&
AddToGenConfigRequest::HasBitSetters::linear(const AddToGenConfigRequest* msg) {
  return *msg->type_.linear_;
}
void AddToGenConfigRequest::set_allocated_random(::ric::bots::AddToGenConfigRequest_RandomType* random) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (random) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      random = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, random, submessage_arena);
    }
    set_has_random();
    type_.random_ = random;
  }
  // @@protoc_insertion_point(field_set_allocated:ric.bots.AddToGenConfigRequest.random)
}
void AddToGenConfigRequest::set_allocated_linear(::ric::bots::AddToGenConfigRequest_LinearType* linear) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (linear) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      linear = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, linear, submessage_arena);
    }
    set_has_linear();
    type_.linear_ = linear;
  }
  // @@protoc_insertion_point(field_set_allocated:ric.bots.AddToGenConfigRequest.linear)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddToGenConfigRequest::kObjectIdFieldNumber;
const int AddToGenConfigRequest::kNameFieldNumber;
const int AddToGenConfigRequest::kRandomFieldNumber;
const int AddToGenConfigRequest::kLinearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddToGenConfigRequest::AddToGenConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.AddToGenConfigRequest)
}
AddToGenConfigRequest::AddToGenConfigRequest(const AddToGenConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_type();
  switch (from.type_case()) {
    case kRandom: {
      mutable_random()->::ric::bots::AddToGenConfigRequest_RandomType::MergeFrom(from.random());
      break;
    }
    case kLinear: {
      mutable_linear()->::ric::bots::AddToGenConfigRequest_LinearType::MergeFrom(from.linear());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ric.bots.AddToGenConfigRequest)
}

void AddToGenConfigRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AddToGenConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}

AddToGenConfigRequest::~AddToGenConfigRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.AddToGenConfigRequest)
  SharedDtor();
}

void AddToGenConfigRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_type()) {
    clear_type();
  }
}

void AddToGenConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddToGenConfigRequest& AddToGenConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AddToGenConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void AddToGenConfigRequest::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:ric.bots.AddToGenConfigRequest)
  switch (type_case()) {
    case kRandom: {
      delete type_.random_;
      break;
    }
    case kLinear: {
      delete type_.linear_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void AddToGenConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.AddToGenConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AddToGenConfigRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AddToGenConfigRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.AddToGenConfigRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.AddToGenConfigRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ric.bots.AddToGenConfigRequest.RandomType random = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::bots::AddToGenConfigRequest_RandomType::_InternalParse;
        object = msg->mutable_random();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .ric.bots.AddToGenConfigRequest.LinearType linear = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::bots::AddToGenConfigRequest_LinearType::_InternalParse;
        object = msg->mutable_linear();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AddToGenConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.AddToGenConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.AddToGenConfigRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.AddToGenConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.bots.AddToGenConfigRequest.RandomType random = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_random()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.bots.AddToGenConfigRequest.LinearType linear = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.AddToGenConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.AddToGenConfigRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AddToGenConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.AddToGenConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.AddToGenConfigRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.AddToGenConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .ric.bots.AddToGenConfigRequest.RandomType random = 3;
  if (has_random()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::random(this), output);
  }

  // .ric.bots.AddToGenConfigRequest.LinearType linear = 4;
  if (has_linear()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::linear(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.AddToGenConfigRequest)
}

::google::protobuf::uint8* AddToGenConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.AddToGenConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.AddToGenConfigRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.AddToGenConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .ric.bots.AddToGenConfigRequest.RandomType random = 3;
  if (has_random()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::random(this), target);
  }

  // .ric.bots.AddToGenConfigRequest.LinearType linear = 4;
  if (has_linear()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::linear(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.AddToGenConfigRequest)
  return target;
}

size_t AddToGenConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.AddToGenConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (type_case()) {
    // .ric.bots.AddToGenConfigRequest.RandomType random = 3;
    case kRandom: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.random_);
      break;
    }
    // .ric.bots.AddToGenConfigRequest.LinearType linear = 4;
    case kLinear: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.linear_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddToGenConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.AddToGenConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddToGenConfigRequest* source =
      ::google::protobuf::DynamicCastToGenerated<AddToGenConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.AddToGenConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.AddToGenConfigRequest)
    MergeFrom(*source);
  }
}

void AddToGenConfigRequest::MergeFrom(const AddToGenConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.AddToGenConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.type_case()) {
    case kRandom: {
      mutable_random()->::ric::bots::AddToGenConfigRequest_RandomType::MergeFrom(from.random());
      break;
    }
    case kLinear: {
      mutable_linear()->::ric::bots::AddToGenConfigRequest_LinearType::MergeFrom(from.linear());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void AddToGenConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.AddToGenConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddToGenConfigRequest::CopyFrom(const AddToGenConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.AddToGenConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddToGenConfigRequest::IsInitialized() const {
  return true;
}

void AddToGenConfigRequest::Swap(AddToGenConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddToGenConfigRequest::InternalSwap(AddToGenConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata AddToGenConfigRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RemoveFromGenConfigRequest::InitAsDefaultInstance() {
}
class RemoveFromGenConfigRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveFromGenConfigRequest::kObjectIdFieldNumber;
const int RemoveFromGenConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveFromGenConfigRequest::RemoveFromGenConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.RemoveFromGenConfigRequest)
}
RemoveFromGenConfigRequest::RemoveFromGenConfigRequest(const RemoveFromGenConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.bots.RemoveFromGenConfigRequest)
}

void RemoveFromGenConfigRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RemoveFromGenConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemoveFromGenConfigRequest::~RemoveFromGenConfigRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.RemoveFromGenConfigRequest)
  SharedDtor();
}

void RemoveFromGenConfigRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveFromGenConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveFromGenConfigRequest& RemoveFromGenConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RemoveFromGenConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void RemoveFromGenConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.RemoveFromGenConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RemoveFromGenConfigRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RemoveFromGenConfigRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.RemoveFromGenConfigRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.RemoveFromGenConfigRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RemoveFromGenConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.RemoveFromGenConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.RemoveFromGenConfigRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.RemoveFromGenConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.RemoveFromGenConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.RemoveFromGenConfigRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RemoveFromGenConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.RemoveFromGenConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.RemoveFromGenConfigRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.RemoveFromGenConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.RemoveFromGenConfigRequest)
}

::google::protobuf::uint8* RemoveFromGenConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.RemoveFromGenConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.RemoveFromGenConfigRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.RemoveFromGenConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.RemoveFromGenConfigRequest)
  return target;
}

size_t RemoveFromGenConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.RemoveFromGenConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveFromGenConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.RemoveFromGenConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveFromGenConfigRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RemoveFromGenConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.RemoveFromGenConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.RemoveFromGenConfigRequest)
    MergeFrom(*source);
  }
}

void RemoveFromGenConfigRequest::MergeFrom(const RemoveFromGenConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.RemoveFromGenConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RemoveFromGenConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.RemoveFromGenConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveFromGenConfigRequest::CopyFrom(const RemoveFromGenConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.RemoveFromGenConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveFromGenConfigRequest::IsInitialized() const {
  return true;
}

void RemoveFromGenConfigRequest::Swap(RemoveFromGenConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveFromGenConfigRequest::InternalSwap(RemoveFromGenConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RemoveFromGenConfigRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PauseStopGeoRequest::InitAsDefaultInstance() {
}
class PauseStopGeoRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PauseStopGeoRequest::kObjectIdFieldNumber;
const int PauseStopGeoRequest::kStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PauseStopGeoRequest::PauseStopGeoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.PauseStopGeoRequest)
}
PauseStopGeoRequest::PauseStopGeoRequest(const PauseStopGeoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  stop_ = from.stop_;
  // @@protoc_insertion_point(copy_constructor:ric.bots.PauseStopGeoRequest)
}

void PauseStopGeoRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PauseStopGeoRequest_ric_2dbots_2fricbots_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stop_ = false;
}

PauseStopGeoRequest::~PauseStopGeoRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.PauseStopGeoRequest)
  SharedDtor();
}

void PauseStopGeoRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PauseStopGeoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PauseStopGeoRequest& PauseStopGeoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PauseStopGeoRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void PauseStopGeoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.PauseStopGeoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stop_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PauseStopGeoRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PauseStopGeoRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.PauseStopGeoRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool stop = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_stop(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PauseStopGeoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.PauseStopGeoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.PauseStopGeoRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.PauseStopGeoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.PauseStopGeoRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PauseStopGeoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.PauseStopGeoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.PauseStopGeoRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // bool stop = 2;
  if (this->stop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stop(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.PauseStopGeoRequest)
}

::google::protobuf::uint8* PauseStopGeoRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.PauseStopGeoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.PauseStopGeoRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // bool stop = 2;
  if (this->stop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stop(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.PauseStopGeoRequest)
  return target;
}

size_t PauseStopGeoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.PauseStopGeoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // bool stop = 2;
  if (this->stop() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseStopGeoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.PauseStopGeoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseStopGeoRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PauseStopGeoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.PauseStopGeoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.PauseStopGeoRequest)
    MergeFrom(*source);
  }
}

void PauseStopGeoRequest::MergeFrom(const PauseStopGeoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.PauseStopGeoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.stop() != 0) {
    set_stop(from.stop());
  }
}

void PauseStopGeoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.PauseStopGeoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseStopGeoRequest::CopyFrom(const PauseStopGeoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.PauseStopGeoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseStopGeoRequest::IsInitialized() const {
  return true;
}

void PauseStopGeoRequest::Swap(PauseStopGeoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PauseStopGeoRequest::InternalSwap(PauseStopGeoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stop_, other->stop_);
}

::google::protobuf::Metadata PauseStopGeoRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StartGeoRequest::InitAsDefaultInstance() {
}
class StartGeoRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartGeoRequest::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartGeoRequest::StartGeoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.StartGeoRequest)
}
StartGeoRequest::StartGeoRequest(const StartGeoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.bots.StartGeoRequest)
}

void StartGeoRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StartGeoRequest_ric_2dbots_2fricbots_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StartGeoRequest::~StartGeoRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.StartGeoRequest)
  SharedDtor();
}

void StartGeoRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartGeoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartGeoRequest& StartGeoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StartGeoRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void StartGeoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.StartGeoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StartGeoRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StartGeoRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.StartGeoRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StartGeoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.StartGeoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.StartGeoRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.StartGeoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.StartGeoRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StartGeoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.StartGeoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.StartGeoRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.StartGeoRequest)
}

::google::protobuf::uint8* StartGeoRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.StartGeoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.StartGeoRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.StartGeoRequest)
  return target;
}

size_t StartGeoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.StartGeoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartGeoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.StartGeoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartGeoRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StartGeoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.StartGeoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.StartGeoRequest)
    MergeFrom(*source);
  }
}

void StartGeoRequest::MergeFrom(const StartGeoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.StartGeoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void StartGeoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.StartGeoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartGeoRequest::CopyFrom(const StartGeoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.StartGeoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartGeoRequest::IsInitialized() const {
  return true;
}

void StartGeoRequest::Swap(StartGeoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartGeoRequest::InternalSwap(StartGeoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StartGeoRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetBotConfigRequest::InitAsDefaultInstance() {
}
class SetBotConfigRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBotConfigRequest::kObjectIdFieldNumber;
const int SetBotConfigRequest::kSendIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBotConfigRequest::SetBotConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.SetBotConfigRequest)
}
SetBotConfigRequest::SetBotConfigRequest(const SetBotConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  send_interval_ = from.send_interval_;
  // @@protoc_insertion_point(copy_constructor:ric.bots.SetBotConfigRequest)
}

void SetBotConfigRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetBotConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  send_interval_ = 0;
}

SetBotConfigRequest::~SetBotConfigRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.SetBotConfigRequest)
  SharedDtor();
}

void SetBotConfigRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetBotConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBotConfigRequest& SetBotConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetBotConfigRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void SetBotConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.SetBotConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  send_interval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetBotConfigRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetBotConfigRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.SetBotConfigRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // double send_interval = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_send_interval(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetBotConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.SetBotConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.SetBotConfigRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double send_interval = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &send_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.SetBotConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.SetBotConfigRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetBotConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.SetBotConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.SetBotConfigRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // double send_interval = 2;
  if (this->send_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->send_interval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.SetBotConfigRequest)
}

::google::protobuf::uint8* SetBotConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.SetBotConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.SetBotConfigRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // double send_interval = 2;
  if (this->send_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->send_interval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.SetBotConfigRequest)
  return target;
}

size_t SetBotConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.SetBotConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // double send_interval = 2;
  if (this->send_interval() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBotConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.SetBotConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBotConfigRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetBotConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.SetBotConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.SetBotConfigRequest)
    MergeFrom(*source);
  }
}

void SetBotConfigRequest::MergeFrom(const SetBotConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.SetBotConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.send_interval() != 0) {
    set_send_interval(from.send_interval());
  }
}

void SetBotConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.SetBotConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBotConfigRequest::CopyFrom(const SetBotConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.SetBotConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBotConfigRequest::IsInitialized() const {
  return true;
}

void SetBotConfigRequest::Swap(SetBotConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBotConfigRequest::InternalSwap(SetBotConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(send_interval_, other->send_interval_);
}

::google::protobuf::Metadata SetBotConfigRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// ===================================================================

CallRequest_ParamsEntry_DoNotUse::CallRequest_ParamsEntry_DoNotUse() {}
CallRequest_ParamsEntry_DoNotUse::CallRequest_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void CallRequest_ParamsEntry_DoNotUse::MergeFrom(const CallRequest_ParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CallRequest_ParamsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[16];
}
void CallRequest_ParamsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CallRequest_ParamsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      CallRequest_ParamsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ric.bots.CallRequest.ParamsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ric.bots.CallRequest.ParamsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void CallRequest::InitAsDefaultInstance() {
}
class CallRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallRequest::kNameFieldNumber;
const int CallRequest::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallRequest::CallRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bots.CallRequest)
}
CallRequest::CallRequest(const CallRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.bots.CallRequest)
}

void CallRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CallRequest_ric_2dbots_2fricbots_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CallRequest::~CallRequest() {
  // @@protoc_insertion_point(destructor:ric.bots.CallRequest)
  SharedDtor();
}

void CallRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CallRequest& CallRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CallRequest_ric_2dbots_2fricbots_2eproto.base);
  return *internal_default_instance();
}


void CallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bots.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CallRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CallRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bots.CallRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> params = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ric::bots::CallRequest_ParamsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->params_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bots.CallRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.CallRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          CallRequest_ParamsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CallRequest_ParamsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&params_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.CallRequest.ParamsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bots.CallRequest.ParamsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bots.CallRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bots.CallRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bots.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.CallRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // map<string, string> params = 2;
  if (!this->params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.CallRequest.ParamsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.CallRequest.ParamsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CallRequest_ParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(params_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<CallRequest_ParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        entry.reset(params_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bots.CallRequest)
}

::google::protobuf::uint8* CallRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bots.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bots.CallRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // map<string, string> params = 2;
  if (!this->params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.CallRequest.ParamsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.bots.CallRequest.ParamsEntry.value");
      }
    };

    if (false &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CallRequest_ParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(params_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<CallRequest_ParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        entry.reset(params_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bots.CallRequest)
  return target;
}

size_t CallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bots.CallRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> params = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  {
    ::std::unique_ptr<CallRequest_ParamsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bots.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CallRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CallRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bots.CallRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bots.CallRequest)
    MergeFrom(*source);
  }
}

void CallRequest::MergeFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bots.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CallRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bots.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallRequest::CopyFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bots.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallRequest::IsInitialized() const {
  return true;
}

void CallRequest::Swap(CallRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallRequest::InternalSwap(CallRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  params_.Swap(&other->params_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CallRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbots_2fricbots_2eproto);
  return ::file_level_metadata_ric_2dbots_2fricbots_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bots
}  // namespace ric
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ric::bots::EmptyResponse* Arena::CreateMaybeMessage< ::ric::bots::EmptyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::EmptyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::StartRequest* Arena::CreateMaybeMessage< ::ric::bots::StartRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::StartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::StopRequest* Arena::CreateMaybeMessage< ::ric::bots::StopRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::StopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::SetStateRequest_StateValue* Arena::CreateMaybeMessage< ::ric::bots::SetStateRequest_StateValue >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::SetStateRequest_StateValue >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::SetStateRequest_StateEntry_DoNotUse* Arena::CreateMaybeMessage< ::ric::bots::SetStateRequest_StateEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::SetStateRequest_StateEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::SetStateRequest* Arena::CreateMaybeMessage< ::ric::bots::SetStateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::SetStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::SetGeoConfigRequest_Point* Arena::CreateMaybeMessage< ::ric::bots::SetGeoConfigRequest_Point >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::SetGeoConfigRequest_Point >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse* Arena::CreateMaybeMessage< ::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::SetGeoConfigRequest_MapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::SetGeoConfigRequest* Arena::CreateMaybeMessage< ::ric::bots::SetGeoConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::SetGeoConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::AddToGenConfigRequest_RandomType* Arena::CreateMaybeMessage< ::ric::bots::AddToGenConfigRequest_RandomType >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::AddToGenConfigRequest_RandomType >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::AddToGenConfigRequest_LinearType* Arena::CreateMaybeMessage< ::ric::bots::AddToGenConfigRequest_LinearType >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::AddToGenConfigRequest_LinearType >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::AddToGenConfigRequest* Arena::CreateMaybeMessage< ::ric::bots::AddToGenConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::AddToGenConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::RemoveFromGenConfigRequest* Arena::CreateMaybeMessage< ::ric::bots::RemoveFromGenConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::RemoveFromGenConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::PauseStopGeoRequest* Arena::CreateMaybeMessage< ::ric::bots::PauseStopGeoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::PauseStopGeoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::StartGeoRequest* Arena::CreateMaybeMessage< ::ric::bots::StartGeoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::StartGeoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::SetBotConfigRequest* Arena::CreateMaybeMessage< ::ric::bots::SetBotConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::SetBotConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::CallRequest_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::ric::bots::CallRequest_ParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::CallRequest_ParamsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bots::CallRequest* Arena::CreateMaybeMessage< ::ric::bots::CallRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bots::CallRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
