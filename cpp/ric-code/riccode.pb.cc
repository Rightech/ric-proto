// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-code/riccode.proto

#include "ric-code/riccode.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ric_2dcode_2friccode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LibDefinition_ric_2dcode_2friccode_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dcode_2friccode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LibRequest_ric_2dcode_2friccode_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dcode_2friccode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParseConditionRequest_AliasesEntry_DoNotUse_ric_2dcode_2friccode_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dcode_2friccode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VarDecl_ric_2dcode_2friccode_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dcode_2friccode_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InputRef_ric_2dcode_2friccode_2eproto;
namespace ric {
namespace code {
class TranspileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TranspileRequest> _instance;
} _TranspileRequest_default_instance_;
class TranspileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TranspileResponse> _instance;
} _TranspileResponse_default_instance_;
class InputRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputRef> _instance;
} _InputRef_default_instance_;
class VarDeclDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarDecl> _instance;
} _VarDecl_default_instance_;
class LibDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LibDefinition> _instance;
} _LibDefinition_default_instance_;
class LibRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LibRequest> _instance;
} _LibRequest_default_instance_;
class BundleEsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BundleEsRequest> _instance;
} _BundleEsRequest_default_instance_;
class BundleEsProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BundleEsProgress> _instance;
} _BundleEsProgress_default_instance_;
class ParseConditionRequest_AliasesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParseConditionRequest_AliasesEntry_DoNotUse> _instance;
} _ParseConditionRequest_AliasesEntry_DoNotUse_default_instance_;
class ParseConditionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParseConditionRequest> _instance;
} _ParseConditionRequest_default_instance_;
class ParseConditionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParseConditionResponse> _instance;
} _ParseConditionResponse_default_instance_;
}  // namespace code
}  // namespace ric
static void InitDefaultsTranspileRequest_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_TranspileRequest_default_instance_;
    new (ptr) ::ric::code::TranspileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::TranspileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TranspileRequest_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTranspileRequest_ric_2dcode_2friccode_2eproto}, {
      &scc_info_LibDefinition_ric_2dcode_2friccode_2eproto.base,}};

static void InitDefaultsTranspileResponse_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_TranspileResponse_default_instance_;
    new (ptr) ::ric::code::TranspileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::TranspileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TranspileResponse_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTranspileResponse_ric_2dcode_2friccode_2eproto}, {
      &scc_info_LibRequest_ric_2dcode_2friccode_2eproto.base,
      &scc_info_VarDecl_ric_2dcode_2friccode_2eproto.base,
      &scc_info_InputRef_ric_2dcode_2friccode_2eproto.base,}};

static void InitDefaultsInputRef_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_InputRef_default_instance_;
    new (ptr) ::ric::code::InputRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::InputRef::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputRef_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputRef_ric_2dcode_2friccode_2eproto}, {
      &scc_info_VarDecl_ric_2dcode_2friccode_2eproto.base,}};

static void InitDefaultsVarDecl_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_VarDecl_default_instance_;
    new (ptr) ::ric::code::VarDecl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::VarDecl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VarDecl_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVarDecl_ric_2dcode_2friccode_2eproto}, {}};

static void InitDefaultsLibDefinition_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_LibDefinition_default_instance_;
    new (ptr) ::ric::code::LibDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::LibDefinition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LibDefinition_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLibDefinition_ric_2dcode_2friccode_2eproto}, {}};

static void InitDefaultsLibRequest_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_LibRequest_default_instance_;
    new (ptr) ::ric::code::LibRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::LibRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LibRequest_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLibRequest_ric_2dcode_2friccode_2eproto}, {}};

static void InitDefaultsBundleEsRequest_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_BundleEsRequest_default_instance_;
    new (ptr) ::ric::code::BundleEsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::BundleEsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BundleEsRequest_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBundleEsRequest_ric_2dcode_2friccode_2eproto}, {}};

static void InitDefaultsBundleEsProgress_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_BundleEsProgress_default_instance_;
    new (ptr) ::ric::code::BundleEsProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::BundleEsProgress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BundleEsProgress_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBundleEsProgress_ric_2dcode_2friccode_2eproto}, {}};

static void InitDefaultsParseConditionRequest_AliasesEntry_DoNotUse_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_ParseConditionRequest_AliasesEntry_DoNotUse_default_instance_;
    new (ptr) ::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse();
  }
  ::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParseConditionRequest_AliasesEntry_DoNotUse_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParseConditionRequest_AliasesEntry_DoNotUse_ric_2dcode_2friccode_2eproto}, {}};

static void InitDefaultsParseConditionRequest_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_ParseConditionRequest_default_instance_;
    new (ptr) ::ric::code::ParseConditionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::ParseConditionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ParseConditionRequest_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsParseConditionRequest_ric_2dcode_2friccode_2eproto}, {
      &scc_info_ParseConditionRequest_AliasesEntry_DoNotUse_ric_2dcode_2friccode_2eproto.base,}};

static void InitDefaultsParseConditionResponse_ric_2dcode_2friccode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::code::_ParseConditionResponse_default_instance_;
    new (ptr) ::ric::code::ParseConditionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::code::ParseConditionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParseConditionResponse_ric_2dcode_2friccode_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParseConditionResponse_ric_2dcode_2friccode_2eproto}, {}};

void InitDefaults_ric_2dcode_2friccode_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_TranspileRequest_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TranspileResponse_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputRef_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarDecl_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LibDefinition_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LibRequest_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BundleEsRequest_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BundleEsProgress_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParseConditionRequest_AliasesEntry_DoNotUse_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParseConditionRequest_ric_2dcode_2friccode_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParseConditionResponse_ric_2dcode_2friccode_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ric_2dcode_2friccode_2eproto[11];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ric_2dcode_2friccode_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ric_2dcode_2friccode_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ric_2dcode_2friccode_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileRequest, id_),
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileRequest, code_),
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileRequest, main_),
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileRequest, defs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileResponse, code_es5_),
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileResponse, libs_),
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileResponse, input_),
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileResponse, output_),
  PROTOBUF_FIELD_OFFSET(::ric::code::TranspileResponse, refs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::InputRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::InputRef, name_),
  PROTOBUF_FIELD_OFFSET(::ric::code::InputRef, vars_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::VarDecl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::VarDecl, name_),
  PROTOBUF_FIELD_OFFSET(::ric::code::VarDecl, type_),
  PROTOBUF_FIELD_OFFSET(::ric::code::VarDecl, default__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::LibDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::LibDefinition, name_),
  PROTOBUF_FIELD_OFFSET(::ric::code::LibDefinition, def_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::LibRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::LibRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ric::code::LibRequest, semver_),
  PROTOBUF_FIELD_OFFSET(::ric::code::LibRequest, local_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::BundleEsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::BundleEsRequest, id_),
  PROTOBUF_FIELD_OFFSET(::ric::code::BundleEsRequest, code_),
  PROTOBUF_FIELD_OFFSET(::ric::code::BundleEsRequest, main_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::BundleEsProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::BundleEsProgress, message_),
  PROTOBUF_FIELD_OFFSET(::ric::code::BundleEsProgress, result_),
  PROTOBUF_FIELD_OFFSET(::ric::code::BundleEsProgress, error_),
  PROTOBUF_FIELD_OFFSET(::ric::code::BundleEsProgress, source_map_),
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionRequest, id_),
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionRequest, code_),
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionRequest, aliases_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::code::ParseConditionResponse, compiled_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ric::code::TranspileRequest)},
  { 9, -1, sizeof(::ric::code::TranspileResponse)},
  { 19, -1, sizeof(::ric::code::InputRef)},
  { 26, -1, sizeof(::ric::code::VarDecl)},
  { 34, -1, sizeof(::ric::code::LibDefinition)},
  { 41, -1, sizeof(::ric::code::LibRequest)},
  { 49, -1, sizeof(::ric::code::BundleEsRequest)},
  { 57, -1, sizeof(::ric::code::BundleEsProgress)},
  { 66, 73, sizeof(::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse)},
  { 75, -1, sizeof(::ric::code::ParseConditionRequest)},
  { 83, -1, sizeof(::ric::code::ParseConditionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_TranspileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_TranspileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_InputRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_VarDecl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_LibDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_LibRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_BundleEsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_BundleEsProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_ParseConditionRequest_AliasesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_ParseConditionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::code::_ParseConditionResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ric_2dcode_2friccode_2eproto = {
  {}, AddDescriptors_ric_2dcode_2friccode_2eproto, "ric-code/riccode.proto", schemas,
  file_default_instances, TableStruct_ric_2dcode_2friccode_2eproto::offsets,
  file_level_metadata_ric_2dcode_2friccode_2eproto, 11, file_level_enum_descriptors_ric_2dcode_2friccode_2eproto, file_level_service_descriptors_ric_2dcode_2friccode_2eproto,
};

const char descriptor_table_protodef_ric_2dcode_2friccode_2eproto[] =
  "\n\026ric-code/riccode.proto\022\010ric.code\"a\n\020Tr"
  "anspileRequest\022\n\n\002id\030\001 \001(\t\022\014\n\004code\030\002 \001(\t"
  "\022\014\n\004main\030\003 \001(\t\022%\n\004defs\030\004 \003(\0132\027.ric.code."
  "LibDefinition\"\260\001\n\021TranspileResponse\022\020\n\010c"
  "ode_es5\030\001 \001(\t\022\"\n\004libs\030\002 \003(\0132\024.ric.code.L"
  "ibRequest\022 \n\005input\030\003 \003(\0132\021.ric.code.VarD"
  "ecl\022!\n\006output\030\004 \003(\0132\021.ric.code.VarDecl\022 "
  "\n\004refs\030\005 \003(\0132\022.ric.code.InputRef\"9\n\010Inpu"
  "tRef\022\014\n\004name\030\001 \001(\t\022\037\n\004vars\030\002 \003(\0132\021.ric.c"
  "ode.VarDecl\"6\n\007VarDecl\022\014\n\004name\030\001 \001(\t\022\014\n\004"
  "type\030\002 \001(\t\022\017\n\007default\030\003 \001(\t\"*\n\rLibDefini"
  "tion\022\014\n\004name\030\001 \001(\t\022\013\n\003def\030\002 \001(\t\"9\n\nLibRe"
  "quest\022\014\n\004name\030\001 \001(\t\022\016\n\006semver\030\002 \001(\t\022\r\n\005l"
  "ocal\030\003 \001(\010\"9\n\017BundleEsRequest\022\n\n\002id\030\001 \001("
  "\t\022\014\n\004code\030\002 \001(\t\022\014\n\004main\030\003 \001(\t\"V\n\020BundleE"
  "sProgress\022\017\n\007message\030\001 \001(\t\022\016\n\006result\030\002 \001"
  "(\t\022\r\n\005error\030\003 \001(\t\022\022\n\nsource_map\030\004 \001(\t\"\240\001"
  "\n\025ParseConditionRequest\022\n\n\002id\030\001 \001(\t\022\014\n\004c"
  "ode\030\002 \001(\t\022=\n\007aliases\030\003 \003(\0132,.ric.code.Pa"
  "rseConditionRequest.AliasesEntry\032.\n\014Alia"
  "sesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
  "\"*\n\026ParseConditionResponse\022\020\n\010compiled\030\001"
  " \001(\t2\354\001\n\007RicCode\022G\n\014TranspileEs6\022\032.ric.c"
  "ode.TranspileRequest\032\033.ric.code.Transpil"
  "eResponse\022C\n\010BundleEs\022\031.ric.code.BundleE"
  "sRequest\032\032.ric.code.BundleEsProgress0\001\022S"
  "\n\016ParseCondition\022\037.ric.code.ParseConditi"
  "onRequest\032 .ric.code.ParseConditionRespo"
  "nseB\024Z\022./ric-code;riccodeb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ric_2dcode_2friccode_2eproto = {
  false, InitDefaults_ric_2dcode_2friccode_2eproto, 
  descriptor_table_protodef_ric_2dcode_2friccode_2eproto,
  "ric-code/riccode.proto", &assign_descriptors_table_ric_2dcode_2friccode_2eproto, 1153,
};

void AddDescriptors_ric_2dcode_2friccode_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ric_2dcode_2friccode_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ric_2dcode_2friccode_2eproto = []() { AddDescriptors_ric_2dcode_2friccode_2eproto(); return true; }();
namespace ric {
namespace code {

// ===================================================================

void TranspileRequest::InitAsDefaultInstance() {
}
class TranspileRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranspileRequest::kIdFieldNumber;
const int TranspileRequest::kCodeFieldNumber;
const int TranspileRequest::kMainFieldNumber;
const int TranspileRequest::kDefsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TranspileRequest::TranspileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.TranspileRequest)
}
TranspileRequest::TranspileRequest(const TranspileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      defs_(from.defs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  main_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.main().size() > 0) {
    main_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.code.TranspileRequest)
}

void TranspileRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TranspileRequest_ric_2dcode_2friccode_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TranspileRequest::~TranspileRequest() {
  // @@protoc_insertion_point(destructor:ric.code.TranspileRequest)
  SharedDtor();
}

void TranspileRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TranspileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TranspileRequest& TranspileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TranspileRequest_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void TranspileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.TranspileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  defs_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TranspileRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TranspileRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.TranspileRequest.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.TranspileRequest.code");
        object = msg->mutable_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string main = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.TranspileRequest.main");
        object = msg->mutable_main();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .ric.code.LibDefinition defs = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ric::code::LibDefinition::_InternalParse;
          object = msg->add_defs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TranspileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.TranspileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.TranspileRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.TranspileRequest.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string main = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->main().data(), static_cast<int>(this->main().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.TranspileRequest.main"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ric.code.LibDefinition defs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_defs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.TranspileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.TranspileRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TranspileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.TranspileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.TranspileRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.TranspileRequest.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // string main = 3;
  if (this->main().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main().data(), static_cast<int>(this->main().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.TranspileRequest.main");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->main(), output);
  }

  // repeated .ric.code.LibDefinition defs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->defs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->defs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.TranspileRequest)
}

::google::protobuf::uint8* TranspileRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.TranspileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.TranspileRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.TranspileRequest.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // string main = 3;
  if (this->main().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main().data(), static_cast<int>(this->main().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.TranspileRequest.main");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->main(), target);
  }

  // repeated .ric.code.LibDefinition defs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->defs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->defs(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.TranspileRequest)
  return target;
}

size_t TranspileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.TranspileRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ric.code.LibDefinition defs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->defs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->defs(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string main = 3;
  if (this->main().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->main());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TranspileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.TranspileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TranspileRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TranspileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.TranspileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.TranspileRequest)
    MergeFrom(*source);
  }
}

void TranspileRequest::MergeFrom(const TranspileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.TranspileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  defs_.MergeFrom(from.defs_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.main().size() > 0) {

    main_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_);
  }
}

void TranspileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.TranspileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TranspileRequest::CopyFrom(const TranspileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.TranspileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranspileRequest::IsInitialized() const {
  return true;
}

void TranspileRequest::Swap(TranspileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TranspileRequest::InternalSwap(TranspileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&defs_)->InternalSwap(CastToBase(&other->defs_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  main_.Swap(&other->main_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TranspileRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TranspileResponse::InitAsDefaultInstance() {
}
class TranspileResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranspileResponse::kCodeEs5FieldNumber;
const int TranspileResponse::kLibsFieldNumber;
const int TranspileResponse::kInputFieldNumber;
const int TranspileResponse::kOutputFieldNumber;
const int TranspileResponse::kRefsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TranspileResponse::TranspileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.TranspileResponse)
}
TranspileResponse::TranspileResponse(const TranspileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      libs_(from.libs_),
      input_(from.input_),
      output_(from.output_),
      refs_(from.refs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_es5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code_es5().size() > 0) {
    code_es5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_es5_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.code.TranspileResponse)
}

void TranspileResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TranspileResponse_ric_2dcode_2friccode_2eproto.base);
  code_es5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TranspileResponse::~TranspileResponse() {
  // @@protoc_insertion_point(destructor:ric.code.TranspileResponse)
  SharedDtor();
}

void TranspileResponse::SharedDtor() {
  code_es5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TranspileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TranspileResponse& TranspileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TranspileResponse_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void TranspileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.TranspileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  libs_.Clear();
  input_.Clear();
  output_.Clear();
  refs_.Clear();
  code_es5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TranspileResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TranspileResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string code_es5 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.TranspileResponse.code_es5");
        object = msg->mutable_code_es5();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .ric.code.LibRequest libs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ric::code::LibRequest::_InternalParse;
          object = msg->add_libs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .ric.code.VarDecl input = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ric::code::VarDecl::_InternalParse;
          object = msg->add_input();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .ric.code.VarDecl output = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ric::code::VarDecl::_InternalParse;
          object = msg->add_output();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated .ric.code.InputRef refs = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ric::code::InputRef::_InternalParse;
          object = msg->add_refs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TranspileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.TranspileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code_es5 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_es5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code_es5().data(), static_cast<int>(this->code_es5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.TranspileResponse.code_es5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ric.code.LibRequest libs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_libs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ric.code.VarDecl input = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ric.code.VarDecl output = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ric.code.InputRef refs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_refs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.TranspileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.TranspileResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TranspileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.TranspileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code_es5 = 1;
  if (this->code_es5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_es5().data(), static_cast<int>(this->code_es5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.TranspileResponse.code_es5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code_es5(), output);
  }

  // repeated .ric.code.LibRequest libs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->libs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->libs(static_cast<int>(i)),
      output);
  }

  // repeated .ric.code.VarDecl input = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->input(static_cast<int>(i)),
      output);
  }

  // repeated .ric.code.VarDecl output = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->output(static_cast<int>(i)),
      output);
  }

  // repeated .ric.code.InputRef refs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->refs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->refs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.TranspileResponse)
}

::google::protobuf::uint8* TranspileResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.TranspileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code_es5 = 1;
  if (this->code_es5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_es5().data(), static_cast<int>(this->code_es5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.TranspileResponse.code_es5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code_es5(), target);
  }

  // repeated .ric.code.LibRequest libs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->libs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->libs(static_cast<int>(i)), target);
  }

  // repeated .ric.code.VarDecl input = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->input(static_cast<int>(i)), target);
  }

  // repeated .ric.code.VarDecl output = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->output(static_cast<int>(i)), target);
  }

  // repeated .ric.code.InputRef refs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->refs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->refs(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.TranspileResponse)
  return target;
}

size_t TranspileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.TranspileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ric.code.LibRequest libs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->libs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->libs(static_cast<int>(i)));
    }
  }

  // repeated .ric.code.VarDecl input = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->input_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input(static_cast<int>(i)));
    }
  }

  // repeated .ric.code.VarDecl output = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->output_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output(static_cast<int>(i)));
    }
  }

  // repeated .ric.code.InputRef refs = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->refs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->refs(static_cast<int>(i)));
    }
  }

  // string code_es5 = 1;
  if (this->code_es5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code_es5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TranspileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.TranspileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TranspileResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TranspileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.TranspileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.TranspileResponse)
    MergeFrom(*source);
  }
}

void TranspileResponse::MergeFrom(const TranspileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.TranspileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  libs_.MergeFrom(from.libs_);
  input_.MergeFrom(from.input_);
  output_.MergeFrom(from.output_);
  refs_.MergeFrom(from.refs_);
  if (from.code_es5().size() > 0) {

    code_es5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_es5_);
  }
}

void TranspileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.TranspileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TranspileResponse::CopyFrom(const TranspileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.TranspileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranspileResponse::IsInitialized() const {
  return true;
}

void TranspileResponse::Swap(TranspileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TranspileResponse::InternalSwap(TranspileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&libs_)->InternalSwap(CastToBase(&other->libs_));
  CastToBase(&input_)->InternalSwap(CastToBase(&other->input_));
  CastToBase(&output_)->InternalSwap(CastToBase(&other->output_));
  CastToBase(&refs_)->InternalSwap(CastToBase(&other->refs_));
  code_es5_.Swap(&other->code_es5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TranspileResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InputRef::InitAsDefaultInstance() {
}
class InputRef::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputRef::kNameFieldNumber;
const int InputRef::kVarsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputRef::InputRef()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.InputRef)
}
InputRef::InputRef(const InputRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      vars_(from.vars_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.code.InputRef)
}

void InputRef::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InputRef_ric_2dcode_2friccode_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InputRef::~InputRef() {
  // @@protoc_insertion_point(destructor:ric.code.InputRef)
  SharedDtor();
}

void InputRef::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputRef& InputRef::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InputRef_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void InputRef::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.InputRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vars_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputRef::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InputRef*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.InputRef.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .ric.code.VarDecl vars = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ric::code::VarDecl::_InternalParse;
          object = msg->add_vars();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.InputRef)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.InputRef.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ric.code.VarDecl vars = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.InputRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.InputRef)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.InputRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.InputRef.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .ric.code.VarDecl vars = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vars_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->vars(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.InputRef)
}

::google::protobuf::uint8* InputRef::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.InputRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.InputRef.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .ric.code.VarDecl vars = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vars_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->vars(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.InputRef)
  return target;
}

size_t InputRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.InputRef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ric.code.VarDecl vars = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->vars_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vars(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.InputRef)
  GOOGLE_DCHECK_NE(&from, this);
  const InputRef* source =
      ::google::protobuf::DynamicCastToGenerated<InputRef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.InputRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.InputRef)
    MergeFrom(*source);
  }
}

void InputRef::MergeFrom(const InputRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.InputRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vars_.MergeFrom(from.vars_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void InputRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.InputRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputRef::CopyFrom(const InputRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.InputRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputRef::IsInitialized() const {
  return true;
}

void InputRef::Swap(InputRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputRef::InternalSwap(InputRef* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&vars_)->InternalSwap(CastToBase(&other->vars_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata InputRef::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VarDecl::InitAsDefaultInstance() {
}
class VarDecl::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarDecl::kNameFieldNumber;
const int VarDecl::kTypeFieldNumber;
const int VarDecl::kDefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarDecl::VarDecl()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.VarDecl)
}
VarDecl::VarDecl(const VarDecl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  default__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_().size() > 0) {
    default__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default__);
  }
  // @@protoc_insertion_point(copy_constructor:ric.code.VarDecl)
}

void VarDecl::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VarDecl_ric_2dcode_2friccode_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VarDecl::~VarDecl() {
  // @@protoc_insertion_point(destructor:ric.code.VarDecl)
  SharedDtor();
}

void VarDecl::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VarDecl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VarDecl& VarDecl::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VarDecl_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void VarDecl::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.VarDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VarDecl::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VarDecl*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.VarDecl.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.VarDecl.type");
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string default = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.VarDecl.default");
        object = msg->mutable_default_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VarDecl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.VarDecl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.VarDecl.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.VarDecl.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_().data(), static_cast<int>(this->default_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.VarDecl.default"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.VarDecl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.VarDecl)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VarDecl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.VarDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.VarDecl.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.VarDecl.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // string default = 3;
  if (this->default_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_().data(), static_cast<int>(this->default_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.VarDecl.default");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->default_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.VarDecl)
}

::google::protobuf::uint8* VarDecl::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.VarDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.VarDecl.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.VarDecl.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // string default = 3;
  if (this->default_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_().data(), static_cast<int>(this->default_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.VarDecl.default");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->default_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.VarDecl)
  return target;
}

size_t VarDecl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.VarDecl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string default = 3;
  if (this->default_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarDecl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.VarDecl)
  GOOGLE_DCHECK_NE(&from, this);
  const VarDecl* source =
      ::google::protobuf::DynamicCastToGenerated<VarDecl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.VarDecl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.VarDecl)
    MergeFrom(*source);
  }
}

void VarDecl::MergeFrom(const VarDecl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.VarDecl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.default_().size() > 0) {

    default__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default__);
  }
}

void VarDecl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.VarDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarDecl::CopyFrom(const VarDecl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.VarDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarDecl::IsInitialized() const {
  return true;
}

void VarDecl::Swap(VarDecl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarDecl::InternalSwap(VarDecl* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default__.Swap(&other->default__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata VarDecl::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LibDefinition::InitAsDefaultInstance() {
}
class LibDefinition::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LibDefinition::kNameFieldNumber;
const int LibDefinition::kDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LibDefinition::LibDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.LibDefinition)
}
LibDefinition::LibDefinition(const LibDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  def_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.def().size() > 0) {
    def_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.def_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.code.LibDefinition)
}

void LibDefinition::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LibDefinition_ric_2dcode_2friccode_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  def_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LibDefinition::~LibDefinition() {
  // @@protoc_insertion_point(destructor:ric.code.LibDefinition)
  SharedDtor();
}

void LibDefinition::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  def_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LibDefinition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LibDefinition& LibDefinition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LibDefinition_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void LibDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.LibDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  def_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LibDefinition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LibDefinition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.LibDefinition.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string def = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.LibDefinition.def");
        object = msg->mutable_def();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LibDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.LibDefinition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.LibDefinition.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string def = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_def()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->def().data(), static_cast<int>(this->def().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.LibDefinition.def"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.LibDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.LibDefinition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LibDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.LibDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.LibDefinition.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string def = 2;
  if (this->def().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->def().data(), static_cast<int>(this->def().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.LibDefinition.def");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->def(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.LibDefinition)
}

::google::protobuf::uint8* LibDefinition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.LibDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.LibDefinition.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string def = 2;
  if (this->def().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->def().data(), static_cast<int>(this->def().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.LibDefinition.def");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->def(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.LibDefinition)
  return target;
}

size_t LibDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.LibDefinition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string def = 2;
  if (this->def().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->def());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LibDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.LibDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const LibDefinition* source =
      ::google::protobuf::DynamicCastToGenerated<LibDefinition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.LibDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.LibDefinition)
    MergeFrom(*source);
  }
}

void LibDefinition::MergeFrom(const LibDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.LibDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.def().size() > 0) {

    def_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.def_);
  }
}

void LibDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.LibDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LibDefinition::CopyFrom(const LibDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.LibDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LibDefinition::IsInitialized() const {
  return true;
}

void LibDefinition::Swap(LibDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LibDefinition::InternalSwap(LibDefinition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  def_.Swap(&other->def_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LibDefinition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LibRequest::InitAsDefaultInstance() {
}
class LibRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LibRequest::kNameFieldNumber;
const int LibRequest::kSemverFieldNumber;
const int LibRequest::kLocalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LibRequest::LibRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.LibRequest)
}
LibRequest::LibRequest(const LibRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  semver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.semver().size() > 0) {
    semver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.semver_);
  }
  local_ = from.local_;
  // @@protoc_insertion_point(copy_constructor:ric.code.LibRequest)
}

void LibRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LibRequest_ric_2dcode_2friccode_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  semver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ = false;
}

LibRequest::~LibRequest() {
  // @@protoc_insertion_point(destructor:ric.code.LibRequest)
  SharedDtor();
}

void LibRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  semver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LibRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LibRequest& LibRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LibRequest_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void LibRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.LibRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  semver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LibRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LibRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.LibRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string semver = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.LibRequest.semver");
        object = msg->mutable_semver();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool local = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_local(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LibRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.LibRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.LibRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string semver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_semver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->semver().data(), static_cast<int>(this->semver().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.LibRequest.semver"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool local = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &local_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.LibRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.LibRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LibRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.LibRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.LibRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string semver = 2;
  if (this->semver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->semver().data(), static_cast<int>(this->semver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.LibRequest.semver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->semver(), output);
  }

  // bool local = 3;
  if (this->local() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->local(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.LibRequest)
}

::google::protobuf::uint8* LibRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.LibRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.LibRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string semver = 2;
  if (this->semver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->semver().data(), static_cast<int>(this->semver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.LibRequest.semver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->semver(), target);
  }

  // bool local = 3;
  if (this->local() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->local(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.LibRequest)
  return target;
}

size_t LibRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.LibRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string semver = 2;
  if (this->semver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->semver());
  }

  // bool local = 3;
  if (this->local() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LibRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.LibRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LibRequest* source =
      ::google::protobuf::DynamicCastToGenerated<LibRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.LibRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.LibRequest)
    MergeFrom(*source);
  }
}

void LibRequest::MergeFrom(const LibRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.LibRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.semver().size() > 0) {

    semver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.semver_);
  }
  if (from.local() != 0) {
    set_local(from.local());
  }
}

void LibRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.LibRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LibRequest::CopyFrom(const LibRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.LibRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LibRequest::IsInitialized() const {
  return true;
}

void LibRequest::Swap(LibRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LibRequest::InternalSwap(LibRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  semver_.Swap(&other->semver_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(local_, other->local_);
}

::google::protobuf::Metadata LibRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BundleEsRequest::InitAsDefaultInstance() {
}
class BundleEsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BundleEsRequest::kIdFieldNumber;
const int BundleEsRequest::kCodeFieldNumber;
const int BundleEsRequest::kMainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BundleEsRequest::BundleEsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.BundleEsRequest)
}
BundleEsRequest::BundleEsRequest(const BundleEsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  main_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.main().size() > 0) {
    main_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.code.BundleEsRequest)
}

void BundleEsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BundleEsRequest_ric_2dcode_2friccode_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BundleEsRequest::~BundleEsRequest() {
  // @@protoc_insertion_point(destructor:ric.code.BundleEsRequest)
  SharedDtor();
}

void BundleEsRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BundleEsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BundleEsRequest& BundleEsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BundleEsRequest_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void BundleEsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.BundleEsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BundleEsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BundleEsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.BundleEsRequest.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.BundleEsRequest.code");
        object = msg->mutable_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string main = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.BundleEsRequest.main");
        object = msg->mutable_main();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BundleEsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.BundleEsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.BundleEsRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.BundleEsRequest.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string main = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->main().data(), static_cast<int>(this->main().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.BundleEsRequest.main"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.BundleEsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.BundleEsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BundleEsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.BundleEsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsRequest.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // string main = 3;
  if (this->main().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main().data(), static_cast<int>(this->main().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsRequest.main");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->main(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.BundleEsRequest)
}

::google::protobuf::uint8* BundleEsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.BundleEsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsRequest.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // string main = 3;
  if (this->main().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main().data(), static_cast<int>(this->main().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsRequest.main");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->main(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.BundleEsRequest)
  return target;
}

size_t BundleEsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.BundleEsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string main = 3;
  if (this->main().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->main());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BundleEsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.BundleEsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BundleEsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<BundleEsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.BundleEsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.BundleEsRequest)
    MergeFrom(*source);
  }
}

void BundleEsRequest::MergeFrom(const BundleEsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.BundleEsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.main().size() > 0) {

    main_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_);
  }
}

void BundleEsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.BundleEsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BundleEsRequest::CopyFrom(const BundleEsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.BundleEsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BundleEsRequest::IsInitialized() const {
  return true;
}

void BundleEsRequest::Swap(BundleEsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BundleEsRequest::InternalSwap(BundleEsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  main_.Swap(&other->main_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata BundleEsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BundleEsProgress::InitAsDefaultInstance() {
}
class BundleEsProgress::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BundleEsProgress::kMessageFieldNumber;
const int BundleEsProgress::kResultFieldNumber;
const int BundleEsProgress::kErrorFieldNumber;
const int BundleEsProgress::kSourceMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BundleEsProgress::BundleEsProgress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.BundleEsProgress)
}
BundleEsProgress::BundleEsProgress(const BundleEsProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  source_map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_map().size() > 0) {
    source_map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_map_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.code.BundleEsProgress)
}

void BundleEsProgress::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BundleEsProgress_ric_2dcode_2friccode_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BundleEsProgress::~BundleEsProgress() {
  // @@protoc_insertion_point(destructor:ric.code.BundleEsProgress)
  SharedDtor();
}

void BundleEsProgress::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_map_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BundleEsProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BundleEsProgress& BundleEsProgress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BundleEsProgress_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void BundleEsProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.BundleEsProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_map_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BundleEsProgress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BundleEsProgress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.BundleEsProgress.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string result = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.BundleEsProgress.result");
        object = msg->mutable_result();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string error = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.BundleEsProgress.error");
        object = msg->mutable_error();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string source_map = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.BundleEsProgress.source_map");
        object = msg->mutable_source_map();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BundleEsProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.BundleEsProgress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.BundleEsProgress.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.BundleEsProgress.result"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.BundleEsProgress.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_map()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_map().data(), static_cast<int>(this->source_map().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.BundleEsProgress.source_map"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.BundleEsProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.BundleEsProgress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BundleEsProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.BundleEsProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsProgress.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsProgress.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsProgress.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  // string source_map = 4;
  if (this->source_map().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_map().data(), static_cast<int>(this->source_map().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsProgress.source_map");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source_map(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.BundleEsProgress)
}

::google::protobuf::uint8* BundleEsProgress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.BundleEsProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsProgress.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsProgress.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsProgress.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  // string source_map = 4;
  if (this->source_map().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_map().data(), static_cast<int>(this->source_map().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.BundleEsProgress.source_map");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source_map(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.BundleEsProgress)
  return target;
}

size_t BundleEsProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.BundleEsProgress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string result = 2;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // string source_map = 4;
  if (this->source_map().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_map());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BundleEsProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.BundleEsProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const BundleEsProgress* source =
      ::google::protobuf::DynamicCastToGenerated<BundleEsProgress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.BundleEsProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.BundleEsProgress)
    MergeFrom(*source);
  }
}

void BundleEsProgress::MergeFrom(const BundleEsProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.BundleEsProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.source_map().size() > 0) {

    source_map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_map_);
  }
}

void BundleEsProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.BundleEsProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BundleEsProgress::CopyFrom(const BundleEsProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.BundleEsProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BundleEsProgress::IsInitialized() const {
  return true;
}

void BundleEsProgress::Swap(BundleEsProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BundleEsProgress::InternalSwap(BundleEsProgress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_map_.Swap(&other->source_map_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata BundleEsProgress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// ===================================================================

ParseConditionRequest_AliasesEntry_DoNotUse::ParseConditionRequest_AliasesEntry_DoNotUse() {}
ParseConditionRequest_AliasesEntry_DoNotUse::ParseConditionRequest_AliasesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ParseConditionRequest_AliasesEntry_DoNotUse::MergeFrom(const ParseConditionRequest_AliasesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ParseConditionRequest_AliasesEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[8];
}
void ParseConditionRequest_AliasesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParseConditionRequest_AliasesEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ParseConditionRequest_AliasesEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ric.code.ParseConditionRequest.AliasesEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ric.code.ParseConditionRequest.AliasesEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ParseConditionRequest::InitAsDefaultInstance() {
}
class ParseConditionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParseConditionRequest::kIdFieldNumber;
const int ParseConditionRequest::kCodeFieldNumber;
const int ParseConditionRequest::kAliasesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParseConditionRequest::ParseConditionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.ParseConditionRequest)
}
ParseConditionRequest::ParseConditionRequest(const ParseConditionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  aliases_.MergeFrom(from.aliases_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.code.ParseConditionRequest)
}

void ParseConditionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ParseConditionRequest_ric_2dcode_2friccode_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ParseConditionRequest::~ParseConditionRequest() {
  // @@protoc_insertion_point(destructor:ric.code.ParseConditionRequest)
  SharedDtor();
}

void ParseConditionRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParseConditionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParseConditionRequest& ParseConditionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParseConditionRequest_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void ParseConditionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.ParseConditionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aliases_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParseConditionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParseConditionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.ParseConditionRequest.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.ParseConditionRequest.code");
        object = msg->mutable_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> aliases = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->aliases_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParseConditionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.ParseConditionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.ParseConditionRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.ParseConditionRequest.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> aliases = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          ParseConditionRequest_AliasesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ParseConditionRequest_AliasesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&aliases_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.ParseConditionRequest.AliasesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.ParseConditionRequest.AliasesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.ParseConditionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.ParseConditionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParseConditionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.ParseConditionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.ParseConditionRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.ParseConditionRequest.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // map<string, string> aliases = 3;
  if (!this->aliases().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.code.ParseConditionRequest.AliasesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.code.ParseConditionRequest.AliasesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->aliases().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->aliases().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->aliases().begin();
          it != this->aliases().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ParseConditionRequest_AliasesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(aliases_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ParseConditionRequest_AliasesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->aliases().begin();
          it != this->aliases().end(); ++it) {
        entry.reset(aliases_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.ParseConditionRequest)
}

::google::protobuf::uint8* ParseConditionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.ParseConditionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.ParseConditionRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.ParseConditionRequest.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // map<string, string> aliases = 3;
  if (!this->aliases().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.code.ParseConditionRequest.AliasesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ric.code.ParseConditionRequest.AliasesEntry.value");
      }
    };

    if (false &&
        this->aliases().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->aliases().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->aliases().begin();
          it != this->aliases().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ParseConditionRequest_AliasesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(aliases_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ParseConditionRequest_AliasesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->aliases().begin();
          it != this->aliases().end(); ++it) {
        entry.reset(aliases_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.ParseConditionRequest)
  return target;
}

size_t ParseConditionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.ParseConditionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> aliases = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->aliases_size());
  {
    ::std::unique_ptr<ParseConditionRequest_AliasesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->aliases().begin();
        it != this->aliases().end(); ++it) {
      entry.reset(aliases_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParseConditionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.ParseConditionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseConditionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ParseConditionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.ParseConditionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.ParseConditionRequest)
    MergeFrom(*source);
  }
}

void ParseConditionRequest::MergeFrom(const ParseConditionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.ParseConditionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aliases_.MergeFrom(from.aliases_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void ParseConditionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.ParseConditionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseConditionRequest::CopyFrom(const ParseConditionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.ParseConditionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseConditionRequest::IsInitialized() const {
  return true;
}

void ParseConditionRequest::Swap(ParseConditionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParseConditionRequest::InternalSwap(ParseConditionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  aliases_.Swap(&other->aliases_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ParseConditionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ParseConditionResponse::InitAsDefaultInstance() {
}
class ParseConditionResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParseConditionResponse::kCompiledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParseConditionResponse::ParseConditionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.code.ParseConditionResponse)
}
ParseConditionResponse::ParseConditionResponse(const ParseConditionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  compiled_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.compiled().size() > 0) {
    compiled_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiled_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.code.ParseConditionResponse)
}

void ParseConditionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ParseConditionResponse_ric_2dcode_2friccode_2eproto.base);
  compiled_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ParseConditionResponse::~ParseConditionResponse() {
  // @@protoc_insertion_point(destructor:ric.code.ParseConditionResponse)
  SharedDtor();
}

void ParseConditionResponse::SharedDtor() {
  compiled_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParseConditionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParseConditionResponse& ParseConditionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParseConditionResponse_ric_2dcode_2friccode_2eproto.base);
  return *internal_default_instance();
}


void ParseConditionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.code.ParseConditionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compiled_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParseConditionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParseConditionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string compiled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.code.ParseConditionResponse.compiled");
        object = msg->mutable_compiled();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParseConditionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.code.ParseConditionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string compiled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compiled()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->compiled().data(), static_cast<int>(this->compiled().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.code.ParseConditionResponse.compiled"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.code.ParseConditionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.code.ParseConditionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParseConditionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.code.ParseConditionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string compiled = 1;
  if (this->compiled().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiled().data(), static_cast<int>(this->compiled().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.ParseConditionResponse.compiled");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->compiled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.code.ParseConditionResponse)
}

::google::protobuf::uint8* ParseConditionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.code.ParseConditionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string compiled = 1;
  if (this->compiled().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiled().data(), static_cast<int>(this->compiled().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.code.ParseConditionResponse.compiled");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->compiled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.code.ParseConditionResponse)
  return target;
}

size_t ParseConditionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.code.ParseConditionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string compiled = 1;
  if (this->compiled().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compiled());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParseConditionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.code.ParseConditionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseConditionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ParseConditionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.code.ParseConditionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.code.ParseConditionResponse)
    MergeFrom(*source);
  }
}

void ParseConditionResponse::MergeFrom(const ParseConditionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.code.ParseConditionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compiled().size() > 0) {

    compiled_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiled_);
  }
}

void ParseConditionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.code.ParseConditionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseConditionResponse::CopyFrom(const ParseConditionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.code.ParseConditionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseConditionResponse::IsInitialized() const {
  return true;
}

void ParseConditionResponse::Swap(ParseConditionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParseConditionResponse::InternalSwap(ParseConditionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  compiled_.Swap(&other->compiled_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ParseConditionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dcode_2friccode_2eproto);
  return ::file_level_metadata_ric_2dcode_2friccode_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace code
}  // namespace ric
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ric::code::TranspileRequest* Arena::CreateMaybeMessage< ::ric::code::TranspileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::TranspileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::TranspileResponse* Arena::CreateMaybeMessage< ::ric::code::TranspileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::TranspileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::InputRef* Arena::CreateMaybeMessage< ::ric::code::InputRef >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::InputRef >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::VarDecl* Arena::CreateMaybeMessage< ::ric::code::VarDecl >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::VarDecl >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::LibDefinition* Arena::CreateMaybeMessage< ::ric::code::LibDefinition >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::LibDefinition >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::LibRequest* Arena::CreateMaybeMessage< ::ric::code::LibRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::LibRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::BundleEsRequest* Arena::CreateMaybeMessage< ::ric::code::BundleEsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::BundleEsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::BundleEsProgress* Arena::CreateMaybeMessage< ::ric::code::BundleEsProgress >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::BundleEsProgress >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse* Arena::CreateMaybeMessage< ::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::ParseConditionRequest_AliasesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::ParseConditionRequest* Arena::CreateMaybeMessage< ::ric::code::ParseConditionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::ParseConditionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::code::ParseConditionResponse* Arena::CreateMaybeMessage< ::ric::code::ParseConditionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::code::ParseConditionResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
