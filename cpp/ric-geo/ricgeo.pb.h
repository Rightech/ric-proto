// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-geo/ricgeo.proto

#ifndef PROTOBUF_INCLUDED_ric_2dgeo_2fricgeo_2eproto
#define PROTOBUF_INCLUDED_ric_2dgeo_2fricgeo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ric_2dgeo_2fricgeo_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_ric_2dgeo_2fricgeo_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_ric_2dgeo_2fricgeo_2eproto();
namespace ric {
namespace geo {
class GetObjectInfoRequest;
class GetObjectInfoRequestDefaultTypeInternal;
extern GetObjectInfoRequestDefaultTypeInternal _GetObjectInfoRequest_default_instance_;
class GetObjectInfoResponse;
class GetObjectInfoResponseDefaultTypeInternal;
extern GetObjectInfoResponseDefaultTypeInternal _GetObjectInfoResponse_default_instance_;
class GetObjectInfoResponse_ObjectGeofenceInfo;
class GetObjectInfoResponse_ObjectGeofenceInfoDefaultTypeInternal;
extern GetObjectInfoResponse_ObjectGeofenceInfoDefaultTypeInternal _GetObjectInfoResponse_ObjectGeofenceInfo_default_instance_;
}  // namespace geo
}  // namespace ric
namespace google {
namespace protobuf {
template<> ::ric::geo::GetObjectInfoRequest* Arena::CreateMaybeMessage<::ric::geo::GetObjectInfoRequest>(Arena*);
template<> ::ric::geo::GetObjectInfoResponse* Arena::CreateMaybeMessage<::ric::geo::GetObjectInfoResponse>(Arena*);
template<> ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo* Arena::CreateMaybeMessage<::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ric {
namespace geo {

// ===================================================================

class GetObjectInfoRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.geo.GetObjectInfoRequest) */ {
 public:
  GetObjectInfoRequest();
  virtual ~GetObjectInfoRequest();

  GetObjectInfoRequest(const GetObjectInfoRequest& from);

  inline GetObjectInfoRequest& operator=(const GetObjectInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetObjectInfoRequest(GetObjectInfoRequest&& from) noexcept
    : GetObjectInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetObjectInfoRequest& operator=(GetObjectInfoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetObjectInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetObjectInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetObjectInfoRequest*>(
               &_GetObjectInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetObjectInfoRequest* other);
  friend void swap(GetObjectInfoRequest& a, GetObjectInfoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetObjectInfoRequest* New() const final {
    return CreateMaybeMessage<GetObjectInfoRequest>(nullptr);
  }

  GetObjectInfoRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetObjectInfoRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetObjectInfoRequest& from);
  void MergeFrom(const GetObjectInfoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetObjectInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // @@protoc_insertion_point(class_scope:ric.geo.GetObjectInfoRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dgeo_2fricgeo_2eproto;
};
// -------------------------------------------------------------------

class GetObjectInfoResponse_ObjectGeofenceInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo) */ {
 public:
  GetObjectInfoResponse_ObjectGeofenceInfo();
  virtual ~GetObjectInfoResponse_ObjectGeofenceInfo();

  GetObjectInfoResponse_ObjectGeofenceInfo(const GetObjectInfoResponse_ObjectGeofenceInfo& from);

  inline GetObjectInfoResponse_ObjectGeofenceInfo& operator=(const GetObjectInfoResponse_ObjectGeofenceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetObjectInfoResponse_ObjectGeofenceInfo(GetObjectInfoResponse_ObjectGeofenceInfo&& from) noexcept
    : GetObjectInfoResponse_ObjectGeofenceInfo() {
    *this = ::std::move(from);
  }

  inline GetObjectInfoResponse_ObjectGeofenceInfo& operator=(GetObjectInfoResponse_ObjectGeofenceInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetObjectInfoResponse_ObjectGeofenceInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetObjectInfoResponse_ObjectGeofenceInfo* internal_default_instance() {
    return reinterpret_cast<const GetObjectInfoResponse_ObjectGeofenceInfo*>(
               &_GetObjectInfoResponse_ObjectGeofenceInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetObjectInfoResponse_ObjectGeofenceInfo* other);
  friend void swap(GetObjectInfoResponse_ObjectGeofenceInfo& a, GetObjectInfoResponse_ObjectGeofenceInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetObjectInfoResponse_ObjectGeofenceInfo* New() const final {
    return CreateMaybeMessage<GetObjectInfoResponse_ObjectGeofenceInfo>(nullptr);
  }

  GetObjectInfoResponse_ObjectGeofenceInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetObjectInfoResponse_ObjectGeofenceInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetObjectInfoResponse_ObjectGeofenceInfo& from);
  void MergeFrom(const GetObjectInfoResponse_ObjectGeofenceInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetObjectInfoResponse_ObjectGeofenceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string geofence_id = 1;
  void clear_geofence_id();
  static const int kGeofenceIdFieldNumber = 1;
  const ::std::string& geofence_id() const;
  void set_geofence_id(const ::std::string& value);
  #if LANG_CXX11
  void set_geofence_id(::std::string&& value);
  #endif
  void set_geofence_id(const char* value);
  void set_geofence_id(const char* value, size_t size);
  ::std::string* mutable_geofence_id();
  ::std::string* release_geofence_id();
  void set_allocated_geofence_id(::std::string* geofence_id);

  // int64 last_packet_time = 3;
  void clear_last_packet_time();
  static const int kLastPacketTimeFieldNumber = 3;
  ::google::protobuf::int64 last_packet_time() const;
  void set_last_packet_time(::google::protobuf::int64 value);

  // int64 last_enter_time = 4;
  void clear_last_enter_time();
  static const int kLastEnterTimeFieldNumber = 4;
  ::google::protobuf::int64 last_enter_time() const;
  void set_last_enter_time(::google::protobuf::int64 value);

  // int64 last_leave_time = 5;
  void clear_last_leave_time();
  static const int kLastLeaveTimeFieldNumber = 5;
  ::google::protobuf::int64 last_leave_time() const;
  void set_last_leave_time(::google::protobuf::int64 value);

  // bool is_in = 2;
  void clear_is_in();
  static const int kIsInFieldNumber = 2;
  bool is_in() const;
  void set_is_in(bool value);

  // @@protoc_insertion_point(class_scope:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr geofence_id_;
  ::google::protobuf::int64 last_packet_time_;
  ::google::protobuf::int64 last_enter_time_;
  ::google::protobuf::int64 last_leave_time_;
  bool is_in_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dgeo_2fricgeo_2eproto;
};
// -------------------------------------------------------------------

class GetObjectInfoResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.geo.GetObjectInfoResponse) */ {
 public:
  GetObjectInfoResponse();
  virtual ~GetObjectInfoResponse();

  GetObjectInfoResponse(const GetObjectInfoResponse& from);

  inline GetObjectInfoResponse& operator=(const GetObjectInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetObjectInfoResponse(GetObjectInfoResponse&& from) noexcept
    : GetObjectInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetObjectInfoResponse& operator=(GetObjectInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetObjectInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetObjectInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetObjectInfoResponse*>(
               &_GetObjectInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetObjectInfoResponse* other);
  friend void swap(GetObjectInfoResponse& a, GetObjectInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetObjectInfoResponse* New() const final {
    return CreateMaybeMessage<GetObjectInfoResponse>(nullptr);
  }

  GetObjectInfoResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetObjectInfoResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetObjectInfoResponse& from);
  void MergeFrom(const GetObjectInfoResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetObjectInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetObjectInfoResponse_ObjectGeofenceInfo ObjectGeofenceInfo;

  // accessors -------------------------------------------------------

  // repeated .ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo geofences = 1;
  int geofences_size() const;
  void clear_geofences();
  static const int kGeofencesFieldNumber = 1;
  ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo* mutable_geofences(int index);
  ::google::protobuf::RepeatedPtrField< ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo >*
      mutable_geofences();
  const ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo& geofences(int index) const;
  ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo* add_geofences();
  const ::google::protobuf::RepeatedPtrField< ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo >&
      geofences() const;

  // @@protoc_insertion_point(class_scope:ric.geo.GetObjectInfoResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo > geofences_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dgeo_2fricgeo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetObjectInfoRequest

// string object_id = 1;
inline void GetObjectInfoRequest::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetObjectInfoRequest::object_id() const {
  // @@protoc_insertion_point(field_get:ric.geo.GetObjectInfoRequest.object_id)
  return object_id_.GetNoArena();
}
inline void GetObjectInfoRequest::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.geo.GetObjectInfoRequest.object_id)
}
#if LANG_CXX11
inline void GetObjectInfoRequest::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.geo.GetObjectInfoRequest.object_id)
}
#endif
inline void GetObjectInfoRequest::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.geo.GetObjectInfoRequest.object_id)
}
inline void GetObjectInfoRequest::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.geo.GetObjectInfoRequest.object_id)
}
inline ::std::string* GetObjectInfoRequest::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.geo.GetObjectInfoRequest.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetObjectInfoRequest::release_object_id() {
  // @@protoc_insertion_point(field_release:ric.geo.GetObjectInfoRequest.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetObjectInfoRequest::set_allocated_object_id(::std::string* object_id) {
  if (object_id != nullptr) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:ric.geo.GetObjectInfoRequest.object_id)
}

// -------------------------------------------------------------------

// GetObjectInfoResponse_ObjectGeofenceInfo

// string geofence_id = 1;
inline void GetObjectInfoResponse_ObjectGeofenceInfo::clear_geofence_id() {
  geofence_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetObjectInfoResponse_ObjectGeofenceInfo::geofence_id() const {
  // @@protoc_insertion_point(field_get:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.geofence_id)
  return geofence_id_.GetNoArena();
}
inline void GetObjectInfoResponse_ObjectGeofenceInfo::set_geofence_id(const ::std::string& value) {
  
  geofence_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.geofence_id)
}
#if LANG_CXX11
inline void GetObjectInfoResponse_ObjectGeofenceInfo::set_geofence_id(::std::string&& value) {
  
  geofence_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.geofence_id)
}
#endif
inline void GetObjectInfoResponse_ObjectGeofenceInfo::set_geofence_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  geofence_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.geofence_id)
}
inline void GetObjectInfoResponse_ObjectGeofenceInfo::set_geofence_id(const char* value, size_t size) {
  
  geofence_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.geofence_id)
}
inline ::std::string* GetObjectInfoResponse_ObjectGeofenceInfo::mutable_geofence_id() {
  
  // @@protoc_insertion_point(field_mutable:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.geofence_id)
  return geofence_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetObjectInfoResponse_ObjectGeofenceInfo::release_geofence_id() {
  // @@protoc_insertion_point(field_release:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.geofence_id)
  
  return geofence_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetObjectInfoResponse_ObjectGeofenceInfo::set_allocated_geofence_id(::std::string* geofence_id) {
  if (geofence_id != nullptr) {
    
  } else {
    
  }
  geofence_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), geofence_id);
  // @@protoc_insertion_point(field_set_allocated:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.geofence_id)
}

// bool is_in = 2;
inline void GetObjectInfoResponse_ObjectGeofenceInfo::clear_is_in() {
  is_in_ = false;
}
inline bool GetObjectInfoResponse_ObjectGeofenceInfo::is_in() const {
  // @@protoc_insertion_point(field_get:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.is_in)
  return is_in_;
}
inline void GetObjectInfoResponse_ObjectGeofenceInfo::set_is_in(bool value) {
  
  is_in_ = value;
  // @@protoc_insertion_point(field_set:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.is_in)
}

// int64 last_packet_time = 3;
inline void GetObjectInfoResponse_ObjectGeofenceInfo::clear_last_packet_time() {
  last_packet_time_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GetObjectInfoResponse_ObjectGeofenceInfo::last_packet_time() const {
  // @@protoc_insertion_point(field_get:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.last_packet_time)
  return last_packet_time_;
}
inline void GetObjectInfoResponse_ObjectGeofenceInfo::set_last_packet_time(::google::protobuf::int64 value) {
  
  last_packet_time_ = value;
  // @@protoc_insertion_point(field_set:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.last_packet_time)
}

// int64 last_enter_time = 4;
inline void GetObjectInfoResponse_ObjectGeofenceInfo::clear_last_enter_time() {
  last_enter_time_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GetObjectInfoResponse_ObjectGeofenceInfo::last_enter_time() const {
  // @@protoc_insertion_point(field_get:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.last_enter_time)
  return last_enter_time_;
}
inline void GetObjectInfoResponse_ObjectGeofenceInfo::set_last_enter_time(::google::protobuf::int64 value) {
  
  last_enter_time_ = value;
  // @@protoc_insertion_point(field_set:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.last_enter_time)
}

// int64 last_leave_time = 5;
inline void GetObjectInfoResponse_ObjectGeofenceInfo::clear_last_leave_time() {
  last_leave_time_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GetObjectInfoResponse_ObjectGeofenceInfo::last_leave_time() const {
  // @@protoc_insertion_point(field_get:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.last_leave_time)
  return last_leave_time_;
}
inline void GetObjectInfoResponse_ObjectGeofenceInfo::set_last_leave_time(::google::protobuf::int64 value) {
  
  last_leave_time_ = value;
  // @@protoc_insertion_point(field_set:ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo.last_leave_time)
}

// -------------------------------------------------------------------

// GetObjectInfoResponse

// repeated .ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo geofences = 1;
inline int GetObjectInfoResponse::geofences_size() const {
  return geofences_.size();
}
inline void GetObjectInfoResponse::clear_geofences() {
  geofences_.Clear();
}
inline ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo* GetObjectInfoResponse::mutable_geofences(int index) {
  // @@protoc_insertion_point(field_mutable:ric.geo.GetObjectInfoResponse.geofences)
  return geofences_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo >*
GetObjectInfoResponse::mutable_geofences() {
  // @@protoc_insertion_point(field_mutable_list:ric.geo.GetObjectInfoResponse.geofences)
  return &geofences_;
}
inline const ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo& GetObjectInfoResponse::geofences(int index) const {
  // @@protoc_insertion_point(field_get:ric.geo.GetObjectInfoResponse.geofences)
  return geofences_.Get(index);
}
inline ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo* GetObjectInfoResponse::add_geofences() {
  // @@protoc_insertion_point(field_add:ric.geo.GetObjectInfoResponse.geofences)
  return geofences_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ric::geo::GetObjectInfoResponse_ObjectGeofenceInfo >&
GetObjectInfoResponse::geofences() const {
  // @@protoc_insertion_point(field_list:ric.geo.GetObjectInfoResponse.geofences)
  return geofences_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace geo
}  // namespace ric

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_ric_2dgeo_2fricgeo_2eproto
