// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-action/ricaction.proto

#include "ric-action/ricaction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ric_2daction_2fricaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ContainerStatus_ric_2daction_2fricaction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2daction_2fricaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Context_ric_2daction_2fricaction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2daction_2fricaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Function_ric_2daction_2fricaction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2daction_2fricaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Options_ric_2daction_2fricaction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2daction_2fricaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Uint64_ric_2daction_2fricaction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2daction_2fricaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Pod_ric_2daction_2fricaction_2eproto;
namespace ric {
namespace action {
class CallRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallRequest> _instance;
} _CallRequest_default_instance_;
class ContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Context> _instance;
} _Context_default_instance_;
class ScaleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScaleRequest> _instance;
} _ScaleRequest_default_instance_;
class Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uint64> _instance;
} _Uint64_default_instance_;
class DeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRequest> _instance;
} _DeleteRequest_default_instance_;
class UpdateOrDeployRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateOrDeployRequest> _instance;
} _UpdateOrDeployRequest_default_instance_;
class FunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Function> _instance;
} _Function_default_instance_;
class OptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Options> _instance;
} _Options_default_instance_;
class UpdateOrDeployResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateOrDeployResponse> _instance;
} _UpdateOrDeployResponse_default_instance_;
class LogsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogsRequest> _instance;
} _LogsRequest_default_instance_;
class InfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoRequest> _instance;
} _InfoRequest_default_instance_;
class CallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallResponse> _instance;
} _CallResponse_default_instance_;
class EmptyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmptyResponse> _instance;
} _EmptyResponse_default_instance_;
class LogsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogsResponse> _instance;
} _LogsResponse_default_instance_;
class InfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoResponse> _instance;
} _InfoResponse_default_instance_;
class PodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pod> _instance;
} _Pod_default_instance_;
class ContainerStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatus> _instance;
} _ContainerStatus_default_instance_;
class HistoryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HistoryRequest> _instance;
} _HistoryRequest_default_instance_;
class HistoryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HistoryResponse> _instance;
} _HistoryResponse_default_instance_;
class EventRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventRequest> _instance;
} _EventRequest_default_instance_;
class LastStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LastStateRequest> _instance;
} _LastStateRequest_default_instance_;
class LastStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LastStateResponse> _instance;
} _LastStateResponse_default_instance_;
}  // namespace action
}  // namespace ric
static void InitDefaultsCallRequest_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_CallRequest_default_instance_;
    new (ptr) ::ric::action::CallRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::CallRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CallRequest_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCallRequest_ric_2daction_2fricaction_2eproto}, {
      &scc_info_Context_ric_2daction_2fricaction_2eproto.base,}};

static void InitDefaultsContext_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_Context_default_instance_;
    new (ptr) ::ric::action::Context();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::Context::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Context_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsContext_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsScaleRequest_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_ScaleRequest_default_instance_;
    new (ptr) ::ric::action::ScaleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::ScaleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScaleRequest_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScaleRequest_ric_2daction_2fricaction_2eproto}, {
      &scc_info_Uint64_ric_2daction_2fricaction_2eproto.base,}};

static void InitDefaultsUint64_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_Uint64_default_instance_;
    new (ptr) ::ric::action::Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Uint64_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUint64_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsDeleteRequest_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_DeleteRequest_default_instance_;
    new (ptr) ::ric::action::DeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::DeleteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteRequest_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteRequest_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsUpdateOrDeployRequest_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_UpdateOrDeployRequest_default_instance_;
    new (ptr) ::ric::action::UpdateOrDeployRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::UpdateOrDeployRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateOrDeployRequest_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateOrDeployRequest_ric_2daction_2fricaction_2eproto}, {
      &scc_info_Function_ric_2daction_2fricaction_2eproto.base,
      &scc_info_Options_ric_2daction_2fricaction_2eproto.base,}};

static void InitDefaultsFunction_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_Function_default_instance_;
    new (ptr) ::ric::action::Function();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::Function::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Function_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFunction_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsOptions_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_Options_default_instance_;
    new (ptr) ::ric::action::Options();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::Options::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Options_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptions_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsUpdateOrDeployResponse_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_UpdateOrDeployResponse_default_instance_;
    new (ptr) ::ric::action::UpdateOrDeployResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::UpdateOrDeployResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateOrDeployResponse_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateOrDeployResponse_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsLogsRequest_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_LogsRequest_default_instance_;
    new (ptr) ::ric::action::LogsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::LogsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogsRequest_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogsRequest_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsInfoRequest_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_InfoRequest_default_instance_;
    new (ptr) ::ric::action::InfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::InfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InfoRequest_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInfoRequest_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsCallResponse_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_CallResponse_default_instance_;
    new (ptr) ::ric::action::CallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::CallResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CallResponse_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCallResponse_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsEmptyResponse_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_EmptyResponse_default_instance_;
    new (ptr) ::ric::action::EmptyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::EmptyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmptyResponse_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmptyResponse_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsLogsResponse_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_LogsResponse_default_instance_;
    new (ptr) ::ric::action::LogsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::LogsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogsResponse_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogsResponse_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsInfoResponse_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_InfoResponse_default_instance_;
    new (ptr) ::ric::action::InfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::InfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InfoResponse_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInfoResponse_ric_2daction_2fricaction_2eproto}, {
      &scc_info_Pod_ric_2daction_2fricaction_2eproto.base,}};

static void InitDefaultsPod_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_Pod_default_instance_;
    new (ptr) ::ric::action::Pod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::Pod::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Pod_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPod_ric_2daction_2fricaction_2eproto}, {
      &scc_info_ContainerStatus_ric_2daction_2fricaction_2eproto.base,}};

static void InitDefaultsContainerStatus_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_ContainerStatus_default_instance_;
    new (ptr) ::ric::action::ContainerStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::ContainerStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ContainerStatus_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsContainerStatus_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsHistoryRequest_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_HistoryRequest_default_instance_;
    new (ptr) ::ric::action::HistoryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::HistoryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HistoryRequest_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHistoryRequest_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsHistoryResponse_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_HistoryResponse_default_instance_;
    new (ptr) ::ric::action::HistoryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::HistoryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HistoryResponse_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHistoryResponse_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsEventRequest_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_EventRequest_default_instance_;
    new (ptr) ::ric::action::EventRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::EventRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EventRequest_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEventRequest_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsLastStateRequest_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_LastStateRequest_default_instance_;
    new (ptr) ::ric::action::LastStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::LastStateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LastStateRequest_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLastStateRequest_ric_2daction_2fricaction_2eproto}, {}};

static void InitDefaultsLastStateResponse_ric_2daction_2fricaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::action::_LastStateResponse_default_instance_;
    new (ptr) ::ric::action::LastStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::action::LastStateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LastStateResponse_ric_2daction_2fricaction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLastStateResponse_ric_2daction_2fricaction_2eproto}, {}};

void InitDefaults_ric_2daction_2fricaction_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CallRequest_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Context_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScaleRequest_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Uint64_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRequest_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateOrDeployRequest_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Function_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Options_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateOrDeployResponse_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogsRequest_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InfoRequest_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CallResponse_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmptyResponse_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogsResponse_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InfoResponse_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pod_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ContainerStatus_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HistoryRequest_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HistoryResponse_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventRequest_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LastStateRequest_ric_2daction_2fricaction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LastStateResponse_ric_2daction_2fricaction_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ric_2daction_2fricaction_2eproto[22];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ric_2daction_2fricaction_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ric_2daction_2fricaction_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ric_2daction_2fricaction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::CallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::CallRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ric::action::CallRequest, data_),
  PROTOBUF_FIELD_OFFSET(::ric::action::CallRequest, content_type_),
  PROTOBUF_FIELD_OFFSET(::ric::action::CallRequest, ctx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::Context, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::Context, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Context, group_id_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Context, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::ScaleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::ScaleRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ric::action::ScaleRequest, replicas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::Uint64, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::DeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::DeleteRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::UpdateOrDeployRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::UpdateOrDeployRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ric::action::UpdateOrDeployRequest, func_),
  PROTOBUF_FIELD_OFFSET(::ric::action::UpdateOrDeployRequest, opt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, handler_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, body_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, deps_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, runtime_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, runtime_image_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, mem_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, cpu_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, timeout_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, image_pull_policy_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, schedule_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, port_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, service_port_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, headless_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, envs_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, labels_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Function, secrets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::Options, secrets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::UpdateOrDeployResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::UpdateOrDeployResponse, generation_),
  PROTOBUF_FIELD_OFFSET(::ric::action::UpdateOrDeployResponse, resource_version_),
  PROTOBUF_FIELD_OFFSET(::ric::action::UpdateOrDeployResponse, checksum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::LogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::LogsRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ric::action::LogsRequest, pod_name_),
  PROTOBUF_FIELD_OFFSET(::ric::action::LogsRequest, follow_),
  PROTOBUF_FIELD_OFFSET(::ric::action::LogsRequest, tail_lines_),
  PROTOBUF_FIELD_OFFSET(::ric::action::LogsRequest, filter_by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::InfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::InfoRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::CallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::CallResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::EmptyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::LogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::LogsResponse, line_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::InfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::InfoResponse, pods_),
  PROTOBUF_FIELD_OFFSET(::ric::action::InfoResponse, runtime_),
  PROTOBUF_FIELD_OFFSET(::ric::action::InfoResponse, deps_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::Pod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::Pod, name_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Pod, creation_timestamp_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Pod, phase_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Pod, start_time_),
  PROTOBUF_FIELD_OFFSET(::ric::action::Pod, container_statuses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::ContainerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::ContainerStatus, ready_),
  PROTOBUF_FIELD_OFFSET(::ric::action::ContainerStatus, restart_count_),
  PROTOBUF_FIELD_OFFSET(::ric::action::ContainerStatus, state_),
  PROTOBUF_FIELD_OFFSET(::ric::action::ContainerStatus, last_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::HistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::HistoryRequest, oid_),
  PROTOBUF_FIELD_OFFSET(::ric::action::HistoryRequest, db_),
  PROTOBUF_FIELD_OFFSET(::ric::action::HistoryRequest, size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::HistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::HistoryResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::EventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::EventRequest, oid_),
  PROTOBUF_FIELD_OFFSET(::ric::action::EventRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ric::action::EventRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::LastStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::LastStateRequest, oid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::action::LastStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::action::LastStateResponse, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ric::action::CallRequest)},
  { 9, -1, sizeof(::ric::action::Context)},
  { 17, -1, sizeof(::ric::action::ScaleRequest)},
  { 24, -1, sizeof(::ric::action::Uint64)},
  { 30, -1, sizeof(::ric::action::DeleteRequest)},
  { 36, -1, sizeof(::ric::action::UpdateOrDeployRequest)},
  { 44, -1, sizeof(::ric::action::Function)},
  { 65, -1, sizeof(::ric::action::Options)},
  { 71, -1, sizeof(::ric::action::UpdateOrDeployResponse)},
  { 79, -1, sizeof(::ric::action::LogsRequest)},
  { 89, -1, sizeof(::ric::action::InfoRequest)},
  { 95, -1, sizeof(::ric::action::CallResponse)},
  { 101, -1, sizeof(::ric::action::EmptyResponse)},
  { 106, -1, sizeof(::ric::action::LogsResponse)},
  { 112, -1, sizeof(::ric::action::InfoResponse)},
  { 120, -1, sizeof(::ric::action::Pod)},
  { 130, -1, sizeof(::ric::action::ContainerStatus)},
  { 139, -1, sizeof(::ric::action::HistoryRequest)},
  { 147, -1, sizeof(::ric::action::HistoryResponse)},
  { 153, -1, sizeof(::ric::action::EventRequest)},
  { 161, -1, sizeof(::ric::action::LastStateRequest)},
  { 167, -1, sizeof(::ric::action::LastStateResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_CallRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_Context_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_ScaleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_DeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_UpdateOrDeployRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_Function_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_Options_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_UpdateOrDeployResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_LogsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_InfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_CallResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_EmptyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_LogsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_InfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_Pod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_ContainerStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_HistoryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_HistoryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_EventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_LastStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::action::_LastStateResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ric_2daction_2fricaction_2eproto = {
  {}, AddDescriptors_ric_2daction_2fricaction_2eproto, "ric-action/ricaction.proto", schemas,
  file_default_instances, TableStruct_ric_2daction_2fricaction_2eproto::offsets,
  file_level_metadata_ric_2daction_2fricaction_2eproto, 22, file_level_enum_descriptors_ric_2daction_2fricaction_2eproto, file_level_service_descriptors_ric_2daction_2fricaction_2eproto,
};

const char descriptor_table_protodef_ric_2daction_2fricaction_2eproto[] =
  "\n\032ric-action/ricaction.proto\022\nric.action"
  "\"a\n\013CallRequest\022\014\n\004name\030\001 \001(\t\022\014\n\004data\030\002 "
  "\001(\014\022\024\n\014content_type\030\003 \001(\t\022 \n\003ctx\030\004 \001(\0132\023"
  ".ric.action.Context\"\?\n\007Context\022\021\n\tobject"
  "_id\030\001 \001(\t\022\020\n\010group_id\030\002 \001(\t\022\017\n\007user_id\030\003"
  " \001(\t\"B\n\014ScaleRequest\022\014\n\004name\030\001 \001(\t\022$\n\010re"
  "plicas\030\002 \001(\0132\022.ric.action.Uint64\"\027\n\006Uint"
  "64\022\r\n\005value\030\001 \001(\004\"\035\n\rDeleteRequest\022\014\n\004na"
  "me\030\001 \001(\t\"k\n\025UpdateOrDeployRequest\022\014\n\004nam"
  "e\030\001 \001(\t\022\"\n\004func\030\002 \001(\0132\024.ric.action.Funct"
  "ion\022 \n\003opt\030\003 \001(\0132\023.ric.action.Options\"\234\002"
  "\n\010Function\022\017\n\007handler\030\001 \001(\t\022\014\n\004body\030\002 \001("
  "\t\022\014\n\004deps\030\003 \001(\t\022\017\n\007runtime\030\004 \001(\t\022\025\n\rrunt"
  "ime_image\030\005 \001(\t\022\013\n\003mem\030\006 \001(\t\022\013\n\003cpu\030\007 \001("
  "\t\022\017\n\007timeout\030\010 \001(\t\022\031\n\021image_pull_policy\030"
  "\t \001(\t\022\020\n\010schedule\030\n \001(\t\022\014\n\004port\030\013 \001(\005\022\024\n"
  "\014service_port\030\014 \001(\005\022\020\n\010headless\030\r \001(\010\022\014\n"
  "\004envs\030\016 \003(\t\022\016\n\006labels\030\017 \003(\t\022\017\n\007secrets\030\020"
  " \003(\t\"\032\n\007Options\022\017\n\007secrets\030\001 \003(\t\"X\n\026Upda"
  "teOrDeployResponse\022\022\n\ngeneration\030\001 \001(\003\022\030"
  "\n\020resource_version\030\002 \001(\t\022\020\n\010checksum\030\003 \001"
  "(\t\"d\n\013LogsRequest\022\014\n\004name\030\001 \001(\t\022\020\n\010pod_n"
  "ame\030\002 \001(\t\022\016\n\006follow\030\003 \001(\010\022\022\n\ntail_lines\030"
  "\004 \001(\003\022\021\n\tfilter_by\030\005 \001(\t\"\033\n\013InfoRequest\022"
  "\014\n\004name\030\001 \001(\t\"\034\n\014CallResponse\022\014\n\004data\030\001 "
  "\001(\014\"\017\n\rEmptyResponse\"\034\n\014LogsResponse\022\014\n\004"
  "line\030\001 \001(\t\"L\n\014InfoResponse\022\035\n\004pods\030\001 \003(\013"
  "2\017.ric.action.Pod\022\017\n\007runtime\030\002 \001(\t\022\014\n\004de"
  "ps\030\003 \001(\t\"\213\001\n\003Pod\022\014\n\004name\030\001 \001(\t\022\032\n\022creati"
  "on_timestamp\030\002 \001(\t\022\r\n\005phase\030\003 \001(\t\022\022\n\nsta"
  "rt_time\030\004 \001(\t\0227\n\022container_statuses\030\005 \003("
  "\0132\033.ric.action.ContainerStatus\"Z\n\017Contai"
  "nerStatus\022\r\n\005ready\030\001 \001(\010\022\025\n\rrestart_coun"
  "t\030\002 \001(\005\022\r\n\005state\030\003 \001(\t\022\022\n\nlast_state\030\004 \001"
  "(\t\"7\n\016HistoryRequest\022\013\n\003oid\030\001 \001(\t\022\n\n\002db\030"
  "\002 \001(\t\022\014\n\004size\030\003 \001(\003\"\037\n\017HistoryResponse\022\014"
  "\n\004data\030\001 \001(\014\"7\n\014EventRequest\022\013\n\003oid\030\001 \001("
  "\t\022\014\n\004name\030\002 \001(\t\022\014\n\004data\030\003 \001(\014\"\037\n\020LastSta"
  "teRequest\022\013\n\003oid\030\001 \001(\t\"!\n\021LastStateRespo"
  "nse\022\014\n\004data\030\001 \001(\0142\233\003\n\017FunctionControl\0229\n"
  "\004Call\022\027.ric.action.CallRequest\032\030.ric.act"
  "ion.CallResponse\022<\n\005Scale\022\030.ric.action.S"
  "caleRequest\032\031.ric.action.EmptyResponse\022>"
  "\n\006Delete\022\031.ric.action.DeleteRequest\032\031.ri"
  "c.action.EmptyResponse\022W\n\016UpdateOrDeploy"
  "\022!.ric.action.UpdateOrDeployRequest\032\".ri"
  "c.action.UpdateOrDeployResponse\022;\n\004Logs\022"
  "\027.ric.action.LogsRequest\032\030.ric.action.Lo"
  "gsResponse0\001\0229\n\004Info\022\027.ric.action.InfoRe"
  "quest\032\030.ric.action.InfoResponse2\335\001\n\tPubl"
  "icAPI\022D\n\007History\022\032.ric.action.HistoryReq"
  "uest\032\033.ric.action.HistoryResponse0\001\022H\n\tL"
  "astState\022\034.ric.action.LastStateRequest\032\035"
  ".ric.action.LastStateResponse\022@\n\tSendEve"
  "nt\022\030.ric.action.EventRequest\032\031.ric.actio"
  "n.EmptyResponseB\030Z\026./ric-action;ricactio"
  "nb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ric_2daction_2fricaction_2eproto = {
  false, InitDefaults_ric_2daction_2fricaction_2eproto, 
  descriptor_table_protodef_ric_2daction_2fricaction_2eproto,
  "ric-action/ricaction.proto", &assign_descriptors_table_ric_2daction_2fricaction_2eproto, 2249,
};

void AddDescriptors_ric_2daction_2fricaction_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ric_2daction_2fricaction_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ric_2daction_2fricaction_2eproto = []() { AddDescriptors_ric_2daction_2fricaction_2eproto(); return true; }();
namespace ric {
namespace action {

// ===================================================================

void CallRequest::InitAsDefaultInstance() {
  ::ric::action::_CallRequest_default_instance_._instance.get_mutable()->ctx_ = const_cast< ::ric::action::Context*>(
      ::ric::action::Context::internal_default_instance());
}
class CallRequest::HasBitSetters {
 public:
  static const ::ric::action::Context& ctx(const CallRequest* msg);
};

const ::ric::action::Context&
CallRequest::HasBitSetters::ctx(const CallRequest* msg) {
  return *msg->ctx_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallRequest::kNameFieldNumber;
const int CallRequest::kDataFieldNumber;
const int CallRequest::kContentTypeFieldNumber;
const int CallRequest::kCtxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallRequest::CallRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.CallRequest)
}
CallRequest::CallRequest(const CallRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  content_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content_type().size() > 0) {
    content_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_type_);
  }
  if (from.has_ctx()) {
    ctx_ = new ::ric::action::Context(*from.ctx_);
  } else {
    ctx_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.CallRequest)
}

void CallRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CallRequest_ric_2daction_2fricaction_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ctx_ = nullptr;
}

CallRequest::~CallRequest() {
  // @@protoc_insertion_point(destructor:ric.action.CallRequest)
  SharedDtor();
}

void CallRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ctx_;
}

void CallRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CallRequest& CallRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CallRequest_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void CallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && ctx_ != nullptr) {
    delete ctx_;
  }
  ctx_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CallRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CallRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.CallRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string content_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.CallRequest.content_type");
        object = msg->mutable_content_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ric.action.Context ctx = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::action::Context::_InternalParse;
        object = msg->mutable_ctx();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.CallRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.CallRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content_type().data(), static_cast<int>(this->content_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.CallRequest.content_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.action.Context ctx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ctx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.CallRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.CallRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.CallRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // string content_type = 3;
  if (this->content_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content_type().data(), static_cast<int>(this->content_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.CallRequest.content_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->content_type(), output);
  }

  // .ric.action.Context ctx = 4;
  if (this->has_ctx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::ctx(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.CallRequest)
}

::google::protobuf::uint8* CallRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.CallRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // string content_type = 3;
  if (this->content_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content_type().data(), static_cast<int>(this->content_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.CallRequest.content_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content_type(), target);
  }

  // .ric.action.Context ctx = 4;
  if (this->has_ctx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::ctx(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.CallRequest)
  return target;
}

size_t CallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.CallRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string content_type = 3;
  if (this->content_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content_type());
  }

  // .ric.action.Context ctx = 4;
  if (this->has_ctx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ctx_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CallRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CallRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.CallRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.CallRequest)
    MergeFrom(*source);
  }
}

void CallRequest::MergeFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.content_type().size() > 0) {

    content_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_type_);
  }
  if (from.has_ctx()) {
    mutable_ctx()->::ric::action::Context::MergeFrom(from.ctx());
  }
}

void CallRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallRequest::CopyFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallRequest::IsInitialized() const {
  return true;
}

void CallRequest::Swap(CallRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallRequest::InternalSwap(CallRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_type_.Swap(&other->content_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ctx_, other->ctx_);
}

::google::protobuf::Metadata CallRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Context::InitAsDefaultInstance() {
}
class Context::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Context::kObjectIdFieldNumber;
const int Context::kGroupIdFieldNumber;
const int Context::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Context::Context()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.Context)
}
Context::Context(const Context& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_id().size() > 0) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.Context)
}

void Context::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Context_ric_2daction_2fricaction_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Context::~Context() {
  // @@protoc_insertion_point(destructor:ric.action.Context)
  SharedDtor();
}

void Context::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Context::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Context& Context::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Context_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void Context::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Context::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Context*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Context.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string group_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Context.group_id");
        object = msg->mutable_group_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Context.user_id");
        object = msg->mutable_user_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Context::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.Context)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Context.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Context.group_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Context.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.Context)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.Context)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Context::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Context.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Context.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  // string user_id = 3;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Context.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.Context)
}

::google::protobuf::uint8* Context::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Context.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Context.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  // string user_id = 3;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Context.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.Context)
  return target;
}

size_t Context::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.Context)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // string group_id = 2;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  // string user_id = 3;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Context::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.Context)
  GOOGLE_DCHECK_NE(&from, this);
  const Context* source =
      ::google::protobuf::DynamicCastToGenerated<Context>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.Context)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.Context)
    MergeFrom(*source);
  }
}

void Context::MergeFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.Context)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.group_id().size() > 0) {

    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void Context::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Context::CopyFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Context::IsInitialized() const {
  return true;
}

void Context::Swap(Context* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Context::InternalSwap(Context* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_id_.Swap(&other->group_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Context::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ScaleRequest::InitAsDefaultInstance() {
  ::ric::action::_ScaleRequest_default_instance_._instance.get_mutable()->replicas_ = const_cast< ::ric::action::Uint64*>(
      ::ric::action::Uint64::internal_default_instance());
}
class ScaleRequest::HasBitSetters {
 public:
  static const ::ric::action::Uint64& replicas(const ScaleRequest* msg);
};

const ::ric::action::Uint64&
ScaleRequest::HasBitSetters::replicas(const ScaleRequest* msg) {
  return *msg->replicas_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScaleRequest::kNameFieldNumber;
const int ScaleRequest::kReplicasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScaleRequest::ScaleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.ScaleRequest)
}
ScaleRequest::ScaleRequest(const ScaleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_replicas()) {
    replicas_ = new ::ric::action::Uint64(*from.replicas_);
  } else {
    replicas_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.ScaleRequest)
}

void ScaleRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ScaleRequest_ric_2daction_2fricaction_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replicas_ = nullptr;
}

ScaleRequest::~ScaleRequest() {
  // @@protoc_insertion_point(destructor:ric.action.ScaleRequest)
  SharedDtor();
}

void ScaleRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete replicas_;
}

void ScaleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScaleRequest& ScaleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ScaleRequest_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void ScaleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.ScaleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && replicas_ != nullptr) {
    delete replicas_;
  }
  replicas_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ScaleRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ScaleRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.ScaleRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ric.action.Uint64 replicas = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::action::Uint64::_InternalParse;
        object = msg->mutable_replicas();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ScaleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.ScaleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.ScaleRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.action.Uint64 replicas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_replicas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.ScaleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.ScaleRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ScaleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.ScaleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.ScaleRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .ric.action.Uint64 replicas = 2;
  if (this->has_replicas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::replicas(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.ScaleRequest)
}

::google::protobuf::uint8* ScaleRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.ScaleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.ScaleRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .ric.action.Uint64 replicas = 2;
  if (this->has_replicas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::replicas(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.ScaleRequest)
  return target;
}

size_t ScaleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.ScaleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .ric.action.Uint64 replicas = 2;
  if (this->has_replicas()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *replicas_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScaleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.ScaleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScaleRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ScaleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.ScaleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.ScaleRequest)
    MergeFrom(*source);
  }
}

void ScaleRequest::MergeFrom(const ScaleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.ScaleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_replicas()) {
    mutable_replicas()->::ric::action::Uint64::MergeFrom(from.replicas());
  }
}

void ScaleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.ScaleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScaleRequest::CopyFrom(const ScaleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.ScaleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScaleRequest::IsInitialized() const {
  return true;
}

void ScaleRequest::Swap(ScaleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScaleRequest::InternalSwap(ScaleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(replicas_, other->replicas_);
}

::google::protobuf::Metadata ScaleRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Uint64::InitAsDefaultInstance() {
}
class Uint64::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint64::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint64::Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.Uint64)
}
Uint64::Uint64(const Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ric.action.Uint64)
}

void Uint64::SharedCtor() {
  value_ = PROTOBUF_ULONGLONG(0);
}

Uint64::~Uint64() {
  // @@protoc_insertion_point(destructor:ric.action.Uint64)
  SharedDtor();
}

void Uint64::SharedDtor() {
}

void Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Uint64& Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Uint64_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Uint64::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Uint64*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.Uint64)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.Uint64)
}

::google::protobuf::uint8* Uint64::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.Uint64)
  return target;
}

size_t Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.Uint64)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint64* source =
      ::google::protobuf::DynamicCastToGenerated<Uint64>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.Uint64)
    MergeFrom(*source);
  }
}

void Uint64::MergeFrom(const Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint64::CopyFrom(const Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint64::IsInitialized() const {
  return true;
}

void Uint64::Swap(Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint64::InternalSwap(Uint64* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Uint64::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteRequest::InitAsDefaultInstance() {
}
class DeleteRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRequest::DeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.DeleteRequest)
}
DeleteRequest::DeleteRequest(const DeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.DeleteRequest)
}

void DeleteRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeleteRequest_ric_2daction_2fricaction_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteRequest::~DeleteRequest() {
  // @@protoc_insertion_point(destructor:ric.action.DeleteRequest)
  SharedDtor();
}

void DeleteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRequest& DeleteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteRequest_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.DeleteRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.DeleteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.DeleteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.DeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.DeleteRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.DeleteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.DeleteRequest)
}

::google::protobuf::uint8* DeleteRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.DeleteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.DeleteRequest)
  return target;
}

size_t DeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.DeleteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.DeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.DeleteRequest)
    MergeFrom(*source);
  }
}

void DeleteRequest::MergeFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequest::CopyFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequest::IsInitialized() const {
  return true;
}

void DeleteRequest::Swap(DeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRequest::InternalSwap(DeleteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeleteRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateOrDeployRequest::InitAsDefaultInstance() {
  ::ric::action::_UpdateOrDeployRequest_default_instance_._instance.get_mutable()->func_ = const_cast< ::ric::action::Function*>(
      ::ric::action::Function::internal_default_instance());
  ::ric::action::_UpdateOrDeployRequest_default_instance_._instance.get_mutable()->opt_ = const_cast< ::ric::action::Options*>(
      ::ric::action::Options::internal_default_instance());
}
class UpdateOrDeployRequest::HasBitSetters {
 public:
  static const ::ric::action::Function& func(const UpdateOrDeployRequest* msg);
  static const ::ric::action::Options& opt(const UpdateOrDeployRequest* msg);
};

const ::ric::action::Function&
UpdateOrDeployRequest::HasBitSetters::func(const UpdateOrDeployRequest* msg) {
  return *msg->func_;
}
const ::ric::action::Options&
UpdateOrDeployRequest::HasBitSetters::opt(const UpdateOrDeployRequest* msg) {
  return *msg->opt_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateOrDeployRequest::kNameFieldNumber;
const int UpdateOrDeployRequest::kFuncFieldNumber;
const int UpdateOrDeployRequest::kOptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateOrDeployRequest::UpdateOrDeployRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.UpdateOrDeployRequest)
}
UpdateOrDeployRequest::UpdateOrDeployRequest(const UpdateOrDeployRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_func()) {
    func_ = new ::ric::action::Function(*from.func_);
  } else {
    func_ = nullptr;
  }
  if (from.has_opt()) {
    opt_ = new ::ric::action::Options(*from.opt_);
  } else {
    opt_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.UpdateOrDeployRequest)
}

void UpdateOrDeployRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateOrDeployRequest_ric_2daction_2fricaction_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&func_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opt_) -
      reinterpret_cast<char*>(&func_)) + sizeof(opt_));
}

UpdateOrDeployRequest::~UpdateOrDeployRequest() {
  // @@protoc_insertion_point(destructor:ric.action.UpdateOrDeployRequest)
  SharedDtor();
}

void UpdateOrDeployRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete func_;
  if (this != internal_default_instance()) delete opt_;
}

void UpdateOrDeployRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateOrDeployRequest& UpdateOrDeployRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateOrDeployRequest_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void UpdateOrDeployRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.UpdateOrDeployRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && func_ != nullptr) {
    delete func_;
  }
  func_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && opt_ != nullptr) {
    delete opt_;
  }
  opt_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateOrDeployRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateOrDeployRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.UpdateOrDeployRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ric.action.Function func = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::action::Function::_InternalParse;
        object = msg->mutable_func();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .ric.action.Options opt = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::action::Options::_InternalParse;
        object = msg->mutable_opt();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateOrDeployRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.UpdateOrDeployRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.UpdateOrDeployRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.action.Function func = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_func()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.action.Options opt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.UpdateOrDeployRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.UpdateOrDeployRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateOrDeployRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.UpdateOrDeployRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.UpdateOrDeployRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .ric.action.Function func = 2;
  if (this->has_func()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::func(this), output);
  }

  // .ric.action.Options opt = 3;
  if (this->has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::opt(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.UpdateOrDeployRequest)
}

::google::protobuf::uint8* UpdateOrDeployRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.UpdateOrDeployRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.UpdateOrDeployRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .ric.action.Function func = 2;
  if (this->has_func()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::func(this), target);
  }

  // .ric.action.Options opt = 3;
  if (this->has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::opt(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.UpdateOrDeployRequest)
  return target;
}

size_t UpdateOrDeployRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.UpdateOrDeployRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .ric.action.Function func = 2;
  if (this->has_func()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *func_);
  }

  // .ric.action.Options opt = 3;
  if (this->has_opt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opt_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOrDeployRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.UpdateOrDeployRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOrDeployRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateOrDeployRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.UpdateOrDeployRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.UpdateOrDeployRequest)
    MergeFrom(*source);
  }
}

void UpdateOrDeployRequest::MergeFrom(const UpdateOrDeployRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.UpdateOrDeployRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_func()) {
    mutable_func()->::ric::action::Function::MergeFrom(from.func());
  }
  if (from.has_opt()) {
    mutable_opt()->::ric::action::Options::MergeFrom(from.opt());
  }
}

void UpdateOrDeployRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.UpdateOrDeployRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOrDeployRequest::CopyFrom(const UpdateOrDeployRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.UpdateOrDeployRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrDeployRequest::IsInitialized() const {
  return true;
}

void UpdateOrDeployRequest::Swap(UpdateOrDeployRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateOrDeployRequest::InternalSwap(UpdateOrDeployRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(func_, other->func_);
  swap(opt_, other->opt_);
}

::google::protobuf::Metadata UpdateOrDeployRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Function::InitAsDefaultInstance() {
}
class Function::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Function::kHandlerFieldNumber;
const int Function::kBodyFieldNumber;
const int Function::kDepsFieldNumber;
const int Function::kRuntimeFieldNumber;
const int Function::kRuntimeImageFieldNumber;
const int Function::kMemFieldNumber;
const int Function::kCpuFieldNumber;
const int Function::kTimeoutFieldNumber;
const int Function::kImagePullPolicyFieldNumber;
const int Function::kScheduleFieldNumber;
const int Function::kPortFieldNumber;
const int Function::kServicePortFieldNumber;
const int Function::kHeadlessFieldNumber;
const int Function::kEnvsFieldNumber;
const int Function::kLabelsFieldNumber;
const int Function::kSecretsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Function::Function()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.Function)
}
Function::Function(const Function& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      envs_(from.envs_),
      labels_(from.labels_),
      secrets_(from.secrets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handler().size() > 0) {
    handler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handler_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  deps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deps().size() > 0) {
    deps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deps_);
  }
  runtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.runtime().size() > 0) {
    runtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_);
  }
  runtime_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.runtime_image().size() > 0) {
    runtime_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_image_);
  }
  mem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mem().size() > 0) {
    mem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mem_);
  }
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpu().size() > 0) {
    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  timeout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timeout().size() > 0) {
    timeout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timeout_);
  }
  image_pull_policy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_pull_policy().size() > 0) {
    image_pull_policy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_pull_policy_);
  }
  schedule_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.schedule().size() > 0) {
    schedule_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schedule_);
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&headless_) -
    reinterpret_cast<char*>(&port_)) + sizeof(headless_));
  // @@protoc_insertion_point(copy_constructor:ric.action.Function)
}

void Function::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Function_ric_2daction_2fricaction_2eproto.base);
  handler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_pull_policy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schedule_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&headless_) -
      reinterpret_cast<char*>(&port_)) + sizeof(headless_));
}

Function::~Function() {
  // @@protoc_insertion_point(destructor:ric.action.Function)
  SharedDtor();
}

void Function::SharedDtor() {
  handler_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deps_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_pull_policy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schedule_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Function::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Function& Function::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Function_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void Function::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.Function)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  envs_.Clear();
  labels_.Clear();
  secrets_.Clear();
  handler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_pull_policy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schedule_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&headless_) -
      reinterpret_cast<char*>(&port_)) + sizeof(headless_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Function::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Function*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string handler = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.handler");
        object = msg->mutable_handler();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string body = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.body");
        object = msg->mutable_body();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string deps = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.deps");
        object = msg->mutable_deps();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string runtime = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.runtime");
        object = msg->mutable_runtime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string runtime_image = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.runtime_image");
        object = msg->mutable_runtime_image();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string mem = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.mem");
        object = msg->mutable_mem();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cpu = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.cpu");
        object = msg->mutable_cpu();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string timeout = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.timeout");
        object = msg->mutable_timeout();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string image_pull_policy = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.image_pull_policy");
        object = msg->mutable_image_pull_policy();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string schedule = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Function.schedule");
        object = msg->mutable_schedule();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 port = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 service_port = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_service_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool headless = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_headless(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string envs = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ric.action.Function.envs");
          object = msg->add_envs();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 114 && (ptr += 1));
        break;
      }
      // repeated string labels = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ric.action.Function.labels");
          object = msg->add_labels();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 122 && (ptr += 1));
        break;
      }
      // repeated string secrets = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ric.action.Function.secrets");
          object = msg->add_secrets();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 386 && (ptr += 2));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Function::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.Function)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string handler = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handler()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handler().data(), static_cast<int>(this->handler().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.handler"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->body().data(), static_cast<int>(this->body().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deps()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deps().data(), static_cast<int>(this->deps().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.deps"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string runtime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->runtime().data(), static_cast<int>(this->runtime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.runtime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string runtime_image = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runtime_image()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->runtime_image().data(), static_cast<int>(this->runtime_image().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.runtime_image"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mem = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mem()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mem().data(), static_cast<int>(this->mem().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.mem"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cpu = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpu().data(), static_cast<int>(this->cpu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.cpu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timeout = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timeout()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timeout().data(), static_cast<int>(this->timeout().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.timeout"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_pull_policy = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_pull_policy()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_pull_policy().data(), static_cast<int>(this->image_pull_policy().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.image_pull_policy"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string schedule = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schedule()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->schedule().data(), static_cast<int>(this->schedule().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.schedule"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 service_port = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &service_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool headless = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &headless_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string envs = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_envs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->envs(this->envs_size() - 1).data(),
            static_cast<int>(this->envs(this->envs_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.envs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string labels = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_labels()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->labels(this->labels_size() - 1).data(),
            static_cast<int>(this->labels(this->labels_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.labels"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string secrets = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_secrets()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secrets(this->secrets_size() - 1).data(),
            static_cast<int>(this->secrets(this->secrets_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Function.secrets"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.Function)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.Function)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Function::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.Function)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handler = 1;
  if (this->handler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handler().data(), static_cast<int>(this->handler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.handler");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->handler(), output);
  }

  // string body = 2;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->body(), output);
  }

  // string deps = 3;
  if (this->deps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deps().data(), static_cast<int>(this->deps().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.deps");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->deps(), output);
  }

  // string runtime = 4;
  if (this->runtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime().data(), static_cast<int>(this->runtime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.runtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->runtime(), output);
  }

  // string runtime_image = 5;
  if (this->runtime_image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_image().data(), static_cast<int>(this->runtime_image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.runtime_image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->runtime_image(), output);
  }

  // string mem = 6;
  if (this->mem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mem().data(), static_cast<int>(this->mem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.mem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mem(), output);
  }

  // string cpu = 7;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.cpu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cpu(), output);
  }

  // string timeout = 8;
  if (this->timeout().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timeout().data(), static_cast<int>(this->timeout().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.timeout");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->timeout(), output);
  }

  // string image_pull_policy = 9;
  if (this->image_pull_policy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_pull_policy().data(), static_cast<int>(this->image_pull_policy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.image_pull_policy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->image_pull_policy(), output);
  }

  // string schedule = 10;
  if (this->schedule().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schedule().data(), static_cast<int>(this->schedule().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.schedule");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->schedule(), output);
  }

  // int32 port = 11;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->port(), output);
  }

  // int32 service_port = 12;
  if (this->service_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->service_port(), output);
  }

  // bool headless = 13;
  if (this->headless() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->headless(), output);
  }

  // repeated string envs = 14;
  for (int i = 0, n = this->envs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->envs(i).data(), static_cast<int>(this->envs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.envs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->envs(i), output);
  }

  // repeated string labels = 15;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.labels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->labels(i), output);
  }

  // repeated string secrets = 16;
  for (int i = 0, n = this->secrets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secrets(i).data(), static_cast<int>(this->secrets(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.secrets");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->secrets(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.Function)
}

::google::protobuf::uint8* Function::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.Function)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handler = 1;
  if (this->handler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handler().data(), static_cast<int>(this->handler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.handler");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->handler(), target);
  }

  // string body = 2;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->body(), target);
  }

  // string deps = 3;
  if (this->deps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deps().data(), static_cast<int>(this->deps().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.deps");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deps(), target);
  }

  // string runtime = 4;
  if (this->runtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime().data(), static_cast<int>(this->runtime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.runtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->runtime(), target);
  }

  // string runtime_image = 5;
  if (this->runtime_image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_image().data(), static_cast<int>(this->runtime_image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.runtime_image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->runtime_image(), target);
  }

  // string mem = 6;
  if (this->mem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mem().data(), static_cast<int>(this->mem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.mem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mem(), target);
  }

  // string cpu = 7;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.cpu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cpu(), target);
  }

  // string timeout = 8;
  if (this->timeout().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timeout().data(), static_cast<int>(this->timeout().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.timeout");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->timeout(), target);
  }

  // string image_pull_policy = 9;
  if (this->image_pull_policy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_pull_policy().data(), static_cast<int>(this->image_pull_policy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.image_pull_policy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->image_pull_policy(), target);
  }

  // string schedule = 10;
  if (this->schedule().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schedule().data(), static_cast<int>(this->schedule().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.schedule");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->schedule(), target);
  }

  // int32 port = 11;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->port(), target);
  }

  // int32 service_port = 12;
  if (this->service_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->service_port(), target);
  }

  // bool headless = 13;
  if (this->headless() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->headless(), target);
  }

  // repeated string envs = 14;
  for (int i = 0, n = this->envs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->envs(i).data(), static_cast<int>(this->envs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.envs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->envs(i), target);
  }

  // repeated string labels = 15;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.labels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->labels(i), target);
  }

  // repeated string secrets = 16;
  for (int i = 0, n = this->secrets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secrets(i).data(), static_cast<int>(this->secrets(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Function.secrets");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(16, this->secrets(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.Function)
  return target;
}

size_t Function::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.Function)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string envs = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->envs_size());
  for (int i = 0, n = this->envs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->envs(i));
  }

  // repeated string labels = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->labels(i));
  }

  // repeated string secrets = 16;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->secrets_size());
  for (int i = 0, n = this->secrets_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->secrets(i));
  }

  // string handler = 1;
  if (this->handler().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handler());
  }

  // string body = 2;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  // string deps = 3;
  if (this->deps().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deps());
  }

  // string runtime = 4;
  if (this->runtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->runtime());
  }

  // string runtime_image = 5;
  if (this->runtime_image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->runtime_image());
  }

  // string mem = 6;
  if (this->mem().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mem());
  }

  // string cpu = 7;
  if (this->cpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpu());
  }

  // string timeout = 8;
  if (this->timeout().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timeout());
  }

  // string image_pull_policy = 9;
  if (this->image_pull_policy().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_pull_policy());
  }

  // string schedule = 10;
  if (this->schedule().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->schedule());
  }

  // int32 port = 11;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // int32 service_port = 12;
  if (this->service_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->service_port());
  }

  // bool headless = 13;
  if (this->headless() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Function::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.Function)
  GOOGLE_DCHECK_NE(&from, this);
  const Function* source =
      ::google::protobuf::DynamicCastToGenerated<Function>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.Function)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.Function)
    MergeFrom(*source);
  }
}

void Function::MergeFrom(const Function& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.Function)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  envs_.MergeFrom(from.envs_);
  labels_.MergeFrom(from.labels_);
  secrets_.MergeFrom(from.secrets_);
  if (from.handler().size() > 0) {

    handler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handler_);
  }
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.deps().size() > 0) {

    deps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deps_);
  }
  if (from.runtime().size() > 0) {

    runtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_);
  }
  if (from.runtime_image().size() > 0) {

    runtime_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_image_);
  }
  if (from.mem().size() > 0) {

    mem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mem_);
  }
  if (from.cpu().size() > 0) {

    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  if (from.timeout().size() > 0) {

    timeout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timeout_);
  }
  if (from.image_pull_policy().size() > 0) {

    image_pull_policy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_pull_policy_);
  }
  if (from.schedule().size() > 0) {

    schedule_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schedule_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.service_port() != 0) {
    set_service_port(from.service_port());
  }
  if (from.headless() != 0) {
    set_headless(from.headless());
  }
}

void Function::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.Function)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Function::CopyFrom(const Function& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.Function)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Function::IsInitialized() const {
  return true;
}

void Function::Swap(Function* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Function::InternalSwap(Function* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  envs_.InternalSwap(CastToBase(&other->envs_));
  labels_.InternalSwap(CastToBase(&other->labels_));
  secrets_.InternalSwap(CastToBase(&other->secrets_));
  handler_.Swap(&other->handler_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deps_.Swap(&other->deps_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  runtime_.Swap(&other->runtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  runtime_image_.Swap(&other->runtime_image_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mem_.Swap(&other->mem_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cpu_.Swap(&other->cpu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timeout_.Swap(&other->timeout_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_pull_policy_.Swap(&other->image_pull_policy_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  schedule_.Swap(&other->schedule_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  swap(service_port_, other->service_port_);
  swap(headless_, other->headless_);
}

::google::protobuf::Metadata Function::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Options::InitAsDefaultInstance() {
}
class Options::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Options::kSecretsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Options::Options()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.Options)
}
Options::Options(const Options& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      secrets_(from.secrets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ric.action.Options)
}

void Options::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Options_ric_2daction_2fricaction_2eproto.base);
}

Options::~Options() {
  // @@protoc_insertion_point(destructor:ric.action.Options)
  SharedDtor();
}

void Options::SharedDtor() {
}

void Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Options& Options::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Options_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void Options::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.Options)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secrets_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Options::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Options*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string secrets = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ric.action.Options.secrets");
          object = msg->add_secrets();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Options::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.Options)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string secrets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_secrets()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secrets(this->secrets_size() - 1).data(),
            static_cast<int>(this->secrets(this->secrets_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Options.secrets"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.Options)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.Options)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Options::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.Options)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string secrets = 1;
  for (int i = 0, n = this->secrets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secrets(i).data(), static_cast<int>(this->secrets(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Options.secrets");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->secrets(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.Options)
}

::google::protobuf::uint8* Options::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.Options)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string secrets = 1;
  for (int i = 0, n = this->secrets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secrets(i).data(), static_cast<int>(this->secrets(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Options.secrets");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->secrets(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.Options)
  return target;
}

size_t Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.Options)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string secrets = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->secrets_size());
  for (int i = 0, n = this->secrets_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->secrets(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Options::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.Options)
  GOOGLE_DCHECK_NE(&from, this);
  const Options* source =
      ::google::protobuf::DynamicCastToGenerated<Options>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.Options)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.Options)
    MergeFrom(*source);
  }
}

void Options::MergeFrom(const Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  secrets_.MergeFrom(from.secrets_);
}

void Options::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Options::CopyFrom(const Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Options::IsInitialized() const {
  return true;
}

void Options::Swap(Options* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Options::InternalSwap(Options* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  secrets_.InternalSwap(CastToBase(&other->secrets_));
}

::google::protobuf::Metadata Options::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateOrDeployResponse::InitAsDefaultInstance() {
}
class UpdateOrDeployResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateOrDeployResponse::kGenerationFieldNumber;
const int UpdateOrDeployResponse::kResourceVersionFieldNumber;
const int UpdateOrDeployResponse::kChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateOrDeployResponse::UpdateOrDeployResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.UpdateOrDeployResponse)
}
UpdateOrDeployResponse::UpdateOrDeployResponse(const UpdateOrDeployResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_version().size() > 0) {
    resource_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_version_);
  }
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum().size() > 0) {
    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  generation_ = from.generation_;
  // @@protoc_insertion_point(copy_constructor:ric.action.UpdateOrDeployResponse)
}

void UpdateOrDeployResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateOrDeployResponse_ric_2daction_2fricaction_2eproto.base);
  resource_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generation_ = PROTOBUF_LONGLONG(0);
}

UpdateOrDeployResponse::~UpdateOrDeployResponse() {
  // @@protoc_insertion_point(destructor:ric.action.UpdateOrDeployResponse)
  SharedDtor();
}

void UpdateOrDeployResponse::SharedDtor() {
  resource_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateOrDeployResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateOrDeployResponse& UpdateOrDeployResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateOrDeployResponse_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void UpdateOrDeployResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.UpdateOrDeployResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generation_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateOrDeployResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateOrDeployResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 generation = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_generation(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string resource_version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.UpdateOrDeployResponse.resource_version");
        object = msg->mutable_resource_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string checksum = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.UpdateOrDeployResponse.checksum");
        object = msg->mutable_checksum();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateOrDeployResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.UpdateOrDeployResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 generation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &generation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_version().data(), static_cast<int>(this->resource_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.UpdateOrDeployResponse.resource_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string checksum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checksum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checksum().data(), static_cast<int>(this->checksum().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.UpdateOrDeployResponse.checksum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.UpdateOrDeployResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.UpdateOrDeployResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateOrDeployResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.UpdateOrDeployResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 generation = 1;
  if (this->generation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->generation(), output);
  }

  // string resource_version = 2;
  if (this->resource_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_version().data(), static_cast<int>(this->resource_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.UpdateOrDeployResponse.resource_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resource_version(), output);
  }

  // string checksum = 3;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.UpdateOrDeployResponse.checksum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.UpdateOrDeployResponse)
}

::google::protobuf::uint8* UpdateOrDeployResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.UpdateOrDeployResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 generation = 1;
  if (this->generation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->generation(), target);
  }

  // string resource_version = 2;
  if (this->resource_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_version().data(), static_cast<int>(this->resource_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.UpdateOrDeployResponse.resource_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resource_version(), target);
  }

  // string checksum = 3;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.UpdateOrDeployResponse.checksum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.UpdateOrDeployResponse)
  return target;
}

size_t UpdateOrDeployResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.UpdateOrDeployResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource_version = 2;
  if (this->resource_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_version());
  }

  // string checksum = 3;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checksum());
  }

  // int64 generation = 1;
  if (this->generation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->generation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOrDeployResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.UpdateOrDeployResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOrDeployResponse* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateOrDeployResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.UpdateOrDeployResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.UpdateOrDeployResponse)
    MergeFrom(*source);
  }
}

void UpdateOrDeployResponse::MergeFrom(const UpdateOrDeployResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.UpdateOrDeployResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_version().size() > 0) {

    resource_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_version_);
  }
  if (from.checksum().size() > 0) {

    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  if (from.generation() != 0) {
    set_generation(from.generation());
  }
}

void UpdateOrDeployResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.UpdateOrDeployResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOrDeployResponse::CopyFrom(const UpdateOrDeployResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.UpdateOrDeployResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrDeployResponse::IsInitialized() const {
  return true;
}

void UpdateOrDeployResponse::Swap(UpdateOrDeployResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateOrDeployResponse::InternalSwap(UpdateOrDeployResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_version_.Swap(&other->resource_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  checksum_.Swap(&other->checksum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(generation_, other->generation_);
}

::google::protobuf::Metadata UpdateOrDeployResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogsRequest::InitAsDefaultInstance() {
}
class LogsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogsRequest::kNameFieldNumber;
const int LogsRequest::kPodNameFieldNumber;
const int LogsRequest::kFollowFieldNumber;
const int LogsRequest::kTailLinesFieldNumber;
const int LogsRequest::kFilterByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogsRequest::LogsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.LogsRequest)
}
LogsRequest::LogsRequest(const LogsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  pod_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_name().size() > 0) {
    pod_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_name_);
  }
  filter_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter_by().size() > 0) {
    filter_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_by_);
  }
  ::memcpy(&tail_lines_, &from.tail_lines_,
    static_cast<size_t>(reinterpret_cast<char*>(&follow_) -
    reinterpret_cast<char*>(&tail_lines_)) + sizeof(follow_));
  // @@protoc_insertion_point(copy_constructor:ric.action.LogsRequest)
}

void LogsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogsRequest_ric_2daction_2fricaction_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tail_lines_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&follow_) -
      reinterpret_cast<char*>(&tail_lines_)) + sizeof(follow_));
}

LogsRequest::~LogsRequest() {
  // @@protoc_insertion_point(destructor:ric.action.LogsRequest)
  SharedDtor();
}

void LogsRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogsRequest& LogsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogsRequest_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void LogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.LogsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tail_lines_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&follow_) -
      reinterpret_cast<char*>(&tail_lines_)) + sizeof(follow_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.LogsRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string pod_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.LogsRequest.pod_name");
        object = msg->mutable_pod_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool follow = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_follow(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 tail_lines = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_tail_lines(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string filter_by = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.LogsRequest.filter_by");
        object = msg->mutable_filter_by();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.LogsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.LogsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pod_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_name().data(), static_cast<int>(this->pod_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.LogsRequest.pod_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool follow = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &follow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 tail_lines = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tail_lines_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter_by = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter_by().data(), static_cast<int>(this->filter_by().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.LogsRequest.filter_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.LogsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.LogsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.LogsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LogsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string pod_name = 2;
  if (this->pod_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_name().data(), static_cast<int>(this->pod_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LogsRequest.pod_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pod_name(), output);
  }

  // bool follow = 3;
  if (this->follow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->follow(), output);
  }

  // int64 tail_lines = 4;
  if (this->tail_lines() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->tail_lines(), output);
  }

  // string filter_by = 5;
  if (this->filter_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter_by().data(), static_cast<int>(this->filter_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LogsRequest.filter_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filter_by(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.LogsRequest)
}

::google::protobuf::uint8* LogsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.LogsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LogsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string pod_name = 2;
  if (this->pod_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_name().data(), static_cast<int>(this->pod_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LogsRequest.pod_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pod_name(), target);
  }

  // bool follow = 3;
  if (this->follow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->follow(), target);
  }

  // int64 tail_lines = 4;
  if (this->tail_lines() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->tail_lines(), target);
  }

  // string filter_by = 5;
  if (this->filter_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter_by().data(), static_cast<int>(this->filter_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LogsRequest.filter_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filter_by(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.LogsRequest)
  return target;
}

size_t LogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.LogsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string pod_name = 2;
  if (this->pod_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_name());
  }

  // string filter_by = 5;
  if (this->filter_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter_by());
  }

  // int64 tail_lines = 4;
  if (this->tail_lines() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tail_lines());
  }

  // bool follow = 3;
  if (this->follow() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.LogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LogsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<LogsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.LogsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.LogsRequest)
    MergeFrom(*source);
  }
}

void LogsRequest::MergeFrom(const LogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.LogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.pod_name().size() > 0) {

    pod_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_name_);
  }
  if (from.filter_by().size() > 0) {

    filter_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_by_);
  }
  if (from.tail_lines() != 0) {
    set_tail_lines(from.tail_lines());
  }
  if (from.follow() != 0) {
    set_follow(from.follow());
  }
}

void LogsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.LogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogsRequest::CopyFrom(const LogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.LogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogsRequest::IsInitialized() const {
  return true;
}

void LogsRequest::Swap(LogsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogsRequest::InternalSwap(LogsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pod_name_.Swap(&other->pod_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_by_.Swap(&other->filter_by_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tail_lines_, other->tail_lines_);
  swap(follow_, other->follow_);
}

::google::protobuf::Metadata LogsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InfoRequest::InitAsDefaultInstance() {
}
class InfoRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoRequest::InfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.InfoRequest)
}
InfoRequest::InfoRequest(const InfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.InfoRequest)
}

void InfoRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InfoRequest_ric_2daction_2fricaction_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InfoRequest::~InfoRequest() {
  // @@protoc_insertion_point(destructor:ric.action.InfoRequest)
  SharedDtor();
}

void InfoRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InfoRequest& InfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InfoRequest_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void InfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.InfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InfoRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InfoRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.InfoRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.InfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.InfoRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.InfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.InfoRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.InfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.InfoRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.InfoRequest)
}

::google::protobuf::uint8* InfoRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.InfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.InfoRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.InfoRequest)
  return target;
}

size_t InfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.InfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.InfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoRequest* source =
      ::google::protobuf::DynamicCastToGenerated<InfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.InfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.InfoRequest)
    MergeFrom(*source);
  }
}

void InfoRequest::MergeFrom(const InfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.InfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void InfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.InfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoRequest::CopyFrom(const InfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.InfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoRequest::IsInitialized() const {
  return true;
}

void InfoRequest::Swap(InfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoRequest::InternalSwap(InfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata InfoRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CallResponse::InitAsDefaultInstance() {
}
class CallResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallResponse::CallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.CallResponse)
}
CallResponse::CallResponse(const CallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.CallResponse)
}

void CallResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CallResponse_ric_2daction_2fricaction_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CallResponse::~CallResponse() {
  // @@protoc_insertion_point(destructor:ric.action.CallResponse)
  SharedDtor();
}

void CallResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CallResponse& CallResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CallResponse_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void CallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CallResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CallResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.CallResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.CallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.CallResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.CallResponse)
}

::google::protobuf::uint8* CallResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.CallResponse)
  return target;
}

size_t CallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.CallResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CallResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CallResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.CallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.CallResponse)
    MergeFrom(*source);
  }
}

void CallResponse::MergeFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void CallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallResponse::CopyFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallResponse::IsInitialized() const {
  return true;
}

void CallResponse::Swap(CallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallResponse::InternalSwap(CallResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CallResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EmptyResponse::InitAsDefaultInstance() {
}
class EmptyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyResponse::EmptyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.EmptyResponse)
}
EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ric.action.EmptyResponse)
}

void EmptyResponse::SharedCtor() {
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:ric.action.EmptyResponse)
  SharedDtor();
}

void EmptyResponse::SharedDtor() {
}

void EmptyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyResponse& EmptyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EmptyResponse_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EmptyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EmptyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EmptyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.EmptyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.EmptyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.EmptyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EmptyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.EmptyResponse)
}

::google::protobuf::uint8* EmptyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.EmptyResponse)
  return target;
}

size_t EmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.EmptyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EmptyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.EmptyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.EmptyResponse)
    MergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {
  return true;
}

void EmptyResponse::Swap(EmptyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyResponse::InternalSwap(EmptyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmptyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogsResponse::InitAsDefaultInstance() {
}
class LogsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogsResponse::kLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogsResponse::LogsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.LogsResponse)
}
LogsResponse::LogsResponse(const LogsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line().size() > 0) {
    line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.LogsResponse)
}

void LogsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogsResponse_ric_2daction_2fricaction_2eproto.base);
  line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LogsResponse::~LogsResponse() {
  // @@protoc_insertion_point(destructor:ric.action.LogsResponse)
  SharedDtor();
}

void LogsResponse::SharedDtor() {
  line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogsResponse& LogsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogsResponse_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void LogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.LogsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string line = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.LogsResponse.line");
        object = msg->mutable_line();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.LogsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_line()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->line().data(), static_cast<int>(this->line().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.LogsResponse.line"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.LogsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.LogsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.LogsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string line = 1;
  if (this->line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line().data(), static_cast<int>(this->line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LogsResponse.line");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->line(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.LogsResponse)
}

::google::protobuf::uint8* LogsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.LogsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string line = 1;
  if (this->line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line().data(), static_cast<int>(this->line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LogsResponse.line");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->line(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.LogsResponse)
  return target;
}

size_t LogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.LogsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string line = 1;
  if (this->line().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->line());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.LogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LogsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<LogsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.LogsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.LogsResponse)
    MergeFrom(*source);
  }
}

void LogsResponse::MergeFrom(const LogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.LogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.line().size() > 0) {

    line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_);
  }
}

void LogsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.LogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogsResponse::CopyFrom(const LogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.LogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogsResponse::IsInitialized() const {
  return true;
}

void LogsResponse::Swap(LogsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogsResponse::InternalSwap(LogsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  line_.Swap(&other->line_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LogsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InfoResponse::InitAsDefaultInstance() {
}
class InfoResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoResponse::kPodsFieldNumber;
const int InfoResponse::kRuntimeFieldNumber;
const int InfoResponse::kDepsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoResponse::InfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.InfoResponse)
}
InfoResponse::InfoResponse(const InfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      pods_(from.pods_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  runtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.runtime().size() > 0) {
    runtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_);
  }
  deps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deps().size() > 0) {
    deps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deps_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.InfoResponse)
}

void InfoResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InfoResponse_ric_2daction_2fricaction_2eproto.base);
  runtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InfoResponse::~InfoResponse() {
  // @@protoc_insertion_point(destructor:ric.action.InfoResponse)
  SharedDtor();
}

void InfoResponse::SharedDtor() {
  runtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deps_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InfoResponse& InfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InfoResponse_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void InfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.InfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pods_.Clear();
  runtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InfoResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InfoResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .ric.action.Pod pods = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ric::action::Pod::_InternalParse;
          object = msg->add_pods();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string runtime = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.InfoResponse.runtime");
        object = msg->mutable_runtime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string deps = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.InfoResponse.deps");
        object = msg->mutable_deps();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.InfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ric.action.Pod pods = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pods()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string runtime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->runtime().data(), static_cast<int>(this->runtime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.InfoResponse.runtime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deps()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deps().data(), static_cast<int>(this->deps().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.InfoResponse.deps"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.InfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.InfoResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.InfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ric.action.Pod pods = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pods_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pods(static_cast<int>(i)),
      output);
  }

  // string runtime = 2;
  if (this->runtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime().data(), static_cast<int>(this->runtime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.InfoResponse.runtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->runtime(), output);
  }

  // string deps = 3;
  if (this->deps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deps().data(), static_cast<int>(this->deps().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.InfoResponse.deps");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->deps(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.InfoResponse)
}

::google::protobuf::uint8* InfoResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.InfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ric.action.Pod pods = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pods_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pods(static_cast<int>(i)), target);
  }

  // string runtime = 2;
  if (this->runtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime().data(), static_cast<int>(this->runtime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.InfoResponse.runtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->runtime(), target);
  }

  // string deps = 3;
  if (this->deps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deps().data(), static_cast<int>(this->deps().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.InfoResponse.deps");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deps(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.InfoResponse)
  return target;
}

size_t InfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.InfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ric.action.Pod pods = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pods_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pods(static_cast<int>(i)));
    }
  }

  // string runtime = 2;
  if (this->runtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->runtime());
  }

  // string deps = 3;
  if (this->deps().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deps());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.InfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoResponse* source =
      ::google::protobuf::DynamicCastToGenerated<InfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.InfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.InfoResponse)
    MergeFrom(*source);
  }
}

void InfoResponse::MergeFrom(const InfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.InfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pods_.MergeFrom(from.pods_);
  if (from.runtime().size() > 0) {

    runtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_);
  }
  if (from.deps().size() > 0) {

    deps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deps_);
  }
}

void InfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.InfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoResponse::CopyFrom(const InfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.InfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoResponse::IsInitialized() const {
  return true;
}

void InfoResponse::Swap(InfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoResponse::InternalSwap(InfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&pods_)->InternalSwap(CastToBase(&other->pods_));
  runtime_.Swap(&other->runtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deps_.Swap(&other->deps_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata InfoResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Pod::InitAsDefaultInstance() {
}
class Pod::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pod::kNameFieldNumber;
const int Pod::kCreationTimestampFieldNumber;
const int Pod::kPhaseFieldNumber;
const int Pod::kStartTimeFieldNumber;
const int Pod::kContainerStatusesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pod::Pod()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.Pod)
}
Pod::Pod(const Pod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      container_statuses_(from.container_statuses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  creation_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.creation_timestamp().size() > 0) {
    creation_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_timestamp_);
  }
  phase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phase().size() > 0) {
    phase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phase_);
  }
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_time().size() > 0) {
    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.Pod)
}

void Pod::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Pod_ric_2daction_2fricaction_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Pod::~Pod() {
  // @@protoc_insertion_point(destructor:ric.action.Pod)
  SharedDtor();
}

void Pod::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pod& Pod::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Pod_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void Pod::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.Pod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_statuses_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Pod::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Pod*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Pod.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string creation_timestamp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Pod.creation_timestamp");
        object = msg->mutable_creation_timestamp();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string phase = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Pod.phase");
        object = msg->mutable_phase();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string start_time = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.Pod.start_time");
        object = msg->mutable_start_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .ric.action.ContainerStatus container_statuses = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ric::action::ContainerStatus::_InternalParse;
          object = msg->add_container_statuses();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Pod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.Pod)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Pod.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string creation_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creation_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->creation_timestamp().data(), static_cast<int>(this->creation_timestamp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Pod.creation_timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phase = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phase()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phase().data(), static_cast<int>(this->phase().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Pod.phase"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_time().data(), static_cast<int>(this->start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.Pod.start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ric.action.ContainerStatus container_statuses = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_container_statuses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.Pod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.Pod)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Pod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.Pod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Pod.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string creation_timestamp = 2;
  if (this->creation_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->creation_timestamp().data(), static_cast<int>(this->creation_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Pod.creation_timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->creation_timestamp(), output);
  }

  // string phase = 3;
  if (this->phase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phase().data(), static_cast<int>(this->phase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Pod.phase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phase(), output);
  }

  // string start_time = 4;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Pod.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->start_time(), output);
  }

  // repeated .ric.action.ContainerStatus container_statuses = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->container_statuses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->container_statuses(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.Pod)
}

::google::protobuf::uint8* Pod::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.Pod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Pod.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string creation_timestamp = 2;
  if (this->creation_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->creation_timestamp().data(), static_cast<int>(this->creation_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Pod.creation_timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->creation_timestamp(), target);
  }

  // string phase = 3;
  if (this->phase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phase().data(), static_cast<int>(this->phase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Pod.phase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phase(), target);
  }

  // string start_time = 4;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.Pod.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->start_time(), target);
  }

  // repeated .ric.action.ContainerStatus container_statuses = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->container_statuses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->container_statuses(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.Pod)
  return target;
}

size_t Pod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.Pod)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ric.action.ContainerStatus container_statuses = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->container_statuses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->container_statuses(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string creation_timestamp = 2;
  if (this->creation_timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creation_timestamp());
  }

  // string phase = 3;
  if (this->phase().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phase());
  }

  // string start_time = 4;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.Pod)
  GOOGLE_DCHECK_NE(&from, this);
  const Pod* source =
      ::google::protobuf::DynamicCastToGenerated<Pod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.Pod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.Pod)
    MergeFrom(*source);
  }
}

void Pod::MergeFrom(const Pod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.Pod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  container_statuses_.MergeFrom(from.container_statuses_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.creation_timestamp().size() > 0) {

    creation_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_timestamp_);
  }
  if (from.phase().size() > 0) {

    phase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phase_);
  }
  if (from.start_time().size() > 0) {

    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
}

void Pod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.Pod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pod::CopyFrom(const Pod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.Pod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pod::IsInitialized() const {
  return true;
}

void Pod::Swap(Pod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pod::InternalSwap(Pod* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&container_statuses_)->InternalSwap(CastToBase(&other->container_statuses_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  creation_timestamp_.Swap(&other->creation_timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phase_.Swap(&other->phase_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  start_time_.Swap(&other->start_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Pod::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ContainerStatus::InitAsDefaultInstance() {
}
class ContainerStatus::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerStatus::kReadyFieldNumber;
const int ContainerStatus::kRestartCountFieldNumber;
const int ContainerStatus::kStateFieldNumber;
const int ContainerStatus::kLastStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerStatus::ContainerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.ContainerStatus)
}
ContainerStatus::ContainerStatus(const ContainerStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  last_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_state().size() > 0) {
    last_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_state_);
  }
  ::memcpy(&ready_, &from.ready_,
    static_cast<size_t>(reinterpret_cast<char*>(&restart_count_) -
    reinterpret_cast<char*>(&ready_)) + sizeof(restart_count_));
  // @@protoc_insertion_point(copy_constructor:ric.action.ContainerStatus)
}

void ContainerStatus::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ContainerStatus_ric_2daction_2fricaction_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ready_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&restart_count_) -
      reinterpret_cast<char*>(&ready_)) + sizeof(restart_count_));
}

ContainerStatus::~ContainerStatus() {
  // @@protoc_insertion_point(destructor:ric.action.ContainerStatus)
  SharedDtor();
}

void ContainerStatus::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContainerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContainerStatus& ContainerStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ContainerStatus_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void ContainerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.ContainerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ready_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&restart_count_) -
      reinterpret_cast<char*>(&ready_)) + sizeof(restart_count_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ContainerStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ContainerStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool ready = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ready(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 restart_count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_restart_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string state = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.ContainerStatus.state");
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string last_state = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.ContainerStatus.last_state");
        object = msg->mutable_last_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ContainerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.ContainerStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ready = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 restart_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &restart_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.ContainerStatus.state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_state().data(), static_cast<int>(this->last_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.ContainerStatus.last_state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.ContainerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.ContainerStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ContainerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.ContainerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->ready() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ready(), output);
  }

  // int32 restart_count = 2;
  if (this->restart_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->restart_count(), output);
  }

  // string state = 3;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.ContainerStatus.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->state(), output);
  }

  // string last_state = 4;
  if (this->last_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_state().data(), static_cast<int>(this->last_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.ContainerStatus.last_state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->last_state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.ContainerStatus)
}

::google::protobuf::uint8* ContainerStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.ContainerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->ready() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ready(), target);
  }

  // int32 restart_count = 2;
  if (this->restart_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->restart_count(), target);
  }

  // string state = 3;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.ContainerStatus.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->state(), target);
  }

  // string last_state = 4;
  if (this->last_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_state().data(), static_cast<int>(this->last_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.ContainerStatus.last_state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->last_state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.ContainerStatus)
  return target;
}

size_t ContainerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.ContainerStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string state = 3;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state());
  }

  // string last_state = 4;
  if (this->last_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_state());
  }

  // bool ready = 1;
  if (this->ready() != 0) {
    total_size += 1 + 1;
  }

  // int32 restart_count = 2;
  if (this->restart_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->restart_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContainerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.ContainerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStatus* source =
      ::google::protobuf::DynamicCastToGenerated<ContainerStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.ContainerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.ContainerStatus)
    MergeFrom(*source);
  }
}

void ContainerStatus::MergeFrom(const ContainerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.ContainerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.last_state().size() > 0) {

    last_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_state_);
  }
  if (from.ready() != 0) {
    set_ready(from.ready());
  }
  if (from.restart_count() != 0) {
    set_restart_count(from.restart_count());
  }
}

void ContainerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.ContainerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStatus::CopyFrom(const ContainerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.ContainerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStatus::IsInitialized() const {
  return true;
}

void ContainerStatus::Swap(ContainerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerStatus::InternalSwap(ContainerStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_state_.Swap(&other->last_state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ready_, other->ready_);
  swap(restart_count_, other->restart_count_);
}

::google::protobuf::Metadata ContainerStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HistoryRequest::InitAsDefaultInstance() {
}
class HistoryRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HistoryRequest::kOidFieldNumber;
const int HistoryRequest::kDbFieldNumber;
const int HistoryRequest::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HistoryRequest::HistoryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.HistoryRequest)
}
HistoryRequest::HistoryRequest(const HistoryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db().size() > 0) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:ric.action.HistoryRequest)
}

void HistoryRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HistoryRequest_ric_2daction_2fricaction_2eproto.base);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = PROTOBUF_LONGLONG(0);
}

HistoryRequest::~HistoryRequest() {
  // @@protoc_insertion_point(destructor:ric.action.HistoryRequest)
  SharedDtor();
}

void HistoryRequest::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HistoryRequest& HistoryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HistoryRequest_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void HistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.HistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HistoryRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HistoryRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string oid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.HistoryRequest.oid");
        object = msg->mutable_oid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string db = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.HistoryRequest.db");
        object = msg->mutable_db();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 size = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HistoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.HistoryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.HistoryRequest.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string db = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.HistoryRequest.db"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.HistoryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.HistoryRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HistoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.HistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.HistoryRequest.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // string db = 2;
  if (this->db().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.HistoryRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->db(), output);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.HistoryRequest)
}

::google::protobuf::uint8* HistoryRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.HistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.HistoryRequest.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // string db = 2;
  if (this->db().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.HistoryRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->db(), target);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.HistoryRequest)
  return target;
}

size_t HistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.HistoryRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // string db = 2;
  if (this->db().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db());
  }

  // int64 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HistoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.HistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HistoryRequest* source =
      ::google::protobuf::DynamicCastToGenerated<HistoryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.HistoryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.HistoryRequest)
    MergeFrom(*source);
  }
}

void HistoryRequest::MergeFrom(const HistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.HistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.db().size() > 0) {

    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void HistoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.HistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HistoryRequest::CopyFrom(const HistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.HistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoryRequest::IsInitialized() const {
  return true;
}

void HistoryRequest::Swap(HistoryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HistoryRequest::InternalSwap(HistoryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
}

::google::protobuf::Metadata HistoryRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HistoryResponse::InitAsDefaultInstance() {
}
class HistoryResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HistoryResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HistoryResponse::HistoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.HistoryResponse)
}
HistoryResponse::HistoryResponse(const HistoryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.HistoryResponse)
}

void HistoryResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HistoryResponse_ric_2daction_2fricaction_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HistoryResponse::~HistoryResponse() {
  // @@protoc_insertion_point(destructor:ric.action.HistoryResponse)
  SharedDtor();
}

void HistoryResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HistoryResponse& HistoryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HistoryResponse_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void HistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.HistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HistoryResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HistoryResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.HistoryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.HistoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.HistoryResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.HistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.HistoryResponse)
}

::google::protobuf::uint8* HistoryResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.HistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.HistoryResponse)
  return target;
}

size_t HistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.HistoryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.HistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HistoryResponse* source =
      ::google::protobuf::DynamicCastToGenerated<HistoryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.HistoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.HistoryResponse)
    MergeFrom(*source);
  }
}

void HistoryResponse::MergeFrom(const HistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.HistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void HistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.HistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HistoryResponse::CopyFrom(const HistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.HistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoryResponse::IsInitialized() const {
  return true;
}

void HistoryResponse::Swap(HistoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HistoryResponse::InternalSwap(HistoryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata HistoryResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EventRequest::InitAsDefaultInstance() {
}
class EventRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventRequest::kOidFieldNumber;
const int EventRequest::kNameFieldNumber;
const int EventRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventRequest::EventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.EventRequest)
}
EventRequest::EventRequest(const EventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.EventRequest)
}

void EventRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EventRequest_ric_2daction_2fricaction_2eproto.base);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EventRequest::~EventRequest() {
  // @@protoc_insertion_point(destructor:ric.action.EventRequest)
  SharedDtor();
}

void EventRequest::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventRequest& EventRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EventRequest_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void EventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.EventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EventRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EventRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string oid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.EventRequest.oid");
        object = msg->mutable_oid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.EventRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.EventRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.EventRequest.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.EventRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.EventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.EventRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.EventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.EventRequest.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.EventRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.EventRequest)
}

::google::protobuf::uint8* EventRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.EventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.EventRequest.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.EventRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.EventRequest)
  return target;
}

size_t EventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.EventRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.EventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EventRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EventRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.EventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.EventRequest)
    MergeFrom(*source);
  }
}

void EventRequest::MergeFrom(const EventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.EventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void EventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.EventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventRequest::CopyFrom(const EventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.EventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventRequest::IsInitialized() const {
  return true;
}

void EventRequest::Swap(EventRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventRequest::InternalSwap(EventRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EventRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LastStateRequest::InitAsDefaultInstance() {
}
class LastStateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LastStateRequest::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LastStateRequest::LastStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.LastStateRequest)
}
LastStateRequest::LastStateRequest(const LastStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.LastStateRequest)
}

void LastStateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LastStateRequest_ric_2daction_2fricaction_2eproto.base);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LastStateRequest::~LastStateRequest() {
  // @@protoc_insertion_point(destructor:ric.action.LastStateRequest)
  SharedDtor();
}

void LastStateRequest::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LastStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LastStateRequest& LastStateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LastStateRequest_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void LastStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.LastStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LastStateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LastStateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string oid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.action.LastStateRequest.oid");
        object = msg->mutable_oid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LastStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.LastStateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.action.LastStateRequest.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.LastStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.LastStateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LastStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.LastStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LastStateRequest.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.LastStateRequest)
}

::google::protobuf::uint8* LastStateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.LastStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.action.LastStateRequest.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.LastStateRequest)
  return target;
}

size_t LastStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.LastStateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LastStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.LastStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LastStateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<LastStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.LastStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.LastStateRequest)
    MergeFrom(*source);
  }
}

void LastStateRequest::MergeFrom(const LastStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.LastStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void LastStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.LastStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastStateRequest::CopyFrom(const LastStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.LastStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LastStateRequest::IsInitialized() const {
  return true;
}

void LastStateRequest::Swap(LastStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LastStateRequest::InternalSwap(LastStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LastStateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LastStateResponse::InitAsDefaultInstance() {
}
class LastStateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LastStateResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LastStateResponse::LastStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.action.LastStateResponse)
}
LastStateResponse::LastStateResponse(const LastStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.action.LastStateResponse)
}

void LastStateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LastStateResponse_ric_2daction_2fricaction_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LastStateResponse::~LastStateResponse() {
  // @@protoc_insertion_point(destructor:ric.action.LastStateResponse)
  SharedDtor();
}

void LastStateResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LastStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LastStateResponse& LastStateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LastStateResponse_ric_2daction_2fricaction_2eproto.base);
  return *internal_default_instance();
}


void LastStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.action.LastStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LastStateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LastStateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LastStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.action.LastStateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.action.LastStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.action.LastStateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LastStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.action.LastStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.action.LastStateResponse)
}

::google::protobuf::uint8* LastStateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.action.LastStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.action.LastStateResponse)
  return target;
}

size_t LastStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.action.LastStateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LastStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.action.LastStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LastStateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<LastStateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.action.LastStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.action.LastStateResponse)
    MergeFrom(*source);
  }
}

void LastStateResponse::MergeFrom(const LastStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.action.LastStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void LastStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.action.LastStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastStateResponse::CopyFrom(const LastStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.action.LastStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LastStateResponse::IsInitialized() const {
  return true;
}

void LastStateResponse::Swap(LastStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LastStateResponse::InternalSwap(LastStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LastStateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2daction_2fricaction_2eproto);
  return ::file_level_metadata_ric_2daction_2fricaction_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace action
}  // namespace ric
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ric::action::CallRequest* Arena::CreateMaybeMessage< ::ric::action::CallRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::CallRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::Context* Arena::CreateMaybeMessage< ::ric::action::Context >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::Context >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::ScaleRequest* Arena::CreateMaybeMessage< ::ric::action::ScaleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::ScaleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::Uint64* Arena::CreateMaybeMessage< ::ric::action::Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::Uint64 >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::DeleteRequest* Arena::CreateMaybeMessage< ::ric::action::DeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::DeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::UpdateOrDeployRequest* Arena::CreateMaybeMessage< ::ric::action::UpdateOrDeployRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::UpdateOrDeployRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::Function* Arena::CreateMaybeMessage< ::ric::action::Function >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::Function >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::Options* Arena::CreateMaybeMessage< ::ric::action::Options >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::Options >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::UpdateOrDeployResponse* Arena::CreateMaybeMessage< ::ric::action::UpdateOrDeployResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::UpdateOrDeployResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::LogsRequest* Arena::CreateMaybeMessage< ::ric::action::LogsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::LogsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::InfoRequest* Arena::CreateMaybeMessage< ::ric::action::InfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::InfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::CallResponse* Arena::CreateMaybeMessage< ::ric::action::CallResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::CallResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::EmptyResponse* Arena::CreateMaybeMessage< ::ric::action::EmptyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::EmptyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::LogsResponse* Arena::CreateMaybeMessage< ::ric::action::LogsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::LogsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::InfoResponse* Arena::CreateMaybeMessage< ::ric::action::InfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::InfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::Pod* Arena::CreateMaybeMessage< ::ric::action::Pod >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::Pod >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::ContainerStatus* Arena::CreateMaybeMessage< ::ric::action::ContainerStatus >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::ContainerStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::HistoryRequest* Arena::CreateMaybeMessage< ::ric::action::HistoryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::HistoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::HistoryResponse* Arena::CreateMaybeMessage< ::ric::action::HistoryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::HistoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::EventRequest* Arena::CreateMaybeMessage< ::ric::action::EventRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::EventRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::LastStateRequest* Arena::CreateMaybeMessage< ::ric::action::LastStateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::LastStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::action::LastStateResponse* Arena::CreateMaybeMessage< ::ric::action::LastStateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::action::LastStateResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
