// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-gate/ric-gate.proto

#include "ric-gate/ric-gate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ric_2dgate_2fric_2dgate_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LimitingParams_ric_2dgate_2fric_2dgate_2eproto;
namespace ric {
namespace gate {
class InitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitRequest> _instance;
} _InitRequest_default_instance_;
class AuthRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRequest> _instance;
} _AuthRequest_default_instance_;
class LimitingParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LimitingParams> _instance;
} _LimitingParams_default_instance_;
class AuthResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthResponse> _instance;
} _AuthResponse_default_instance_;
class DataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequest> _instance;
} _DataRequest_default_instance_;
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping> _instance;
} _Ping_default_instance_;
class CommandReplyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommandReplyRequest> _instance;
} _CommandReplyRequest_default_instance_;
class OfflineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineRequest> _instance;
} _OfflineRequest_default_instance_;
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command> _instance;
} _Command_default_instance_;
class EmptyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmptyResponse> _instance;
} _EmptyResponse_default_instance_;
}  // namespace gate
}  // namespace ric
static void InitDefaultsInitRequest_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_InitRequest_default_instance_;
    new (ptr) ::ric::gate::InitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::InitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InitRequest_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInitRequest_ric_2dgate_2fric_2dgate_2eproto}, {}};

static void InitDefaultsAuthRequest_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_AuthRequest_default_instance_;
    new (ptr) ::ric::gate::AuthRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::AuthRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthRequest_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthRequest_ric_2dgate_2fric_2dgate_2eproto}, {}};

static void InitDefaultsLimitingParams_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_LimitingParams_default_instance_;
    new (ptr) ::ric::gate::LimitingParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::LimitingParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LimitingParams_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLimitingParams_ric_2dgate_2fric_2dgate_2eproto}, {}};

static void InitDefaultsAuthResponse_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_AuthResponse_default_instance_;
    new (ptr) ::ric::gate::AuthResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::AuthResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AuthResponse_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAuthResponse_ric_2dgate_2fric_2dgate_2eproto}, {
      &scc_info_LimitingParams_ric_2dgate_2fric_2dgate_2eproto.base,}};

static void InitDefaultsDataRequest_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_DataRequest_default_instance_;
    new (ptr) ::ric::gate::DataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::DataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataRequest_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataRequest_ric_2dgate_2fric_2dgate_2eproto}, {}};

static void InitDefaultsPing_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_Ping_default_instance_;
    new (ptr) ::ric::gate::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::Ping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ping_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPing_ric_2dgate_2fric_2dgate_2eproto}, {}};

static void InitDefaultsCommandReplyRequest_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_CommandReplyRequest_default_instance_;
    new (ptr) ::ric::gate::CommandReplyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::CommandReplyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommandReplyRequest_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommandReplyRequest_ric_2dgate_2fric_2dgate_2eproto}, {}};

static void InitDefaultsOfflineRequest_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_OfflineRequest_default_instance_;
    new (ptr) ::ric::gate::OfflineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::OfflineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineRequest_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineRequest_ric_2dgate_2fric_2dgate_2eproto}, {}};

static void InitDefaultsCommand_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_Command_default_instance_;
    new (ptr) ::ric::gate::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::Command::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Command_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommand_ric_2dgate_2fric_2dgate_2eproto}, {}};

static void InitDefaultsEmptyResponse_ric_2dgate_2fric_2dgate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::gate::_EmptyResponse_default_instance_;
    new (ptr) ::ric::gate::EmptyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::gate::EmptyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmptyResponse_ric_2dgate_2fric_2dgate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmptyResponse_ric_2dgate_2fric_2dgate_2eproto}, {}};

void InitDefaults_ric_2dgate_2fric_2dgate_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_InitRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LimitingParams_ric_2dgate_2fric_2dgate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthResponse_ric_2dgate_2fric_2dgate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ping_ric_2dgate_2fric_2dgate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommandReplyRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Command_ric_2dgate_2fric_2dgate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmptyResponse_ric_2dgate_2fric_2dgate_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_ric_2dgate_2fric_2dgate_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ric_2dgate_2fric_2dgate_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ric_2dgate_2fric_2dgate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::InitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::gate::InitRequest, instance_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthRequest, id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthRequest, login_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthRequest, password_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthRequest, is_bot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::LimitingParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::gate::LimitingParams, packet_size_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::LimitingParams, packet_frequency_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::LimitingParams, excesses_allowed_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::LimitingParams, current_packets_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::LimitingParams, current_excesses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthResponse, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthResponse, group_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthResponse, license_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthResponse, session_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthResponse, config_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::AuthResponse, limits_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::DataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::gate::DataRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::DataRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::DataRequest, data_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::DataRequest, binary_data_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::DataRequest, data_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::gate::Ping, instance_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::CommandReplyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::gate::CommandReplyRequest, command_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::CommandReplyRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::CommandReplyRequest, data_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::CommandReplyRequest, stage_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::CommandReplyRequest, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::OfflineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::gate::OfflineRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::OfflineRequest, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::gate::Command, command_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::Command, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::Command, method_),
  PROTOBUF_FIELD_OFFSET(::ric::gate::Command, params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::gate::EmptyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ric::gate::InitRequest)},
  { 6, -1, sizeof(::ric::gate::AuthRequest)},
  { 16, -1, sizeof(::ric::gate::LimitingParams)},
  { 26, -1, sizeof(::ric::gate::AuthResponse)},
  { 37, -1, sizeof(::ric::gate::DataRequest)},
  { 47, -1, sizeof(::ric::gate::Ping)},
  { 53, -1, sizeof(::ric::gate::CommandReplyRequest)},
  { 63, -1, sizeof(::ric::gate::OfflineRequest)},
  { 70, -1, sizeof(::ric::gate::Command)},
  { 79, -1, sizeof(::ric::gate::EmptyResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_InitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_AuthRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_LimitingParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_AuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_DataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_CommandReplyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_OfflineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_Command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::gate::_EmptyResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto = {
  {}, AddDescriptors_ric_2dgate_2fric_2dgate_2eproto, "ric-gate/ric-gate.proto", schemas,
  file_default_instances, TableStruct_ric_2dgate_2fric_2dgate_2eproto::offsets,
  file_level_metadata_ric_2dgate_2fric_2dgate_2eproto, 10, file_level_enum_descriptors_ric_2dgate_2fric_2dgate_2eproto, file_level_service_descriptors_ric_2dgate_2fric_2dgate_2eproto,
};

const char descriptor_table_protodef_ric_2dgate_2fric_2dgate_2eproto[] =
  "\n\027ric-gate/ric-gate.proto\022\010ric.gate\"\"\n\013I"
  "nitRequest\022\023\n\013instance_id\030\001 \001(\t\"_\n\013AuthR"
  "equest\022\023\n\013instance_id\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022"
  "\r\n\005login\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\016\n\006is_b"
  "ot\030\005 \001(\010\"\214\001\n\016LimitingParams\022\023\n\013packet_si"
  "ze\030\001 \001(\002\022\030\n\020packet_frequency\030\002 \001(\002\022\030\n\020ex"
  "cesses_allowed\030\003 \001(\002\022\027\n\017current_packets\030"
  "\004 \001(\002\022\030\n\020current_excesses\030\005 \001(\002\"\225\001\n\014Auth"
  "Response\022\021\n\tobject_id\030\001 \001(\t\022\020\n\010group_id\030"
  "\002 \001(\t\022\022\n\nlicense_id\030\003 \001(\t\022\022\n\nsession_id\030"
  "\004 \001(\t\022\016\n\006config\030\005 \001(\014\022(\n\006limits\030\006 \001(\0132\030."
  "ric.gate.LimitingParams\"\316\001\n\013DataRequest\022"
  "\023\n\013instance_id\030\001 \001(\t\022\021\n\tobject_id\030\002 \001(\t\022"
  "\014\n\004data\030\003 \001(\014\022\023\n\013binary_data\030\004 \001(\014\0221\n\tda"
  "ta_type\030\005 \001(\0162\036.ric.gate.DataRequest.Dat"
  "aType\"A\n\010DataType\022\013\n\007UNKNOWN\020\000\022\n\n\006PARAMS"
  "\020\001\022\010\n\004FILE\020\002\022\t\n\005EVENT\020\003\022\007\n\003RPC\020\004\"\033\n\004Ping"
  "\022\023\n\013instance_id\030\001 \001(\t\"\321\001\n\023CommandReplyRe"
  "quest\022\022\n\ncommand_id\030\001 \001(\t\022\021\n\tobject_id\030\002"
  " \001(\t\022\014\n\004data\030\003 \001(\014\0222\n\005stage\030\004 \001(\0162#.ric."
  "gate.CommandReplyRequest.Stage\022\r\n\005error\030"
  "\005 \001(\t\"B\n\005Stage\022\013\n\007UNKNOWN\020\000\022\t\n\005ERROR\020\001\022\t"
  "\n\005INLET\020\002\022\n\n\006OBJECT\020\003\022\n\n\006PACKET\020\004\"8\n\016Off"
  "lineRequest\022\023\n\013instance_id\030\001 \001(\t\022\021\n\tobje"
  "ct_id\030\002 \001(\t\"P\n\007Command\022\022\n\ncommand_id\030\001 \001"
  "(\t\022\021\n\tobject_id\030\002 \001(\t\022\016\n\006method\030\003 \001(\t\022\016\n"
  "\006params\030\004 \001(\014\"\017\n\rEmptyResponse2\374\002\n\tGateI"
  "nlet\0222\n\004Init\022\025.ric.gate.InitRequest\032\021.ri"
  "c.gate.Command0\001\0225\n\004Auth\022\025.ric.gate.Auth"
  "Request\032\026.ric.gate.AuthResponse\022:\n\010SendD"
  "ata\022\025.ric.gate.DataRequest\032\027.ric.gate.Em"
  "ptyResponse\022:\n\rSendHeartbeat\022\016.ric.gate."
  "Ping\032\027.ric.gate.EmptyResponse(\001\022J\n\020SendC"
  "ommandReply\022\035.ric.gate.CommandReplyReque"
  "st\032\027.ric.gate.EmptyResponse\022@\n\013SendOffli"
  "ne\022\030.ric.gate.OfflineRequest\032\027.ric.gate."
  "EmptyResponse2J\n\013GateCommand\022;\n\007SendRpc\022"
  "\021.ric.gate.Command\032\035.ric.gate.CommandRep"
  "lyRequestB\024Z\022./ric-gate;ricgateb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ric_2dgate_2fric_2dgate_2eproto = {
  false, InitDefaults_ric_2dgate_2fric_2dgate_2eproto, 
  descriptor_table_protodef_ric_2dgate_2fric_2dgate_2eproto,
  "ric-gate/ric-gate.proto", &assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto, 1559,
};

void AddDescriptors_ric_2dgate_2fric_2dgate_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ric_2dgate_2fric_2dgate_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ric_2dgate_2fric_2dgate_2eproto = []() { AddDescriptors_ric_2dgate_2fric_2dgate_2eproto(); return true; }();
namespace ric {
namespace gate {
const ::google::protobuf::EnumDescriptor* DataRequest_DataType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return file_level_enum_descriptors_ric_2dgate_2fric_2dgate_2eproto[0];
}
bool DataRequest_DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataRequest_DataType DataRequest::UNKNOWN;
const DataRequest_DataType DataRequest::PARAMS;
const DataRequest_DataType DataRequest::FILE;
const DataRequest_DataType DataRequest::EVENT;
const DataRequest_DataType DataRequest::RPC;
const DataRequest_DataType DataRequest::DataType_MIN;
const DataRequest_DataType DataRequest::DataType_MAX;
const int DataRequest::DataType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CommandReplyRequest_Stage_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return file_level_enum_descriptors_ric_2dgate_2fric_2dgate_2eproto[1];
}
bool CommandReplyRequest_Stage_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CommandReplyRequest_Stage CommandReplyRequest::UNKNOWN;
const CommandReplyRequest_Stage CommandReplyRequest::ERROR;
const CommandReplyRequest_Stage CommandReplyRequest::INLET;
const CommandReplyRequest_Stage CommandReplyRequest::OBJECT;
const CommandReplyRequest_Stage CommandReplyRequest::PACKET;
const CommandReplyRequest_Stage CommandReplyRequest::Stage_MIN;
const CommandReplyRequest_Stage CommandReplyRequest::Stage_MAX;
const int CommandReplyRequest::Stage_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void InitRequest::InitAsDefaultInstance() {
}
class InitRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitRequest::kInstanceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitRequest::InitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.InitRequest)
}
InitRequest::InitRequest(const InitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.gate.InitRequest)
}

void InitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InitRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InitRequest::~InitRequest() {
  // @@protoc_insertion_point(destructor:ric.gate.InitRequest)
  SharedDtor();
}

void InitRequest::SharedDtor() {
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InitRequest& InitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InitRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void InitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.InitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string instance_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.InitRequest.instance_id");
        object = msg->mutable_instance_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.InitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instance_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), static_cast<int>(this->instance_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.InitRequest.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.InitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.InitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.InitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.InitRequest.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instance_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.InitRequest)
}

::google::protobuf::uint8* InitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.InitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.InitRequest.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instance_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.InitRequest)
  return target;
}

size_t InitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.InitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.InitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<InitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.InitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.InitRequest)
    MergeFrom(*source);
  }
}

void InitRequest::MergeFrom(const InitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.InitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
}

void InitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.InitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitRequest::CopyFrom(const InitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.InitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitRequest::IsInitialized() const {
  return true;
}

void InitRequest::Swap(InitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitRequest::InternalSwap(InitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata InitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AuthRequest::InitAsDefaultInstance() {
}
class AuthRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRequest::kInstanceIdFieldNumber;
const int AuthRequest::kIdFieldNumber;
const int AuthRequest::kLoginFieldNumber;
const int AuthRequest::kPasswordFieldNumber;
const int AuthRequest::kIsBotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRequest::AuthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.AuthRequest)
}
AuthRequest::AuthRequest(const AuthRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  login_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login().size() > 0) {
    login_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  is_bot_ = from.is_bot_;
  // @@protoc_insertion_point(copy_constructor:ric.gate.AuthRequest)
}

void AuthRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AuthRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_bot_ = false;
}

AuthRequest::~AuthRequest() {
  // @@protoc_insertion_point(destructor:ric.gate.AuthRequest)
  SharedDtor();
}

void AuthRequest::SharedDtor() {
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthRequest& AuthRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AuthRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void AuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.AuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_bot_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AuthRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AuthRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string instance_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.AuthRequest.instance_id");
        object = msg->mutable_instance_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.AuthRequest.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string login = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.AuthRequest.login");
        object = msg->mutable_login();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.AuthRequest.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool is_bot = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_is_bot(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AuthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.AuthRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instance_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), static_cast<int>(this->instance_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.AuthRequest.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.AuthRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login().data(), static_cast<int>(this->login().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.AuthRequest.login"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.AuthRequest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_bot = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_bot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.AuthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.AuthRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AuthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.AuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthRequest.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instance_id(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string login = 3;
  if (this->login().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login().data(), static_cast<int>(this->login().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthRequest.login");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->login(), output);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // bool is_bot = 5;
  if (this->is_bot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_bot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.AuthRequest)
}

::google::protobuf::uint8* AuthRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.AuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthRequest.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instance_id(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string login = 3;
  if (this->login().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login().data(), static_cast<int>(this->login().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthRequest.login");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->login(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // bool is_bot = 5;
  if (this->is_bot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_bot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.AuthRequest)
  return target;
}

size_t AuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.AuthRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string login = 3;
  if (this->login().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // bool is_bot = 5;
  if (this->is_bot() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.AuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRequest* source =
      ::google::protobuf::DynamicCastToGenerated<AuthRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.AuthRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.AuthRequest)
    MergeFrom(*source);
  }
}

void AuthRequest::MergeFrom(const AuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.AuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.login().size() > 0) {

    login_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.is_bot() != 0) {
    set_is_bot(from.is_bot());
  }
}

void AuthRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.AuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRequest::CopyFrom(const AuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.AuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRequest::IsInitialized() const {
  return true;
}

void AuthRequest::Swap(AuthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRequest::InternalSwap(AuthRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  login_.Swap(&other->login_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_bot_, other->is_bot_);
}

::google::protobuf::Metadata AuthRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LimitingParams::InitAsDefaultInstance() {
}
class LimitingParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LimitingParams::kPacketSizeFieldNumber;
const int LimitingParams::kPacketFrequencyFieldNumber;
const int LimitingParams::kExcessesAllowedFieldNumber;
const int LimitingParams::kCurrentPacketsFieldNumber;
const int LimitingParams::kCurrentExcessesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LimitingParams::LimitingParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.LimitingParams)
}
LimitingParams::LimitingParams(const LimitingParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packet_size_, &from.packet_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&current_excesses_) -
    reinterpret_cast<char*>(&packet_size_)) + sizeof(current_excesses_));
  // @@protoc_insertion_point(copy_constructor:ric.gate.LimitingParams)
}

void LimitingParams::SharedCtor() {
  ::memset(&packet_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_excesses_) -
      reinterpret_cast<char*>(&packet_size_)) + sizeof(current_excesses_));
}

LimitingParams::~LimitingParams() {
  // @@protoc_insertion_point(destructor:ric.gate.LimitingParams)
  SharedDtor();
}

void LimitingParams::SharedDtor() {
}

void LimitingParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LimitingParams& LimitingParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LimitingParams_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void LimitingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.LimitingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&packet_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_excesses_) -
      reinterpret_cast<char*>(&packet_size_)) + sizeof(current_excesses_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LimitingParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LimitingParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float packet_size = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_packet_size(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float packet_frequency = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_packet_frequency(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float excesses_allowed = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_excesses_allowed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float current_packets = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_current_packets(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float current_excesses = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_current_excesses(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LimitingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.LimitingParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float packet_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &packet_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float packet_frequency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &packet_frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float excesses_allowed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &excesses_allowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float current_packets = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &current_packets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float current_excesses = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &current_excesses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.LimitingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.LimitingParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LimitingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.LimitingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float packet_size = 1;
  if (this->packet_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->packet_size(), output);
  }

  // float packet_frequency = 2;
  if (this->packet_frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->packet_frequency(), output);
  }

  // float excesses_allowed = 3;
  if (this->excesses_allowed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->excesses_allowed(), output);
  }

  // float current_packets = 4;
  if (this->current_packets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->current_packets(), output);
  }

  // float current_excesses = 5;
  if (this->current_excesses() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->current_excesses(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.LimitingParams)
}

::google::protobuf::uint8* LimitingParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.LimitingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float packet_size = 1;
  if (this->packet_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->packet_size(), target);
  }

  // float packet_frequency = 2;
  if (this->packet_frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->packet_frequency(), target);
  }

  // float excesses_allowed = 3;
  if (this->excesses_allowed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->excesses_allowed(), target);
  }

  // float current_packets = 4;
  if (this->current_packets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->current_packets(), target);
  }

  // float current_excesses = 5;
  if (this->current_excesses() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->current_excesses(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.LimitingParams)
  return target;
}

size_t LimitingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.LimitingParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float packet_size = 1;
  if (this->packet_size() != 0) {
    total_size += 1 + 4;
  }

  // float packet_frequency = 2;
  if (this->packet_frequency() != 0) {
    total_size += 1 + 4;
  }

  // float excesses_allowed = 3;
  if (this->excesses_allowed() != 0) {
    total_size += 1 + 4;
  }

  // float current_packets = 4;
  if (this->current_packets() != 0) {
    total_size += 1 + 4;
  }

  // float current_excesses = 5;
  if (this->current_excesses() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LimitingParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.LimitingParams)
  GOOGLE_DCHECK_NE(&from, this);
  const LimitingParams* source =
      ::google::protobuf::DynamicCastToGenerated<LimitingParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.LimitingParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.LimitingParams)
    MergeFrom(*source);
  }
}

void LimitingParams::MergeFrom(const LimitingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.LimitingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.packet_size() != 0) {
    set_packet_size(from.packet_size());
  }
  if (from.packet_frequency() != 0) {
    set_packet_frequency(from.packet_frequency());
  }
  if (from.excesses_allowed() != 0) {
    set_excesses_allowed(from.excesses_allowed());
  }
  if (from.current_packets() != 0) {
    set_current_packets(from.current_packets());
  }
  if (from.current_excesses() != 0) {
    set_current_excesses(from.current_excesses());
  }
}

void LimitingParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.LimitingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LimitingParams::CopyFrom(const LimitingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.LimitingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LimitingParams::IsInitialized() const {
  return true;
}

void LimitingParams::Swap(LimitingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LimitingParams::InternalSwap(LimitingParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(packet_size_, other->packet_size_);
  swap(packet_frequency_, other->packet_frequency_);
  swap(excesses_allowed_, other->excesses_allowed_);
  swap(current_packets_, other->current_packets_);
  swap(current_excesses_, other->current_excesses_);
}

::google::protobuf::Metadata LimitingParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AuthResponse::InitAsDefaultInstance() {
  ::ric::gate::_AuthResponse_default_instance_._instance.get_mutable()->limits_ = const_cast< ::ric::gate::LimitingParams*>(
      ::ric::gate::LimitingParams::internal_default_instance());
}
class AuthResponse::HasBitSetters {
 public:
  static const ::ric::gate::LimitingParams& limits(const AuthResponse* msg);
};

const ::ric::gate::LimitingParams&
AuthResponse::HasBitSetters::limits(const AuthResponse* msg) {
  return *msg->limits_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthResponse::kObjectIdFieldNumber;
const int AuthResponse::kGroupIdFieldNumber;
const int AuthResponse::kLicenseIdFieldNumber;
const int AuthResponse::kSessionIdFieldNumber;
const int AuthResponse::kConfigFieldNumber;
const int AuthResponse::kLimitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthResponse::AuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.AuthResponse)
}
AuthResponse::AuthResponse(const AuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_id().size() > 0) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  license_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.license_id().size() > 0) {
    license_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_id_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config().size() > 0) {
    config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_);
  }
  if (from.has_limits()) {
    limits_ = new ::ric::gate::LimitingParams(*from.limits_);
  } else {
    limits_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ric.gate.AuthResponse)
}

void AuthResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AuthResponse_ric_2dgate_2fric_2dgate_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limits_ = nullptr;
}

AuthResponse::~AuthResponse() {
  // @@protoc_insertion_point(destructor:ric.gate.AuthResponse)
  SharedDtor();
}

void AuthResponse::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete limits_;
}

void AuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthResponse& AuthResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AuthResponse_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void AuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.AuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && limits_ != nullptr) {
    delete limits_;
  }
  limits_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AuthResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AuthResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.AuthResponse.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string group_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.AuthResponse.group_id");
        object = msg->mutable_group_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string license_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.AuthResponse.license_id");
        object = msg->mutable_license_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string session_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.AuthResponse.session_id");
        object = msg->mutable_session_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes config = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_config();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ric.gate.LimitingParams limits = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::gate::LimitingParams::_InternalParse;
        object = msg->mutable_limits();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.AuthResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.AuthResponse.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.AuthResponse.group_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string license_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_license_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->license_id().data(), static_cast<int>(this->license_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.AuthResponse.license_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.AuthResponse.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.gate.LimitingParams limits = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_limits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.AuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.AuthResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.AuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthResponse.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthResponse.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  // string license_id = 3;
  if (this->license_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->license_id().data(), static_cast<int>(this->license_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthResponse.license_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->license_id(), output);
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthResponse.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->session_id(), output);
  }

  // bytes config = 5;
  if (this->config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->config(), output);
  }

  // .ric.gate.LimitingParams limits = 6;
  if (this->has_limits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::limits(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.AuthResponse)
}

::google::protobuf::uint8* AuthResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.AuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthResponse.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthResponse.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  // string license_id = 3;
  if (this->license_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->license_id().data(), static_cast<int>(this->license_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthResponse.license_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->license_id(), target);
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.AuthResponse.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->session_id(), target);
  }

  // bytes config = 5;
  if (this->config().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->config(), target);
  }

  // .ric.gate.LimitingParams limits = 6;
  if (this->has_limits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::limits(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.AuthResponse)
  return target;
}

size_t AuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.AuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // string group_id = 2;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  // string license_id = 3;
  if (this->license_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->license_id());
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // bytes config = 5;
  if (this->config().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->config());
  }

  // .ric.gate.LimitingParams limits = 6;
  if (this->has_limits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *limits_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.AuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthResponse* source =
      ::google::protobuf::DynamicCastToGenerated<AuthResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.AuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.AuthResponse)
    MergeFrom(*source);
  }
}

void AuthResponse::MergeFrom(const AuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.AuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.group_id().size() > 0) {

    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  if (from.license_id().size() > 0) {

    license_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_id_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.config().size() > 0) {

    config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_);
  }
  if (from.has_limits()) {
    mutable_limits()->::ric::gate::LimitingParams::MergeFrom(from.limits());
  }
}

void AuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.AuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthResponse::CopyFrom(const AuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.AuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthResponse::IsInitialized() const {
  return true;
}

void AuthResponse::Swap(AuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthResponse::InternalSwap(AuthResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_id_.Swap(&other->group_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  license_id_.Swap(&other->license_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  config_.Swap(&other->config_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(limits_, other->limits_);
}

::google::protobuf::Metadata AuthResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DataRequest::InitAsDefaultInstance() {
}
class DataRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequest::kInstanceIdFieldNumber;
const int DataRequest::kObjectIdFieldNumber;
const int DataRequest::kDataFieldNumber;
const int DataRequest::kBinaryDataFieldNumber;
const int DataRequest::kDataTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequest::DataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.DataRequest)
}
DataRequest::DataRequest(const DataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  binary_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binary_data().size() > 0) {
    binary_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_data_);
  }
  data_type_ = from.data_type_;
  // @@protoc_insertion_point(copy_constructor:ric.gate.DataRequest)
}

void DataRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DataRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_ = 0;
}

DataRequest::~DataRequest() {
  // @@protoc_insertion_point(destructor:ric.gate.DataRequest)
  SharedDtor();
}

void DataRequest::SharedDtor() {
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataRequest& DataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DataRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void DataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DataRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DataRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string instance_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.DataRequest.instance_id");
        object = msg->mutable_instance_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string object_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.DataRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes binary_data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_binary_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ric.gate.DataRequest.DataType data_type = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_data_type(static_cast<::ric::gate::DataRequest_DataType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.DataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instance_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), static_cast<int>(this->instance_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.DataRequest.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string object_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.DataRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes binary_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_binary_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.gate.DataRequest.DataType data_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_data_type(static_cast< ::ric::gate::DataRequest_DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.DataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.DataRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.DataRequest.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instance_id(), output);
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.DataRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->object_id(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // bytes binary_data = 4;
  if (this->binary_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->binary_data(), output);
  }

  // .ric.gate.DataRequest.DataType data_type = 5;
  if (this->data_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->data_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.DataRequest)
}

::google::protobuf::uint8* DataRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.DataRequest.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instance_id(), target);
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.DataRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->object_id(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // bytes binary_data = 4;
  if (this->binary_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->binary_data(), target);
  }

  // .ric.gate.DataRequest.DataType data_type = 5;
  if (this->data_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->data_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.DataRequest)
  return target;
}

size_t DataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.DataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // bytes binary_data = 4;
  if (this->binary_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->binary_data());
  }

  // .ric.gate.DataRequest.DataType data_type = 5;
  if (this->data_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.DataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.DataRequest)
    MergeFrom(*source);
  }
}

void DataRequest::MergeFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.binary_data().size() > 0) {

    binary_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_data_);
  }
  if (from.data_type() != 0) {
    set_data_type(from.data_type());
  }
}

void DataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequest::CopyFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequest::IsInitialized() const {
  return true;
}

void DataRequest::Swap(DataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequest::InternalSwap(DataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  binary_data_.Swap(&other->binary_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_type_, other->data_type_);
}

::google::protobuf::Metadata DataRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Ping::InitAsDefaultInstance() {
}
class Ping::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ping::kInstanceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.Ping)
}
Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.gate.Ping)
}

void Ping::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Ping_ric_2dgate_2fric_2dgate_2eproto.base);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:ric.gate.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Ping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ping& Ping::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Ping_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Ping::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Ping*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string instance_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.Ping.instance_id");
        object = msg->mutable_instance_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.Ping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instance_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), static_cast<int>(this->instance_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.Ping.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.Ping)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.Ping.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instance_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.Ping.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instance_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.Ping)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::DynamicCastToGenerated<Ping>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CommandReplyRequest::InitAsDefaultInstance() {
}
class CommandReplyRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandReplyRequest::kCommandIdFieldNumber;
const int CommandReplyRequest::kObjectIdFieldNumber;
const int CommandReplyRequest::kDataFieldNumber;
const int CommandReplyRequest::kStageFieldNumber;
const int CommandReplyRequest::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandReplyRequest::CommandReplyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.CommandReplyRequest)
}
CommandReplyRequest::CommandReplyRequest(const CommandReplyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command_id().size() > 0) {
    command_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_id_);
  }
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  stage_ = from.stage_;
  // @@protoc_insertion_point(copy_constructor:ric.gate.CommandReplyRequest)
}

void CommandReplyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CommandReplyRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  command_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stage_ = 0;
}

CommandReplyRequest::~CommandReplyRequest() {
  // @@protoc_insertion_point(destructor:ric.gate.CommandReplyRequest)
  SharedDtor();
}

void CommandReplyRequest::SharedDtor() {
  command_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommandReplyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommandReplyRequest& CommandReplyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CommandReplyRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void CommandReplyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.CommandReplyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stage_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CommandReplyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CommandReplyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string command_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.CommandReplyRequest.command_id");
        object = msg->mutable_command_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string object_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.CommandReplyRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ric.gate.CommandReplyRequest.Stage stage = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_stage(static_cast<::ric::gate::CommandReplyRequest_Stage>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.CommandReplyRequest.error");
        object = msg->mutable_error();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CommandReplyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.CommandReplyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string command_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command_id().data(), static_cast<int>(this->command_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.CommandReplyRequest.command_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string object_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.CommandReplyRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.gate.CommandReplyRequest.Stage stage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stage(static_cast< ::ric::gate::CommandReplyRequest_Stage >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.CommandReplyRequest.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.CommandReplyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.CommandReplyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CommandReplyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.CommandReplyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command_id = 1;
  if (this->command_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_id().data(), static_cast<int>(this->command_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.CommandReplyRequest.command_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command_id(), output);
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.CommandReplyRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->object_id(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // .ric.gate.CommandReplyRequest.Stage stage = 4;
  if (this->stage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->stage(), output);
  }

  // string error = 5;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.CommandReplyRequest.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.CommandReplyRequest)
}

::google::protobuf::uint8* CommandReplyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.CommandReplyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command_id = 1;
  if (this->command_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_id().data(), static_cast<int>(this->command_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.CommandReplyRequest.command_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command_id(), target);
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.CommandReplyRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->object_id(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // .ric.gate.CommandReplyRequest.Stage stage = 4;
  if (this->stage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->stage(), target);
  }

  // string error = 5;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.CommandReplyRequest.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.CommandReplyRequest)
  return target;
}

size_t CommandReplyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.CommandReplyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command_id = 1;
  if (this->command_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command_id());
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string error = 5;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .ric.gate.CommandReplyRequest.Stage stage = 4;
  if (this->stage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommandReplyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.CommandReplyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandReplyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CommandReplyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.CommandReplyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.CommandReplyRequest)
    MergeFrom(*source);
  }
}

void CommandReplyRequest::MergeFrom(const CommandReplyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.CommandReplyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command_id().size() > 0) {

    command_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_id_);
  }
  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.stage() != 0) {
    set_stage(from.stage());
  }
}

void CommandReplyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.CommandReplyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandReplyRequest::CopyFrom(const CommandReplyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.CommandReplyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandReplyRequest::IsInitialized() const {
  return true;
}

void CommandReplyRequest::Swap(CommandReplyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandReplyRequest::InternalSwap(CommandReplyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  command_id_.Swap(&other->command_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stage_, other->stage_);
}

::google::protobuf::Metadata CommandReplyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OfflineRequest::InitAsDefaultInstance() {
}
class OfflineRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineRequest::kInstanceIdFieldNumber;
const int OfflineRequest::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineRequest::OfflineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.OfflineRequest)
}
OfflineRequest::OfflineRequest(const OfflineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.gate.OfflineRequest)
}

void OfflineRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OfflineRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OfflineRequest::~OfflineRequest() {
  // @@protoc_insertion_point(destructor:ric.gate.OfflineRequest)
  SharedDtor();
}

void OfflineRequest::SharedDtor() {
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfflineRequest& OfflineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OfflineRequest_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void OfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.OfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OfflineRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OfflineRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string instance_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.OfflineRequest.instance_id");
        object = msg->mutable_instance_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string object_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.OfflineRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OfflineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.OfflineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instance_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), static_cast<int>(this->instance_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.OfflineRequest.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string object_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.OfflineRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.OfflineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.OfflineRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OfflineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.OfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.OfflineRequest.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instance_id(), output);
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.OfflineRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->object_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.OfflineRequest)
}

::google::protobuf::uint8* OfflineRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.OfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.OfflineRequest.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instance_id(), target);
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.OfflineRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->object_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.OfflineRequest)
  return target;
}

size_t OfflineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.OfflineRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.OfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineRequest* source =
      ::google::protobuf::DynamicCastToGenerated<OfflineRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.OfflineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.OfflineRequest)
    MergeFrom(*source);
  }
}

void OfflineRequest::MergeFrom(const OfflineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.OfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void OfflineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.OfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineRequest::CopyFrom(const OfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.OfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineRequest::IsInitialized() const {
  return true;
}

void OfflineRequest::Swap(OfflineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineRequest::InternalSwap(OfflineRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata OfflineRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Command::InitAsDefaultInstance() {
}
class Command::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kCommandIdFieldNumber;
const int Command::kObjectIdFieldNumber;
const int Command::kMethodFieldNumber;
const int Command::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command_id().size() > 0) {
    command_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_id_);
  }
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.params().size() > 0) {
    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.gate.Command)
}

void Command::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Command_ric_2dgate_2fric_2dgate_2eproto.base);
  command_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:ric.gate.Command)
  SharedDtor();
}

void Command::SharedDtor() {
  command_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Command& Command::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Command_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Command::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Command*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string command_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.Command.command_id");
        object = msg->mutable_command_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string object_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.Command.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string method = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.gate.Command.method");
        object = msg->mutable_method();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes params = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_params();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.Command)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string command_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command_id().data(), static_cast<int>(this->command_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.Command.command_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string object_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.Command.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.gate.Command.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.Command)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command_id = 1;
  if (this->command_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_id().data(), static_cast<int>(this->command_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.Command.command_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command_id(), output);
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.Command.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->object_id(), output);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.Command.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->method(), output);
  }

  // bytes params = 4;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->params(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command_id = 1;
  if (this->command_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_id().data(), static_cast<int>(this->command_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.Command.command_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command_id(), target);
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.Command.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->object_id(), target);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.gate.Command.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->method(), target);
  }

  // bytes params = 4;
  if (this->params().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->params(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.Command)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command_id = 1;
  if (this->command_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command_id());
  }

  // string object_id = 2;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // string method = 3;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // bytes params = 4;
  if (this->params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->params());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::google::protobuf::DynamicCastToGenerated<Command>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command_id().size() > 0) {

    command_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_id_);
  }
  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.params().size() > 0) {

    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  command_id_.Swap(&other->command_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  params_.Swap(&other->params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Command::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EmptyResponse::InitAsDefaultInstance() {
}
class EmptyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyResponse::EmptyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.gate.EmptyResponse)
}
EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ric.gate.EmptyResponse)
}

void EmptyResponse::SharedCtor() {
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:ric.gate.EmptyResponse)
  SharedDtor();
}

void EmptyResponse::SharedDtor() {
}

void EmptyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyResponse& EmptyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EmptyResponse_ric_2dgate_2fric_2dgate_2eproto.base);
  return *internal_default_instance();
}


void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.gate.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EmptyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EmptyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EmptyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.gate.EmptyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ric.gate.EmptyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.gate.EmptyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EmptyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.gate.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.gate.EmptyResponse)
}

::google::protobuf::uint8* EmptyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.gate.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.gate.EmptyResponse)
  return target;
}

size_t EmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.gate.EmptyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.gate.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EmptyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.gate.EmptyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.gate.EmptyResponse)
    MergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.gate.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.gate.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.gate.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {
  return true;
}

void EmptyResponse::Swap(EmptyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyResponse::InternalSwap(EmptyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmptyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dgate_2fric_2dgate_2eproto);
  return ::file_level_metadata_ric_2dgate_2fric_2dgate_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gate
}  // namespace ric
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ric::gate::InitRequest* Arena::CreateMaybeMessage< ::ric::gate::InitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::InitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::gate::AuthRequest* Arena::CreateMaybeMessage< ::ric::gate::AuthRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::AuthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::gate::LimitingParams* Arena::CreateMaybeMessage< ::ric::gate::LimitingParams >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::LimitingParams >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::gate::AuthResponse* Arena::CreateMaybeMessage< ::ric::gate::AuthResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::AuthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::gate::DataRequest* Arena::CreateMaybeMessage< ::ric::gate::DataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::DataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::gate::Ping* Arena::CreateMaybeMessage< ::ric::gate::Ping >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::Ping >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::gate::CommandReplyRequest* Arena::CreateMaybeMessage< ::ric::gate::CommandReplyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::CommandReplyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::gate::OfflineRequest* Arena::CreateMaybeMessage< ::ric::gate::OfflineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::OfflineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::gate::Command* Arena::CreateMaybeMessage< ::ric::gate::Command >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::Command >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::gate::EmptyResponse* Arena::CreateMaybeMessage< ::ric::gate::EmptyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::gate::EmptyResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
