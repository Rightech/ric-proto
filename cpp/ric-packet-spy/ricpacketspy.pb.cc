// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-packet-spy/ricpacketspy.proto

#include "ric-packet-spy/ricpacketspy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace ric {
namespace packet {
namespace spy {
class GetStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStateRequest> _instance;
} _GetStateRequest_default_instance_;
class GetStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStateResponse> _instance;
} _GetStateResponse_default_instance_;
class StartWatchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartWatchRequest> _instance;
} _StartWatchRequest_default_instance_;
class StartWatchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartWatchResponse> _instance;
} _StartWatchResponse_default_instance_;
class CancelWatchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelWatchRequest> _instance;
} _CancelWatchRequest_default_instance_;
class CancelWatchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelWatchResponse> _instance;
} _CancelWatchResponse_default_instance_;
class CommitModelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitModelRequest> _instance;
} _CommitModelRequest_default_instance_;
class CommitModelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitModelResponse> _instance;
} _CommitModelResponse_default_instance_;
class WatchUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchUpdateRequest> _instance;
} _WatchUpdateRequest_default_instance_;
class ObjectUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectUpdate> _instance;
} _ObjectUpdate_default_instance_;
}  // namespace spy
}  // namespace packet
}  // namespace ric
static void InitDefaultsGetStateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_GetStateRequest_default_instance_;
    new (ptr) ::ric::packet::spy::GetStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::GetStateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetStateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetStateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

static void InitDefaultsGetStateResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_GetStateResponse_default_instance_;
    new (ptr) ::ric::packet::spy::GetStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::GetStateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetStateResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetStateResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

static void InitDefaultsStartWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_StartWatchRequest_default_instance_;
    new (ptr) ::ric::packet::spy::StartWatchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::StartWatchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StartWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStartWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

static void InitDefaultsStartWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_StartWatchResponse_default_instance_;
    new (ptr) ::ric::packet::spy::StartWatchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::StartWatchResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StartWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStartWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

static void InitDefaultsCancelWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_CancelWatchRequest_default_instance_;
    new (ptr) ::ric::packet::spy::CancelWatchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::CancelWatchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CancelWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCancelWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

static void InitDefaultsCancelWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_CancelWatchResponse_default_instance_;
    new (ptr) ::ric::packet::spy::CancelWatchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::CancelWatchResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CancelWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCancelWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

static void InitDefaultsCommitModelRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_CommitModelRequest_default_instance_;
    new (ptr) ::ric::packet::spy::CommitModelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::CommitModelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommitModelRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommitModelRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

static void InitDefaultsCommitModelResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_CommitModelResponse_default_instance_;
    new (ptr) ::ric::packet::spy::CommitModelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::CommitModelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommitModelResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommitModelResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

static void InitDefaultsWatchUpdateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_WatchUpdateRequest_default_instance_;
    new (ptr) ::ric::packet::spy::WatchUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::WatchUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WatchUpdateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWatchUpdateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

static void InitDefaultsObjectUpdate_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::packet::spy::_ObjectUpdate_default_instance_;
    new (ptr) ::ric::packet::spy::ObjectUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::packet::spy::ObjectUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectUpdate_ric_2dpacket_2dspy_2fricpacketspy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectUpdate_ric_2dpacket_2dspy_2fricpacketspy_2eproto}, {}};

void InitDefaults_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetStateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStateResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommitModelRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommitModelResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WatchUpdateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectUpdate_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[10];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ric_2dpacket_2dspy_2fricpacketspy_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ric_2dpacket_2dspy_2fricpacketspy_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ric_2dpacket_2dspy_2fricpacketspy_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::GetStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::GetStateRequest, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::GetStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::GetStateResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::StartWatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::StartWatchRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::StartWatchRequest, timeout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::StartWatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::StartWatchResponse, timeout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::CancelWatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::CancelWatchRequest, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::CancelWatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::CommitModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::CommitModelRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::CommitModelRequest, fields_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::CommitModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::WatchUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::WatchUpdateRequest, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::ObjectUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::packet::spy::ObjectUpdate, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ric::packet::spy::GetStateRequest)},
  { 6, -1, sizeof(::ric::packet::spy::GetStateResponse)},
  { 12, -1, sizeof(::ric::packet::spy::StartWatchRequest)},
  { 19, -1, sizeof(::ric::packet::spy::StartWatchResponse)},
  { 25, -1, sizeof(::ric::packet::spy::CancelWatchRequest)},
  { 31, -1, sizeof(::ric::packet::spy::CancelWatchResponse)},
  { 36, -1, sizeof(::ric::packet::spy::CommitModelRequest)},
  { 43, -1, sizeof(::ric::packet::spy::CommitModelResponse)},
  { 48, -1, sizeof(::ric::packet::spy::WatchUpdateRequest)},
  { 54, -1, sizeof(::ric::packet::spy::ObjectUpdate)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_GetStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_GetStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_StartWatchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_StartWatchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_CancelWatchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_CancelWatchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_CommitModelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_CommitModelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_WatchUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::packet::spy::_ObjectUpdate_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto = {
  {}, AddDescriptors_ric_2dpacket_2dspy_2fricpacketspy_2eproto, "ric-packet-spy/ricpacketspy.proto", schemas,
  file_default_instances, TableStruct_ric_2dpacket_2dspy_2fricpacketspy_2eproto::offsets,
  file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto, 10, file_level_enum_descriptors_ric_2dpacket_2dspy_2fricpacketspy_2eproto, file_level_service_descriptors_ric_2dpacket_2dspy_2fricpacketspy_2eproto,
};

const char descriptor_table_protodef_ric_2dpacket_2dspy_2fricpacketspy_2eproto[] =
  "\n!ric-packet-spy/ricpacketspy.proto\022\016ric"
  ".packet.spy\"$\n\017GetStateRequest\022\021\n\tobject"
  "_id\030\001 \001(\t\" \n\020GetStateResponse\022\014\n\004data\030\001 "
  "\001(\014\"7\n\021StartWatchRequest\022\021\n\tobject_id\030\001 "
  "\001(\t\022\017\n\007timeout\030\002 \001(\003\"%\n\022StartWatchRespon"
  "se\022\017\n\007timeout\030\001 \001(\003\"\'\n\022CancelWatchReques"
  "t\022\021\n\tobject_id\030\001 \001(\t\"\025\n\023CancelWatchRespo"
  "nse\"7\n\022CommitModelRequest\022\021\n\tobject_id\030\001"
  " \001(\t\022\016\n\006fields\030\002 \003(\t\"\025\n\023CommitModelRespo"
  "nse\"\'\n\022WatchUpdateRequest\022\021\n\tobject_id\030\001"
  " \001(\t\"\034\n\014ObjectUpdate\022\014\n\004data\030\001 \001(\0142\265\003\n\014R"
  "icPacketSpy\022M\n\010GetState\022\037.ric.packet.spy"
  ".GetStateRequest\032 .ric.packet.spy.GetSta"
  "teResponse\022S\n\nStartWatch\022!.ric.packet.sp"
  "y.StartWatchRequest\032\".ric.packet.spy.Sta"
  "rtWatchResponse\022V\n\013CancelWatch\022\".ric.pac"
  "ket.spy.CancelWatchRequest\032#.ric.packet."
  "spy.CancelWatchResponse\022V\n\013CommitModel\022\""
  ".ric.packet.spy.CommitModelRequest\032#.ric"
  ".packet.spy.CommitModelResponse\022Q\n\013Watch"
  "Update\022\".ric.packet.spy.WatchUpdateReque"
  "st\032\034.ric.packet.spy.ObjectUpdate0\001B\037Z\035./"
  "ric-packet-spy;ricpacketspyb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto = {
  false, InitDefaults_ric_2dpacket_2dspy_2fricpacketspy_2eproto, 
  descriptor_table_protodef_ric_2dpacket_2dspy_2fricpacketspy_2eproto,
  "ric-packet-spy/ricpacketspy.proto", &assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto, 915,
};

void AddDescriptors_ric_2dpacket_2dspy_2fricpacketspy_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ric_2dpacket_2dspy_2fricpacketspy_2eproto = []() { AddDescriptors_ric_2dpacket_2dspy_2fricpacketspy_2eproto(); return true; }();
namespace ric {
namespace packet {
namespace spy {

// ===================================================================

void GetStateRequest::InitAsDefaultInstance() {
}
class GetStateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStateRequest::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStateRequest::GetStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.GetStateRequest)
}
GetStateRequest::GetStateRequest(const GetStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.GetStateRequest)
}

void GetStateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetStateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStateRequest::~GetStateRequest() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.GetStateRequest)
  SharedDtor();
}

void GetStateRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStateRequest& GetStateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetStateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void GetStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.GetStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetStateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetStateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.packet.spy.GetStateRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.GetStateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.packet.spy.GetStateRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.GetStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.GetStateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.GetStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.GetStateRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.GetStateRequest)
}

::google::protobuf::uint8* GetStateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.GetStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.GetStateRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.GetStateRequest)
  return target;
}

size_t GetStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.GetStateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.GetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.GetStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.GetStateRequest)
    MergeFrom(*source);
  }
}

void GetStateRequest::MergeFrom(const GetStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.GetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void GetStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.GetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateRequest::CopyFrom(const GetStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.GetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateRequest::IsInitialized() const {
  return true;
}

void GetStateRequest::Swap(GetStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStateRequest::InternalSwap(GetStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetStateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetStateResponse::InitAsDefaultInstance() {
}
class GetStateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStateResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStateResponse::GetStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.GetStateResponse)
}
GetStateResponse::GetStateResponse(const GetStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.GetStateResponse)
}

void GetStateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetStateResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStateResponse::~GetStateResponse() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.GetStateResponse)
  SharedDtor();
}

void GetStateResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStateResponse& GetStateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetStateResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void GetStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.GetStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetStateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetStateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.GetStateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.GetStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.GetStateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.GetStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.GetStateResponse)
}

::google::protobuf::uint8* GetStateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.GetStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.GetStateResponse)
  return target;
}

size_t GetStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.GetStateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.GetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetStateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.GetStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.GetStateResponse)
    MergeFrom(*source);
  }
}

void GetStateResponse::MergeFrom(const GetStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.GetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void GetStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.GetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateResponse::CopyFrom(const GetStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.GetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateResponse::IsInitialized() const {
  return true;
}

void GetStateResponse::Swap(GetStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStateResponse::InternalSwap(GetStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetStateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StartWatchRequest::InitAsDefaultInstance() {
}
class StartWatchRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartWatchRequest::kObjectIdFieldNumber;
const int StartWatchRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartWatchRequest::StartWatchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.StartWatchRequest)
}
StartWatchRequest::StartWatchRequest(const StartWatchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.StartWatchRequest)
}

void StartWatchRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StartWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = PROTOBUF_LONGLONG(0);
}

StartWatchRequest::~StartWatchRequest() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.StartWatchRequest)
  SharedDtor();
}

void StartWatchRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartWatchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartWatchRequest& StartWatchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StartWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void StartWatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.StartWatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StartWatchRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StartWatchRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.packet.spy.StartWatchRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 timeout = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_timeout(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StartWatchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.StartWatchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.packet.spy.StartWatchRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timeout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.StartWatchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.StartWatchRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StartWatchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.StartWatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.StartWatchRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // int64 timeout = 2;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.StartWatchRequest)
}

::google::protobuf::uint8* StartWatchRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.StartWatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.StartWatchRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // int64 timeout = 2;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.StartWatchRequest)
  return target;
}

size_t StartWatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.StartWatchRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // int64 timeout = 2;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartWatchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.StartWatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartWatchRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StartWatchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.StartWatchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.StartWatchRequest)
    MergeFrom(*source);
  }
}

void StartWatchRequest::MergeFrom(const StartWatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.StartWatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
}

void StartWatchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.StartWatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartWatchRequest::CopyFrom(const StartWatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.StartWatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartWatchRequest::IsInitialized() const {
  return true;
}

void StartWatchRequest::Swap(StartWatchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartWatchRequest::InternalSwap(StartWatchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timeout_, other->timeout_);
}

::google::protobuf::Metadata StartWatchRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StartWatchResponse::InitAsDefaultInstance() {
}
class StartWatchResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartWatchResponse::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartWatchResponse::StartWatchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.StartWatchResponse)
}
StartWatchResponse::StartWatchResponse(const StartWatchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.StartWatchResponse)
}

void StartWatchResponse::SharedCtor() {
  timeout_ = PROTOBUF_LONGLONG(0);
}

StartWatchResponse::~StartWatchResponse() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.StartWatchResponse)
  SharedDtor();
}

void StartWatchResponse::SharedDtor() {
}

void StartWatchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartWatchResponse& StartWatchResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StartWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void StartWatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.StartWatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeout_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StartWatchResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StartWatchResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 timeout = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_timeout(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StartWatchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.StartWatchResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timeout = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.StartWatchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.StartWatchResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StartWatchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.StartWatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timeout = 1;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.StartWatchResponse)
}

::google::protobuf::uint8* StartWatchResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.StartWatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timeout = 1;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.StartWatchResponse)
  return target;
}

size_t StartWatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.StartWatchResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 timeout = 1;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartWatchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.StartWatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartWatchResponse* source =
      ::google::protobuf::DynamicCastToGenerated<StartWatchResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.StartWatchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.StartWatchResponse)
    MergeFrom(*source);
  }
}

void StartWatchResponse::MergeFrom(const StartWatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.StartWatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
}

void StartWatchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.StartWatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartWatchResponse::CopyFrom(const StartWatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.StartWatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartWatchResponse::IsInitialized() const {
  return true;
}

void StartWatchResponse::Swap(StartWatchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartWatchResponse::InternalSwap(StartWatchResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(timeout_, other->timeout_);
}

::google::protobuf::Metadata StartWatchResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CancelWatchRequest::InitAsDefaultInstance() {
}
class CancelWatchRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelWatchRequest::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelWatchRequest::CancelWatchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.CancelWatchRequest)
}
CancelWatchRequest::CancelWatchRequest(const CancelWatchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.CancelWatchRequest)
}

void CancelWatchRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CancelWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CancelWatchRequest::~CancelWatchRequest() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.CancelWatchRequest)
  SharedDtor();
}

void CancelWatchRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelWatchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelWatchRequest& CancelWatchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CancelWatchRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void CancelWatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.CancelWatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CancelWatchRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CancelWatchRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.packet.spy.CancelWatchRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CancelWatchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.CancelWatchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.packet.spy.CancelWatchRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.CancelWatchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.CancelWatchRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CancelWatchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.CancelWatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.CancelWatchRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.CancelWatchRequest)
}

::google::protobuf::uint8* CancelWatchRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.CancelWatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.CancelWatchRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.CancelWatchRequest)
  return target;
}

size_t CancelWatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.CancelWatchRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelWatchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.CancelWatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelWatchRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CancelWatchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.CancelWatchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.CancelWatchRequest)
    MergeFrom(*source);
  }
}

void CancelWatchRequest::MergeFrom(const CancelWatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.CancelWatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void CancelWatchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.CancelWatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelWatchRequest::CopyFrom(const CancelWatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.CancelWatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelWatchRequest::IsInitialized() const {
  return true;
}

void CancelWatchRequest::Swap(CancelWatchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelWatchRequest::InternalSwap(CancelWatchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CancelWatchRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CancelWatchResponse::InitAsDefaultInstance() {
}
class CancelWatchResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelWatchResponse::CancelWatchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.CancelWatchResponse)
}
CancelWatchResponse::CancelWatchResponse(const CancelWatchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.CancelWatchResponse)
}

void CancelWatchResponse::SharedCtor() {
}

CancelWatchResponse::~CancelWatchResponse() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.CancelWatchResponse)
  SharedDtor();
}

void CancelWatchResponse::SharedDtor() {
}

void CancelWatchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelWatchResponse& CancelWatchResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CancelWatchResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void CancelWatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.CancelWatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CancelWatchResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CancelWatchResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CancelWatchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.CancelWatchResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.CancelWatchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.CancelWatchResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CancelWatchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.CancelWatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.CancelWatchResponse)
}

::google::protobuf::uint8* CancelWatchResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.CancelWatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.CancelWatchResponse)
  return target;
}

size_t CancelWatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.CancelWatchResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelWatchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.CancelWatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelWatchResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CancelWatchResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.CancelWatchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.CancelWatchResponse)
    MergeFrom(*source);
  }
}

void CancelWatchResponse::MergeFrom(const CancelWatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.CancelWatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CancelWatchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.CancelWatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelWatchResponse::CopyFrom(const CancelWatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.CancelWatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelWatchResponse::IsInitialized() const {
  return true;
}

void CancelWatchResponse::Swap(CancelWatchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelWatchResponse::InternalSwap(CancelWatchResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CancelWatchResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CommitModelRequest::InitAsDefaultInstance() {
}
class CommitModelRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitModelRequest::kObjectIdFieldNumber;
const int CommitModelRequest::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitModelRequest::CommitModelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.CommitModelRequest)
}
CommitModelRequest::CommitModelRequest(const CommitModelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.CommitModelRequest)
}

void CommitModelRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CommitModelRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CommitModelRequest::~CommitModelRequest() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.CommitModelRequest)
  SharedDtor();
}

void CommitModelRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommitModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommitModelRequest& CommitModelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CommitModelRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void CommitModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.CommitModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CommitModelRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CommitModelRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.packet.spy.CommitModelRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string fields = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ric.packet.spy.CommitModelRequest.fields");
          object = msg->add_fields();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CommitModelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.CommitModelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.packet.spy.CommitModelRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string fields = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fields()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fields(this->fields_size() - 1).data(),
            static_cast<int>(this->fields(this->fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.packet.spy.CommitModelRequest.fields"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.CommitModelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.CommitModelRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CommitModelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.CommitModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.CommitModelRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // repeated string fields = 2;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fields(i).data(), static_cast<int>(this->fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.CommitModelRequest.fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->fields(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.CommitModelRequest)
}

::google::protobuf::uint8* CommitModelRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.CommitModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.CommitModelRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // repeated string fields = 2;
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fields(i).data(), static_cast<int>(this->fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.CommitModelRequest.fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->fields(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.CommitModelRequest)
  return target;
}

size_t CommitModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.CommitModelRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string fields = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fields_size());
  for (int i = 0, n = this->fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fields(i));
  }

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommitModelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.CommitModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitModelRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CommitModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.CommitModelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.CommitModelRequest)
    MergeFrom(*source);
  }
}

void CommitModelRequest::MergeFrom(const CommitModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.CommitModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void CommitModelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.CommitModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitModelRequest::CopyFrom(const CommitModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.CommitModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitModelRequest::IsInitialized() const {
  return true;
}

void CommitModelRequest::Swap(CommitModelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitModelRequest::InternalSwap(CommitModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  fields_.InternalSwap(CastToBase(&other->fields_));
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CommitModelRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CommitModelResponse::InitAsDefaultInstance() {
}
class CommitModelResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitModelResponse::CommitModelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.CommitModelResponse)
}
CommitModelResponse::CommitModelResponse(const CommitModelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.CommitModelResponse)
}

void CommitModelResponse::SharedCtor() {
}

CommitModelResponse::~CommitModelResponse() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.CommitModelResponse)
  SharedDtor();
}

void CommitModelResponse::SharedDtor() {
}

void CommitModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommitModelResponse& CommitModelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CommitModelResponse_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void CommitModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.CommitModelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CommitModelResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CommitModelResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CommitModelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.CommitModelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.CommitModelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.CommitModelResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CommitModelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.CommitModelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.CommitModelResponse)
}

::google::protobuf::uint8* CommitModelResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.CommitModelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.CommitModelResponse)
  return target;
}

size_t CommitModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.CommitModelResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommitModelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.CommitModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitModelResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CommitModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.CommitModelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.CommitModelResponse)
    MergeFrom(*source);
  }
}

void CommitModelResponse::MergeFrom(const CommitModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.CommitModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CommitModelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.CommitModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitModelResponse::CopyFrom(const CommitModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.CommitModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitModelResponse::IsInitialized() const {
  return true;
}

void CommitModelResponse::Swap(CommitModelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitModelResponse::InternalSwap(CommitModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommitModelResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WatchUpdateRequest::InitAsDefaultInstance() {
}
class WatchUpdateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchUpdateRequest::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchUpdateRequest::WatchUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.WatchUpdateRequest)
}
WatchUpdateRequest::WatchUpdateRequest(const WatchUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.WatchUpdateRequest)
}

void WatchUpdateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WatchUpdateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WatchUpdateRequest::~WatchUpdateRequest() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.WatchUpdateRequest)
  SharedDtor();
}

void WatchUpdateRequest::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WatchUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WatchUpdateRequest& WatchUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WatchUpdateRequest_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void WatchUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.WatchUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WatchUpdateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WatchUpdateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string object_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.packet.spy.WatchUpdateRequest.object_id");
        object = msg->mutable_object_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WatchUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.WatchUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.packet.spy.WatchUpdateRequest.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.WatchUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.WatchUpdateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WatchUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.WatchUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.WatchUpdateRequest.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.WatchUpdateRequest)
}

::google::protobuf::uint8* WatchUpdateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.WatchUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.packet.spy.WatchUpdateRequest.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.WatchUpdateRequest)
  return target;
}

size_t WatchUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.WatchUpdateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WatchUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.WatchUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchUpdateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<WatchUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.WatchUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.WatchUpdateRequest)
    MergeFrom(*source);
  }
}

void WatchUpdateRequest::MergeFrom(const WatchUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.WatchUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void WatchUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.WatchUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchUpdateRequest::CopyFrom(const WatchUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.WatchUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchUpdateRequest::IsInitialized() const {
  return true;
}

void WatchUpdateRequest::Swap(WatchUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchUpdateRequest::InternalSwap(WatchUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata WatchUpdateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ObjectUpdate::InitAsDefaultInstance() {
}
class ObjectUpdate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectUpdate::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectUpdate::ObjectUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.packet.spy.ObjectUpdate)
}
ObjectUpdate::ObjectUpdate(const ObjectUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.packet.spy.ObjectUpdate)
}

void ObjectUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ObjectUpdate_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ObjectUpdate::~ObjectUpdate() {
  // @@protoc_insertion_point(destructor:ric.packet.spy.ObjectUpdate)
  SharedDtor();
}

void ObjectUpdate::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ObjectUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectUpdate& ObjectUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ObjectUpdate_ric_2dpacket_2dspy_2fricpacketspy_2eproto.base);
  return *internal_default_instance();
}


void ObjectUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.packet.spy.ObjectUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ObjectUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ObjectUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ObjectUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.packet.spy.ObjectUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.packet.spy.ObjectUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.packet.spy.ObjectUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ObjectUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.packet.spy.ObjectUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.packet.spy.ObjectUpdate)
}

::google::protobuf::uint8* ObjectUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.packet.spy.ObjectUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.packet.spy.ObjectUpdate)
  return target;
}

size_t ObjectUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.packet.spy.ObjectUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.packet.spy.ObjectUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<ObjectUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.packet.spy.ObjectUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.packet.spy.ObjectUpdate)
    MergeFrom(*source);
  }
}

void ObjectUpdate::MergeFrom(const ObjectUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.packet.spy.ObjectUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ObjectUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.packet.spy.ObjectUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectUpdate::CopyFrom(const ObjectUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.packet.spy.ObjectUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectUpdate::IsInitialized() const {
  return true;
}

void ObjectUpdate::Swap(ObjectUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectUpdate::InternalSwap(ObjectUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ObjectUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dpacket_2dspy_2fricpacketspy_2eproto);
  return ::file_level_metadata_ric_2dpacket_2dspy_2fricpacketspy_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace spy
}  // namespace packet
}  // namespace ric
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ric::packet::spy::GetStateRequest* Arena::CreateMaybeMessage< ::ric::packet::spy::GetStateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::GetStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::packet::spy::GetStateResponse* Arena::CreateMaybeMessage< ::ric::packet::spy::GetStateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::GetStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::packet::spy::StartWatchRequest* Arena::CreateMaybeMessage< ::ric::packet::spy::StartWatchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::StartWatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::packet::spy::StartWatchResponse* Arena::CreateMaybeMessage< ::ric::packet::spy::StartWatchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::StartWatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::packet::spy::CancelWatchRequest* Arena::CreateMaybeMessage< ::ric::packet::spy::CancelWatchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::CancelWatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::packet::spy::CancelWatchResponse* Arena::CreateMaybeMessage< ::ric::packet::spy::CancelWatchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::CancelWatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::packet::spy::CommitModelRequest* Arena::CreateMaybeMessage< ::ric::packet::spy::CommitModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::CommitModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::packet::spy::CommitModelResponse* Arena::CreateMaybeMessage< ::ric::packet::spy::CommitModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::CommitModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::packet::spy::WatchUpdateRequest* Arena::CreateMaybeMessage< ::ric::packet::spy::WatchUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::WatchUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::packet::spy::ObjectUpdate* Arena::CreateMaybeMessage< ::ric::packet::spy::ObjectUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::ric::packet::spy::ObjectUpdate >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
