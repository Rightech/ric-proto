// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-bill/ricbill.proto

#include "ric-bill/ricbill.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ric_2dbill_2fricbill_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DryRun_ric_2dbill_2fricbill_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ric_2dbill_2fricbill_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserContext_ric_2dbill_2fricbill_2eproto;
namespace ric {
namespace bill {
class UserContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserContext> _instance;
} _UserContext_default_instance_;
class SetupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupRequest> _instance;
} _SetupRequest_default_instance_;
class SetupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupResponse> _instance;
} _SetupResponse_default_instance_;
class DryRunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DryRun> _instance;
} _DryRun_default_instance_;
class SubscriptionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscriptionRequest> _instance;
} _SubscriptionRequest_default_instance_;
class SubscriptionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscriptionResponse> _instance;
} _SubscriptionResponse_default_instance_;
class ReceiptRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReceiptRequest> _instance;
} _ReceiptRequest_default_instance_;
class ReceiptResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReceiptResponse> _instance;
} _ReceiptResponse_default_instance_;
}  // namespace bill
}  // namespace ric
static void InitDefaultsUserContext_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_UserContext_default_instance_;
    new (ptr) ::ric::bill::UserContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::UserContext::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserContext_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserContext_ric_2dbill_2fricbill_2eproto}, {}};

static void InitDefaultsSetupRequest_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_SetupRequest_default_instance_;
    new (ptr) ::ric::bill::SetupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::SetupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetupRequest_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetupRequest_ric_2dbill_2fricbill_2eproto}, {
      &scc_info_UserContext_ric_2dbill_2fricbill_2eproto.base,}};

static void InitDefaultsSetupResponse_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_SetupResponse_default_instance_;
    new (ptr) ::ric::bill::SetupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::SetupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetupResponse_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetupResponse_ric_2dbill_2fricbill_2eproto}, {}};

static void InitDefaultsDryRun_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_DryRun_default_instance_;
    new (ptr) ::ric::bill::DryRun();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::DryRun::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DryRun_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDryRun_ric_2dbill_2fricbill_2eproto}, {}};

static void InitDefaultsSubscriptionRequest_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_SubscriptionRequest_default_instance_;
    new (ptr) ::ric::bill::SubscriptionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::SubscriptionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SubscriptionRequest_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSubscriptionRequest_ric_2dbill_2fricbill_2eproto}, {
      &scc_info_UserContext_ric_2dbill_2fricbill_2eproto.base,}};

static void InitDefaultsSubscriptionResponse_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_SubscriptionResponse_default_instance_;
    new (ptr) ::ric::bill::SubscriptionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::SubscriptionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SubscriptionResponse_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSubscriptionResponse_ric_2dbill_2fricbill_2eproto}, {
      &scc_info_DryRun_ric_2dbill_2fricbill_2eproto.base,}};

static void InitDefaultsReceiptRequest_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_ReceiptRequest_default_instance_;
    new (ptr) ::ric::bill::ReceiptRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::ReceiptRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReceiptRequest_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReceiptRequest_ric_2dbill_2fricbill_2eproto}, {}};

static void InitDefaultsReceiptResponse_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_ReceiptResponse_default_instance_;
    new (ptr) ::ric::bill::ReceiptResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::ReceiptResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReceiptResponse_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReceiptResponse_ric_2dbill_2fricbill_2eproto}, {}};

void InitDefaults_ric_2dbill_2fricbill_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_UserContext_ric_2dbill_2fricbill_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetupRequest_ric_2dbill_2fricbill_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetupResponse_ric_2dbill_2fricbill_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DryRun_ric_2dbill_2fricbill_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscriptionRequest_ric_2dbill_2fricbill_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscriptionResponse_ric_2dbill_2fricbill_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReceiptRequest_ric_2dbill_2fricbill_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReceiptResponse_ric_2dbill_2fricbill_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ric_2dbill_2fricbill_2eproto[8];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ric_2dbill_2fricbill_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ric_2dbill_2fricbill_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ric_2dbill_2fricbill_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::UserContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bill::UserContext, group_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::UserContext, user_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::UserContext, span_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::SetupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bill::SetupRequest, ctx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::SetupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bill::SetupResponse, binding_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::SetupResponse, widget_params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::DryRun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bill::DryRun, amount_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::DryRun, currency_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::DryRun, next_pay_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::DryRun, messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionRequest, ctx_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionRequest, license_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionRequest, dry_run_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionRequest, params_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionRequest, group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionResponse, payment_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionResponse, job_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionResponse, dry_run_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::SubscriptionResponse, license_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::ReceiptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ric::bill::ReceiptRequest, payment_id_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::ReceiptRequest, payment_gate_),
  PROTOBUF_FIELD_OFFSET(::ric::bill::ReceiptRequest, params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::ReceiptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ric::bill::UserContext)},
  { 8, -1, sizeof(::ric::bill::SetupRequest)},
  { 14, -1, sizeof(::ric::bill::SetupResponse)},
  { 21, -1, sizeof(::ric::bill::DryRun)},
  { 30, -1, sizeof(::ric::bill::SubscriptionRequest)},
  { 40, -1, sizeof(::ric::bill::SubscriptionResponse)},
  { 49, -1, sizeof(::ric::bill::ReceiptRequest)},
  { 57, -1, sizeof(::ric::bill::ReceiptResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_UserContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_SetupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_SetupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_DryRun_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_SubscriptionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_SubscriptionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_ReceiptRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_ReceiptResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ric_2dbill_2fricbill_2eproto = {
  {}, AddDescriptors_ric_2dbill_2fricbill_2eproto, "ric-bill/ricbill.proto", schemas,
  file_default_instances, TableStruct_ric_2dbill_2fricbill_2eproto::offsets,
  file_level_metadata_ric_2dbill_2fricbill_2eproto, 8, file_level_enum_descriptors_ric_2dbill_2fricbill_2eproto, file_level_service_descriptors_ric_2dbill_2fricbill_2eproto,
};

const char descriptor_table_protodef_ric_2dbill_2fricbill_2eproto[] =
  "\n\026ric-bill/ricbill.proto\022\010ric.bill\"A\n\013Us"
  "erContext\022\020\n\010group_id\030\001 \001(\t\022\017\n\007user_id\030\002"
  " \001(\t\022\017\n\007span_id\030\003 \001(\t\"2\n\014SetupRequest\022\"\n"
  "\003ctx\030\001 \001(\0132\025.ric.bill.UserContext\":\n\rSet"
  "upResponse\022\022\n\nbinding_id\030\001 \001(\t\022\025\n\rwidget"
  "_params\030\002 \001(\t\"N\n\006DryRun\022\016\n\006amount\030\001 \001(\t\022"
  "\020\n\010currency\030\002 \001(\t\022\020\n\010next_pay\030\003 \001(\003\022\020\n\010m"
  "essages\030\004 \003(\t\"\200\001\n\023SubscriptionRequest\022\"\n"
  "\003ctx\030\001 \001(\0132\025.ric.bill.UserContext\022\022\n\nlic"
  "ense_id\030\002 \001(\t\022\017\n\007dry_run\030\003 \001(\010\022\016\n\006params"
  "\030\004 \001(\t\022\020\n\010group_id\030\005 \001(\t\"q\n\024Subscription"
  "Response\022\022\n\npayment_id\030\001 \001(\t\022\016\n\006job_id\030\002"
  " \001(\t\022!\n\007dry_run\030\003 \001(\0132\020.ric.bill.DryRun\022"
  "\022\n\nlicense_id\030\004 \001(\t\"J\n\016ReceiptRequest\022\022\n"
  "\npayment_id\030\001 \001(\t\022\024\n\014payment_gate\030\002 \001(\t\022"
  "\016\n\006params\030\003 \001(\t\"\021\n\017ReceiptResponse2\225\006\n\007B"
  "illing\022\?\n\014SetupAccount\022\026.ric.bill.SetupR"
  "equest\032\027.ric.bill.SetupResponse\022@\n\rVerif"
  "yAccount\022\026.ric.bill.SetupRequest\032\027.ric.b"
  "ill.SetupResponse\022\?\n\014CloseAccount\022\026.ric."
  "bill.SetupRequest\032\027.ric.bill.SetupRespon"
  "se\022S\n\022CreateSubscription\022\035.ric.bill.Subs"
  "criptionRequest\032\036.ric.bill.SubscriptionR"
  "esponse\022S\n\022UpdateSubscription\022\035.ric.bill"
  ".SubscriptionRequest\032\036.ric.bill.Subscrip"
  "tionResponse\022S\n\022CancelSubscription\022\035.ric"
  ".bill.SubscriptionRequest\032\036.ric.bill.Sub"
  "scriptionResponse\022S\n\022ResumeSubscription\022"
  "\035.ric.bill.SubscriptionRequest\032\036.ric.bil"
  "l.SubscriptionResponse\022U\n\024ActivateSubscr"
  "iption\022\035.ric.bill.SubscriptionRequest\032\036."
  "ric.bill.SubscriptionResponse\022W\n\026Deactiv"
  "ateSubscription\022\035.ric.bill.SubscriptionR"
  "equest\032\036.ric.bill.SubscriptionResponse\022B"
  "\n\013SendReceipt\022\030.ric.bill.ReceiptRequest\032"
  "\031.ric.bill.ReceiptResponseB\024Z\022./ric-bill"
  ";ricbillb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ric_2dbill_2fricbill_2eproto = {
  false, InitDefaults_ric_2dbill_2fricbill_2eproto, 
  descriptor_table_protodef_ric_2dbill_2fricbill_2eproto,
  "ric-bill/ricbill.proto", &assign_descriptors_table_ric_2dbill_2fricbill_2eproto, 1456,
};

void AddDescriptors_ric_2dbill_2fricbill_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ric_2dbill_2fricbill_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ric_2dbill_2fricbill_2eproto = []() { AddDescriptors_ric_2dbill_2fricbill_2eproto(); return true; }();
namespace ric {
namespace bill {

// ===================================================================

void UserContext::InitAsDefaultInstance() {
}
class UserContext::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserContext::kGroupIdFieldNumber;
const int UserContext::kUserIdFieldNumber;
const int UserContext::kSpanIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserContext::UserContext()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.UserContext)
}
UserContext::UserContext(const UserContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_id().size() > 0) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  span_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.span_id().size() > 0) {
    span_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.span_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.bill.UserContext)
}

void UserContext::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserContext_ric_2dbill_2fricbill_2eproto.base);
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  span_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserContext::~UserContext() {
  // @@protoc_insertion_point(destructor:ric.bill.UserContext)
  SharedDtor();
}

void UserContext::SharedDtor() {
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  span_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserContext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserContext& UserContext::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserContext_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void UserContext::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.UserContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  span_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserContext::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserContext*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string group_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.UserContext.group_id");
        object = msg->mutable_group_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.UserContext.user_id");
        object = msg->mutable_user_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string span_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.UserContext.span_id");
        object = msg->mutable_span_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.UserContext)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.UserContext.group_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.UserContext.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string span_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_span_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->span_id().data(), static_cast<int>(this->span_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.UserContext.span_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.UserContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.UserContext)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.UserContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_id = 1;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.UserContext.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.UserContext.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string span_id = 3;
  if (this->span_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->span_id().data(), static_cast<int>(this->span_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.UserContext.span_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->span_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.UserContext)
}

::google::protobuf::uint8* UserContext::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.UserContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_id = 1;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.UserContext.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.UserContext.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string span_id = 3;
  if (this->span_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->span_id().data(), static_cast<int>(this->span_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.UserContext.span_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->span_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.UserContext)
  return target;
}

size_t UserContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.UserContext)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string group_id = 1;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string span_id = 3;
  if (this->span_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->span_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.UserContext)
  GOOGLE_DCHECK_NE(&from, this);
  const UserContext* source =
      ::google::protobuf::DynamicCastToGenerated<UserContext>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.UserContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.UserContext)
    MergeFrom(*source);
  }
}

void UserContext::MergeFrom(const UserContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.UserContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id().size() > 0) {

    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.span_id().size() > 0) {

    span_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.span_id_);
  }
}

void UserContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.UserContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserContext::CopyFrom(const UserContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.UserContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserContext::IsInitialized() const {
  return true;
}

void UserContext::Swap(UserContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserContext::InternalSwap(UserContext* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  group_id_.Swap(&other->group_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  span_id_.Swap(&other->span_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UserContext::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetupRequest::InitAsDefaultInstance() {
  ::ric::bill::_SetupRequest_default_instance_._instance.get_mutable()->ctx_ = const_cast< ::ric::bill::UserContext*>(
      ::ric::bill::UserContext::internal_default_instance());
}
class SetupRequest::HasBitSetters {
 public:
  static const ::ric::bill::UserContext& ctx(const SetupRequest* msg);
};

const ::ric::bill::UserContext&
SetupRequest::HasBitSetters::ctx(const SetupRequest* msg) {
  return *msg->ctx_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupRequest::kCtxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupRequest::SetupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.SetupRequest)
}
SetupRequest::SetupRequest(const SetupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ctx()) {
    ctx_ = new ::ric::bill::UserContext(*from.ctx_);
  } else {
    ctx_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ric.bill.SetupRequest)
}

void SetupRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetupRequest_ric_2dbill_2fricbill_2eproto.base);
  ctx_ = nullptr;
}

SetupRequest::~SetupRequest() {
  // @@protoc_insertion_point(destructor:ric.bill.SetupRequest)
  SharedDtor();
}

void SetupRequest::SharedDtor() {
  if (this != internal_default_instance()) delete ctx_;
}

void SetupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetupRequest& SetupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetupRequest_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void SetupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.SetupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && ctx_ != nullptr) {
    delete ctx_;
  }
  ctx_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetupRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetupRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .ric.bill.UserContext ctx = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::bill::UserContext::_InternalParse;
        object = msg->mutable_ctx();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.SetupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ric.bill.UserContext ctx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ctx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.SetupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.SetupRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.SetupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ric.bill.UserContext ctx = 1;
  if (this->has_ctx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::ctx(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.SetupRequest)
}

::google::protobuf::uint8* SetupRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.SetupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ric.bill.UserContext ctx = 1;
  if (this->has_ctx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::ctx(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.SetupRequest)
  return target;
}

size_t SetupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.SetupRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ric.bill.UserContext ctx = 1;
  if (this->has_ctx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ctx_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.SetupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.SetupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.SetupRequest)
    MergeFrom(*source);
  }
}

void SetupRequest::MergeFrom(const SetupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.SetupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ctx()) {
    mutable_ctx()->::ric::bill::UserContext::MergeFrom(from.ctx());
  }
}

void SetupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.SetupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupRequest::CopyFrom(const SetupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.SetupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupRequest::IsInitialized() const {
  return true;
}

void SetupRequest::Swap(SetupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupRequest::InternalSwap(SetupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ctx_, other->ctx_);
}

::google::protobuf::Metadata SetupRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetupResponse::InitAsDefaultInstance() {
}
class SetupResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupResponse::kBindingIdFieldNumber;
const int SetupResponse::kWidgetParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupResponse::SetupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.SetupResponse)
}
SetupResponse::SetupResponse(const SetupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  binding_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binding_id().size() > 0) {
    binding_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binding_id_);
  }
  widget_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.widget_params().size() > 0) {
    widget_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.widget_params_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.bill.SetupResponse)
}

void SetupResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetupResponse_ric_2dbill_2fricbill_2eproto.base);
  binding_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  widget_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetupResponse::~SetupResponse() {
  // @@protoc_insertion_point(destructor:ric.bill.SetupResponse)
  SharedDtor();
}

void SetupResponse::SharedDtor() {
  binding_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  widget_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetupResponse& SetupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetupResponse_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void SetupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.SetupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  binding_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  widget_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetupResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetupResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string binding_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.SetupResponse.binding_id");
        object = msg->mutable_binding_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string widget_params = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.SetupResponse.widget_params");
        object = msg->mutable_widget_params();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.SetupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string binding_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_binding_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->binding_id().data(), static_cast<int>(this->binding_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.SetupResponse.binding_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string widget_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_widget_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->widget_params().data(), static_cast<int>(this->widget_params().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.SetupResponse.widget_params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.SetupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.SetupResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.SetupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string binding_id = 1;
  if (this->binding_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binding_id().data(), static_cast<int>(this->binding_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SetupResponse.binding_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->binding_id(), output);
  }

  // string widget_params = 2;
  if (this->widget_params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->widget_params().data(), static_cast<int>(this->widget_params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SetupResponse.widget_params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->widget_params(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.SetupResponse)
}

::google::protobuf::uint8* SetupResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.SetupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string binding_id = 1;
  if (this->binding_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binding_id().data(), static_cast<int>(this->binding_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SetupResponse.binding_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->binding_id(), target);
  }

  // string widget_params = 2;
  if (this->widget_params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->widget_params().data(), static_cast<int>(this->widget_params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SetupResponse.widget_params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->widget_params(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.SetupResponse)
  return target;
}

size_t SetupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.SetupResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string binding_id = 1;
  if (this->binding_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->binding_id());
  }

  // string widget_params = 2;
  if (this->widget_params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->widget_params());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.SetupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SetupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.SetupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.SetupResponse)
    MergeFrom(*source);
  }
}

void SetupResponse::MergeFrom(const SetupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.SetupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.binding_id().size() > 0) {

    binding_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binding_id_);
  }
  if (from.widget_params().size() > 0) {

    widget_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.widget_params_);
  }
}

void SetupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.SetupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupResponse::CopyFrom(const SetupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.SetupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupResponse::IsInitialized() const {
  return true;
}

void SetupResponse::Swap(SetupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupResponse::InternalSwap(SetupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  binding_id_.Swap(&other->binding_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  widget_params_.Swap(&other->widget_params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetupResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DryRun::InitAsDefaultInstance() {
}
class DryRun::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DryRun::kAmountFieldNumber;
const int DryRun::kCurrencyFieldNumber;
const int DryRun::kNextPayFieldNumber;
const int DryRun::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DryRun::DryRun()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.DryRun)
}
DryRun::DryRun(const DryRun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amount().size() > 0) {
    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currency().size() > 0) {
    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  next_pay_ = from.next_pay_;
  // @@protoc_insertion_point(copy_constructor:ric.bill.DryRun)
}

void DryRun::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DryRun_ric_2dbill_2fricbill_2eproto.base);
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_pay_ = PROTOBUF_LONGLONG(0);
}

DryRun::~DryRun() {
  // @@protoc_insertion_point(destructor:ric.bill.DryRun)
  SharedDtor();
}

void DryRun::SharedDtor() {
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DryRun::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DryRun& DryRun::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DryRun_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void DryRun::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.DryRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_pay_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DryRun::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DryRun*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string amount = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.DryRun.amount");
        object = msg->mutable_amount();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string currency = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.DryRun.currency");
        object = msg->mutable_currency();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 next_pay = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_next_pay(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string messages = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ric.bill.DryRun.messages");
          object = msg->add_messages();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DryRun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.DryRun)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amount().data(), static_cast<int>(this->amount().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.DryRun.amount"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency().data(), static_cast<int>(this->currency().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.DryRun.currency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 next_pay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &next_pay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string messages = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_messages()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messages(this->messages_size() - 1).data(),
            static_cast<int>(this->messages(this->messages_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.DryRun.messages"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.DryRun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.DryRun)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DryRun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.DryRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string amount = 1;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.DryRun.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->amount(), output);
  }

  // string currency = 2;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), static_cast<int>(this->currency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.DryRun.currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->currency(), output);
  }

  // int64 next_pay = 3;
  if (this->next_pay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->next_pay(), output);
  }

  // repeated string messages = 4;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messages(i).data(), static_cast<int>(this->messages(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.DryRun.messages");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->messages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.DryRun)
}

::google::protobuf::uint8* DryRun::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.DryRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string amount = 1;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.DryRun.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->amount(), target);
  }

  // string currency = 2;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), static_cast<int>(this->currency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.DryRun.currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->currency(), target);
  }

  // int64 next_pay = 3;
  if (this->next_pay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->next_pay(), target);
  }

  // repeated string messages = 4;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messages(i).data(), static_cast<int>(this->messages(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.DryRun.messages");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->messages(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.DryRun)
  return target;
}

size_t DryRun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.DryRun)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string messages = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->messages_size());
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->messages(i));
  }

  // string amount = 1;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount());
  }

  // string currency = 2;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency());
  }

  // int64 next_pay = 3;
  if (this->next_pay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->next_pay());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DryRun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.DryRun)
  GOOGLE_DCHECK_NE(&from, this);
  const DryRun* source =
      ::google::protobuf::DynamicCastToGenerated<DryRun>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.DryRun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.DryRun)
    MergeFrom(*source);
  }
}

void DryRun::MergeFrom(const DryRun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.DryRun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  if (from.amount().size() > 0) {

    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.next_pay() != 0) {
    set_next_pay(from.next_pay());
  }
}

void DryRun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.DryRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DryRun::CopyFrom(const DryRun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.DryRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DryRun::IsInitialized() const {
  return true;
}

void DryRun::Swap(DryRun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DryRun::InternalSwap(DryRun* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  messages_.InternalSwap(CastToBase(&other->messages_));
  amount_.Swap(&other->amount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_.Swap(&other->currency_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(next_pay_, other->next_pay_);
}

::google::protobuf::Metadata DryRun::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SubscriptionRequest::InitAsDefaultInstance() {
  ::ric::bill::_SubscriptionRequest_default_instance_._instance.get_mutable()->ctx_ = const_cast< ::ric::bill::UserContext*>(
      ::ric::bill::UserContext::internal_default_instance());
}
class SubscriptionRequest::HasBitSetters {
 public:
  static const ::ric::bill::UserContext& ctx(const SubscriptionRequest* msg);
};

const ::ric::bill::UserContext&
SubscriptionRequest::HasBitSetters::ctx(const SubscriptionRequest* msg) {
  return *msg->ctx_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscriptionRequest::kCtxFieldNumber;
const int SubscriptionRequest::kLicenseIdFieldNumber;
const int SubscriptionRequest::kDryRunFieldNumber;
const int SubscriptionRequest::kParamsFieldNumber;
const int SubscriptionRequest::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscriptionRequest::SubscriptionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.SubscriptionRequest)
}
SubscriptionRequest::SubscriptionRequest(const SubscriptionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  license_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.license_id().size() > 0) {
    license_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_id_);
  }
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.params().size() > 0) {
    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_id().size() > 0) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  if (from.has_ctx()) {
    ctx_ = new ::ric::bill::UserContext(*from.ctx_);
  } else {
    ctx_ = nullptr;
  }
  dry_run_ = from.dry_run_;
  // @@protoc_insertion_point(copy_constructor:ric.bill.SubscriptionRequest)
}

void SubscriptionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SubscriptionRequest_ric_2dbill_2fricbill_2eproto.base);
  license_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ctx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dry_run_) -
      reinterpret_cast<char*>(&ctx_)) + sizeof(dry_run_));
}

SubscriptionRequest::~SubscriptionRequest() {
  // @@protoc_insertion_point(destructor:ric.bill.SubscriptionRequest)
  SharedDtor();
}

void SubscriptionRequest::SharedDtor() {
  license_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ctx_;
}

void SubscriptionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscriptionRequest& SubscriptionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SubscriptionRequest_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void SubscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.SubscriptionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  license_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && ctx_ != nullptr) {
    delete ctx_;
  }
  ctx_ = nullptr;
  dry_run_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SubscriptionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SubscriptionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .ric.bill.UserContext ctx = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::bill::UserContext::_InternalParse;
        object = msg->mutable_ctx();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string license_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.SubscriptionRequest.license_id");
        object = msg->mutable_license_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool dry_run = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_dry_run(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string params = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.SubscriptionRequest.params");
        object = msg->mutable_params();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string group_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.SubscriptionRequest.group_id");
        object = msg->mutable_group_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SubscriptionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.SubscriptionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ric.bill.UserContext ctx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ctx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string license_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_license_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->license_id().data(), static_cast<int>(this->license_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.SubscriptionRequest.license_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dry_run = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dry_run_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->params().data(), static_cast<int>(this->params().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.SubscriptionRequest.params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.SubscriptionRequest.group_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.SubscriptionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.SubscriptionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SubscriptionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.SubscriptionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ric.bill.UserContext ctx = 1;
  if (this->has_ctx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::ctx(this), output);
  }

  // string license_id = 2;
  if (this->license_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->license_id().data(), static_cast<int>(this->license_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionRequest.license_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->license_id(), output);
  }

  // bool dry_run = 3;
  if (this->dry_run() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->dry_run(), output);
  }

  // string params = 4;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), static_cast<int>(this->params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionRequest.params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->params(), output);
  }

  // string group_id = 5;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->group_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.SubscriptionRequest)
}

::google::protobuf::uint8* SubscriptionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.SubscriptionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ric.bill.UserContext ctx = 1;
  if (this->has_ctx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::ctx(this), target);
  }

  // string license_id = 2;
  if (this->license_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->license_id().data(), static_cast<int>(this->license_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionRequest.license_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->license_id(), target);
  }

  // bool dry_run = 3;
  if (this->dry_run() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->dry_run(), target);
  }

  // string params = 4;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), static_cast<int>(this->params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionRequest.params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->params(), target);
  }

  // string group_id = 5;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->group_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.SubscriptionRequest)
  return target;
}

size_t SubscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.SubscriptionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string license_id = 2;
  if (this->license_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->license_id());
  }

  // string params = 4;
  if (this->params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->params());
  }

  // string group_id = 5;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  // .ric.bill.UserContext ctx = 1;
  if (this->has_ctx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ctx_);
  }

  // bool dry_run = 3;
  if (this->dry_run() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscriptionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.SubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscriptionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SubscriptionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.SubscriptionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.SubscriptionRequest)
    MergeFrom(*source);
  }
}

void SubscriptionRequest::MergeFrom(const SubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.SubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.license_id().size() > 0) {

    license_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_id_);
  }
  if (from.params().size() > 0) {

    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  if (from.group_id().size() > 0) {

    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  if (from.has_ctx()) {
    mutable_ctx()->::ric::bill::UserContext::MergeFrom(from.ctx());
  }
  if (from.dry_run() != 0) {
    set_dry_run(from.dry_run());
  }
}

void SubscriptionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.SubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscriptionRequest::CopyFrom(const SubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.SubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscriptionRequest::IsInitialized() const {
  return true;
}

void SubscriptionRequest::Swap(SubscriptionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscriptionRequest::InternalSwap(SubscriptionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  license_id_.Swap(&other->license_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  params_.Swap(&other->params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_id_.Swap(&other->group_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ctx_, other->ctx_);
  swap(dry_run_, other->dry_run_);
}

::google::protobuf::Metadata SubscriptionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SubscriptionResponse::InitAsDefaultInstance() {
  ::ric::bill::_SubscriptionResponse_default_instance_._instance.get_mutable()->dry_run_ = const_cast< ::ric::bill::DryRun*>(
      ::ric::bill::DryRun::internal_default_instance());
}
class SubscriptionResponse::HasBitSetters {
 public:
  static const ::ric::bill::DryRun& dry_run(const SubscriptionResponse* msg);
};

const ::ric::bill::DryRun&
SubscriptionResponse::HasBitSetters::dry_run(const SubscriptionResponse* msg) {
  return *msg->dry_run_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscriptionResponse::kPaymentIdFieldNumber;
const int SubscriptionResponse::kJobIdFieldNumber;
const int SubscriptionResponse::kDryRunFieldNumber;
const int SubscriptionResponse::kLicenseIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscriptionResponse::SubscriptionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.SubscriptionResponse)
}
SubscriptionResponse::SubscriptionResponse(const SubscriptionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payment_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payment_id().size() > 0) {
    payment_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_id_);
  }
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  license_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.license_id().size() > 0) {
    license_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_id_);
  }
  if (from.has_dry_run()) {
    dry_run_ = new ::ric::bill::DryRun(*from.dry_run_);
  } else {
    dry_run_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ric.bill.SubscriptionResponse)
}

void SubscriptionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SubscriptionResponse_ric_2dbill_2fricbill_2eproto.base);
  payment_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dry_run_ = nullptr;
}

SubscriptionResponse::~SubscriptionResponse() {
  // @@protoc_insertion_point(destructor:ric.bill.SubscriptionResponse)
  SharedDtor();
}

void SubscriptionResponse::SharedDtor() {
  payment_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete dry_run_;
}

void SubscriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscriptionResponse& SubscriptionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SubscriptionResponse_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void SubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.SubscriptionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payment_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && dry_run_ != nullptr) {
    delete dry_run_;
  }
  dry_run_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SubscriptionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SubscriptionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string payment_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.SubscriptionResponse.payment_id");
        object = msg->mutable_payment_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string job_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.SubscriptionResponse.job_id");
        object = msg->mutable_job_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ric.bill.DryRun dry_run = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ric::bill::DryRun::_InternalParse;
        object = msg->mutable_dry_run();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string license_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.SubscriptionResponse.license_id");
        object = msg->mutable_license_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SubscriptionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.SubscriptionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string payment_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payment_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payment_id().data(), static_cast<int>(this->payment_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.SubscriptionResponse.payment_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.SubscriptionResponse.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ric.bill.DryRun dry_run = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dry_run()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string license_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_license_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->license_id().data(), static_cast<int>(this->license_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.SubscriptionResponse.license_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.SubscriptionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.SubscriptionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SubscriptionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.SubscriptionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payment_id = 1;
  if (this->payment_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment_id().data(), static_cast<int>(this->payment_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionResponse.payment_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->payment_id(), output);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionResponse.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_id(), output);
  }

  // .ric.bill.DryRun dry_run = 3;
  if (this->has_dry_run()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::dry_run(this), output);
  }

  // string license_id = 4;
  if (this->license_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->license_id().data(), static_cast<int>(this->license_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionResponse.license_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->license_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.SubscriptionResponse)
}

::google::protobuf::uint8* SubscriptionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.SubscriptionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payment_id = 1;
  if (this->payment_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment_id().data(), static_cast<int>(this->payment_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionResponse.payment_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->payment_id(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionResponse.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_id(), target);
  }

  // .ric.bill.DryRun dry_run = 3;
  if (this->has_dry_run()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::dry_run(this), target);
  }

  // string license_id = 4;
  if (this->license_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->license_id().data(), static_cast<int>(this->license_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.SubscriptionResponse.license_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->license_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.SubscriptionResponse)
  return target;
}

size_t SubscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.SubscriptionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payment_id = 1;
  if (this->payment_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payment_id());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  // string license_id = 4;
  if (this->license_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->license_id());
  }

  // .ric.bill.DryRun dry_run = 3;
  if (this->has_dry_run()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dry_run_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscriptionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.SubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscriptionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SubscriptionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.SubscriptionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.SubscriptionResponse)
    MergeFrom(*source);
  }
}

void SubscriptionResponse::MergeFrom(const SubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.SubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payment_id().size() > 0) {

    payment_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_id_);
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  if (from.license_id().size() > 0) {

    license_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_id_);
  }
  if (from.has_dry_run()) {
    mutable_dry_run()->::ric::bill::DryRun::MergeFrom(from.dry_run());
  }
}

void SubscriptionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.SubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscriptionResponse::CopyFrom(const SubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.SubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscriptionResponse::IsInitialized() const {
  return true;
}

void SubscriptionResponse::Swap(SubscriptionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscriptionResponse::InternalSwap(SubscriptionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  payment_id_.Swap(&other->payment_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  job_id_.Swap(&other->job_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  license_id_.Swap(&other->license_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dry_run_, other->dry_run_);
}

::google::protobuf::Metadata SubscriptionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReceiptRequest::InitAsDefaultInstance() {
}
class ReceiptRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReceiptRequest::kPaymentIdFieldNumber;
const int ReceiptRequest::kPaymentGateFieldNumber;
const int ReceiptRequest::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReceiptRequest::ReceiptRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.ReceiptRequest)
}
ReceiptRequest::ReceiptRequest(const ReceiptRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payment_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payment_id().size() > 0) {
    payment_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_id_);
  }
  payment_gate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payment_gate().size() > 0) {
    payment_gate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_gate_);
  }
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.params().size() > 0) {
    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  // @@protoc_insertion_point(copy_constructor:ric.bill.ReceiptRequest)
}

void ReceiptRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReceiptRequest_ric_2dbill_2fricbill_2eproto.base);
  payment_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_gate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReceiptRequest::~ReceiptRequest() {
  // @@protoc_insertion_point(destructor:ric.bill.ReceiptRequest)
  SharedDtor();
}

void ReceiptRequest::SharedDtor() {
  payment_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_gate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReceiptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReceiptRequest& ReceiptRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReceiptRequest_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void ReceiptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.ReceiptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payment_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_gate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReceiptRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReceiptRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string payment_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.ReceiptRequest.payment_id");
        object = msg->mutable_payment_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string payment_gate = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.ReceiptRequest.payment_gate");
        object = msg->mutable_payment_gate();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string params = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ric.bill.ReceiptRequest.params");
        object = msg->mutable_params();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReceiptRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.ReceiptRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string payment_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payment_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payment_id().data(), static_cast<int>(this->payment_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.ReceiptRequest.payment_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string payment_gate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payment_gate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payment_gate().data(), static_cast<int>(this->payment_gate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.ReceiptRequest.payment_gate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->params().data(), static_cast<int>(this->params().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ric.bill.ReceiptRequest.params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.ReceiptRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.ReceiptRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReceiptRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.ReceiptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payment_id = 1;
  if (this->payment_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment_id().data(), static_cast<int>(this->payment_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.ReceiptRequest.payment_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->payment_id(), output);
  }

  // string payment_gate = 2;
  if (this->payment_gate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment_gate().data(), static_cast<int>(this->payment_gate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.ReceiptRequest.payment_gate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->payment_gate(), output);
  }

  // string params = 3;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), static_cast<int>(this->params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.ReceiptRequest.params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->params(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.ReceiptRequest)
}

::google::protobuf::uint8* ReceiptRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.ReceiptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payment_id = 1;
  if (this->payment_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment_id().data(), static_cast<int>(this->payment_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.ReceiptRequest.payment_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->payment_id(), target);
  }

  // string payment_gate = 2;
  if (this->payment_gate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment_gate().data(), static_cast<int>(this->payment_gate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.ReceiptRequest.payment_gate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->payment_gate(), target);
  }

  // string params = 3;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), static_cast<int>(this->params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ric.bill.ReceiptRequest.params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->params(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.ReceiptRequest)
  return target;
}

size_t ReceiptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.ReceiptRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payment_id = 1;
  if (this->payment_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payment_id());
  }

  // string payment_gate = 2;
  if (this->payment_gate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payment_gate());
  }

  // string params = 3;
  if (this->params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->params());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReceiptRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.ReceiptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReceiptRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ReceiptRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.ReceiptRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.ReceiptRequest)
    MergeFrom(*source);
  }
}

void ReceiptRequest::MergeFrom(const ReceiptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.ReceiptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payment_id().size() > 0) {

    payment_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_id_);
  }
  if (from.payment_gate().size() > 0) {

    payment_gate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_gate_);
  }
  if (from.params().size() > 0) {

    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
}

void ReceiptRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.ReceiptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceiptRequest::CopyFrom(const ReceiptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.ReceiptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiptRequest::IsInitialized() const {
  return true;
}

void ReceiptRequest::Swap(ReceiptRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReceiptRequest::InternalSwap(ReceiptRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  payment_id_.Swap(&other->payment_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payment_gate_.Swap(&other->payment_gate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  params_.Swap(&other->params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReceiptRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReceiptResponse::InitAsDefaultInstance() {
}
class ReceiptResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReceiptResponse::ReceiptResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.ReceiptResponse)
}
ReceiptResponse::ReceiptResponse(const ReceiptResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ric.bill.ReceiptResponse)
}

void ReceiptResponse::SharedCtor() {
}

ReceiptResponse::~ReceiptResponse() {
  // @@protoc_insertion_point(destructor:ric.bill.ReceiptResponse)
  SharedDtor();
}

void ReceiptResponse::SharedDtor() {
}

void ReceiptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReceiptResponse& ReceiptResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReceiptResponse_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void ReceiptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.ReceiptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReceiptResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReceiptResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReceiptResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.ReceiptResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.ReceiptResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.ReceiptResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReceiptResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.ReceiptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.ReceiptResponse)
}

::google::protobuf::uint8* ReceiptResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.ReceiptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.ReceiptResponse)
  return target;
}

size_t ReceiptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.ReceiptResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReceiptResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.ReceiptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReceiptResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ReceiptResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.ReceiptResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.ReceiptResponse)
    MergeFrom(*source);
  }
}

void ReceiptResponse::MergeFrom(const ReceiptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.ReceiptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReceiptResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.ReceiptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceiptResponse::CopyFrom(const ReceiptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.ReceiptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiptResponse::IsInitialized() const {
  return true;
}

void ReceiptResponse::Swap(ReceiptResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReceiptResponse::InternalSwap(ReceiptResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReceiptResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bill
}  // namespace ric
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ric::bill::UserContext* Arena::CreateMaybeMessage< ::ric::bill::UserContext >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::UserContext >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bill::SetupRequest* Arena::CreateMaybeMessage< ::ric::bill::SetupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::SetupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bill::SetupResponse* Arena::CreateMaybeMessage< ::ric::bill::SetupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::SetupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bill::DryRun* Arena::CreateMaybeMessage< ::ric::bill::DryRun >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::DryRun >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bill::SubscriptionRequest* Arena::CreateMaybeMessage< ::ric::bill::SubscriptionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::SubscriptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bill::SubscriptionResponse* Arena::CreateMaybeMessage< ::ric::bill::SubscriptionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::SubscriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bill::ReceiptRequest* Arena::CreateMaybeMessage< ::ric::bill::ReceiptRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::ReceiptRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bill::ReceiptResponse* Arena::CreateMaybeMessage< ::ric::bill::ReceiptResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::ReceiptResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
